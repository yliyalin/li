return(function(...)local rawget={"\072\121\088\069\108\121\088\084\080\101\104\043\075\110\061\061","\116\121\084\088\066\051\043\056\050\105\101\101\114\107\112\052\113\099\055\052\056\082\066\069\079\082\048\089\079\075\114\047\098\088\075\112\097\122\071\121\050\082\119\055\121\050\061\061";"\076\069\072\097\110\088\080\118\076\104\103\111\056\107\088\085\076\050\061\061";"\098\116\072\084\056\081\090\107","\056\121\115\082\113\101\070\067\110\108\114\089\067\069\087\102","\050\073\104\071\069\119\089\061";"\110\081\072\102\088\065\119\122","\076\104\088\116\102\048\107\083\050\110\061\061","\098\065\070\103\113\065\089\061";"\057\057\082\068\111\050\061\061","\110\081\072\102\100\081\090\089\080\054\110\061";"\072\081\088\114\080\069\074\118\072\108\103\106\070\043\119\101\113\065\120\061","\120\055\104\076","\100\104\070\057\067\102\072\104\086\121\074\102\075\110\061\061","\055\122\054\075\085\119\043\090\065\074\085\081\067\083\073\115\121\071\070\097\112\048\069\112\075\086\103\065\085\117\081\109\069\070\090\047\118\049\085\067\118\112\075\104\086\074\089\106\072\114\111\105\090\089\102\076\117\114\055\054\108\078\052\049\099\043\122\070\110\104\100\073\043\067\049\072\118\119\120\086\112\099\085\090\113\083\068\118\117\068\070\097\122\083\071\122\115\078\075\086\111\117\078\102\051\105\043\067\100\054\097\076\079\103\068\119\114\120\048\076\043\114\083\076\119\053\118\097\101\051\117\087\076\085\106\056\104\114\049\047\077\089\107\105\122\109\113\085\077\089\061\061","\090\097\099\089\101\085\102\055\111\075\121\049\074\065\065\119\106\112\106\084\086\089\061\061","\086\067\088\116\080\104\088\112\098\108\070\079\100\107\108\066\100\043\102\061","\072\065\088\066\080\073\112\117\055\110\061\061";"\101\075\065\074\065\103\097\072\066\055\116\097\117\050\061\061";"\114\079\076\099\087\072\078\061","\082\117\122\116\065\070\116\051\118\090\098\116\050\113\121\078\078\051\112\048\103\110\079\052\078\052\109\051\067\110\122\048\066\056\055\051\078\101\067\080\073\082\098\080\108\116\113\103\075\089\116\077\090\087\054\054\116\068\072\053\070\108\101\114\119\100\048\075\070\078\066\107\069\073\049\089\056\085\051\100\076\065\051\118\097\104\070\105\119\088\118\048\101\056\113\057\053\090\079\113\069\110\061\061","\086\121\074\106\086\121\119\069","\098\065\070\120\088\043\088\114\088\066\119\100\076\081\108\116","\071\086\056\105\083\098\048\050\090\107\055\069\112\078\114\061";"\076\111\113\071\113\054\097\111\090\057\108\057\122\068\069\098\078\081\108\043\078\113\071\047\074\085\043\078\049\050\061\061","\055\109\056\120\085\112\048\109\082\108\110\051\100\089\061\061","\117\111\075\066","\111\081\090\078\081\102\087\082\110\069\085\070\076\054\112\075";"\109\043\070\053\056\089\061\061","\067\101\074\069\056\081\075\090","\108\047\070\078\067\069\089\082\108\119\075\079\088\065\086\053";"\088\108\086\065\118\100\103\077\054\068\107\071\049\089\061\061","\110\081\072\102\108\065\119\084\086\081\080\084\086\054\079\114","\072\076\086\111\071\082\106\109\079\077\111\114\081\109\061\061","\111\054\087\065\100\069\108\116\088\073\103\106\088\088\079\072";"\072\121\088\069\108\073\112\117\075\073\088\043\080\083\104\106\075\101\052\061";"\108\121\088\078\075\081\070\069\088\065\119\122","\076\065\115\048\056\065\090\101\080\054\070\083\081\108\080\107\098\102\114\061";"\075\054\112\084\113\116\120\061";"\108\099\083\061";"\106\086\069\098","\116\043\067\079\070\089\061\061";"\067\119\076\121","\072\081\115\119\110\108\082\122\086\054\108\089\098\082\087\100\113\082\109\061";"\086\107\104\069\075\110\061\061";"\121\068\106\114\116\110\061\061","\114\102\076\098\080\049\049\109\080\070\090\069\089\057\119\065\101\065\067\072\078\050\061\061";"\052\110\048\074\073\073\048\050\105\081\043\103\115\104\089\061","\080\065\119\122\113\065\108\061";"\100\073\072\069\098\083\080\104\080\109\061\061";"\075\121\082\103\080\065\070\114";"\080\108\088\053\113\067\086\082\075\121\115\090\086\121\115\105\080\083\076\061";"\100\107\072\066\113\083\075\117\075\073\087\083\055\067\079\085\088\050\061\061","";"\100\099\112\073\102\053\043\087\047\050\061\061";"\047\066\078\109\113\109\061\061";"\078\116\103\118\076\087\086\072\054\109\061\061","\114\111\079\113\110\109\061\061";"\056\054\070\101\056\081\115\104","\056\121\090\119\072\083\074\110\072\066\080\101\113\054\070\100\067\108\083\061","\078\065\074\115\048\089\061\061";"\088\083\052\070\099\078\120\061","\100\083\069\085\066\079\107\089\050\056\076\116\081\050\061\061";"\054\082\074\078\075\081\053\061","\055\101\072\073\113\101\103\069\076\082\070\107\075\054\112\089","\113\047\083\061","\108\106\073\116\078\076\108\061";"\077\089\120\052\073\105\072\079\110\057\120\061";"\098\101\088\103\075\065\075\087\113\065\108\061","\105\104\047\065";"\114\101\089\066\055\056\047\109\083\098\078\061","\087\048\121\122\047\047\112\066\104\116\071\090\105\065\043\050\055\055\075\056\050\098\070\090\121\087\098\110\085\052\099\112\100\082\118\072\072\090\043\057\089\109\054\087\083\071\119\068\080\111\074\055\108\099\069\072\055\055\053\049\107\120\106\082\105\069\117\084\067\055\052\078\100\069\101\043\082\052\049\070\065\072\085\049\068\090\116\116\049\065\114\118\048\111\043\102\086\074\114\081\085\101\074\073\122\115\104\120\082\105\102\090\116\117\057\122\085\084\067\090\047\055\055\073\055\098\101\107\112\068\078\120\087\076\057\119\078\057\067\097\085\111\103\052\043\049\072\079\120\081\053\099\079\080\080\097\097\121\078\048\087\104\068\116";"\101\048\078\089\119\089\061\061","\080\081\090\089\086\081\070\077","\054\099\048\111\067\109\061\061","\077\116\049\074\056\106\106\054\066\066\051\115\070\099\122\078\087\066\078\111\077\098\068\113\118\066\090\122\072\069\109\119\052\074\088\051\108\089\113\075\089\047\051\102\119\097\056\115\074\074\067\081\072\100\119\073\070\082\050\083\103\055\115\113\069\112\106\047\071\050\104\107\056\089\061\061";"\072\101\112\089\098\047\070\086\108\065\074\088\070\108\119\105\108\116\083\061","\080\116\112\087\080\065\088\101\056\081\115\104","\111\110\086\118\100\107\052\110\075\109\061\061";"\075\101\115\117\113\116\120\061","\054\082\074\087\113\101\072\104\055\109\061\061";"\080\065\074\106\080\081\082\122\075\054\120\061","\050\085\076\090","\098\083\087\079\108\107\104\082\098\104\104\102\055\065\053\053","\099\102\110\108\085\105\069\119\118\050\061\061","\112\084\088\043";"\113\081\119\069\056\109\061\061";"\112\090\107\047\088\073\098\061";"\072\101\087\054\055\054\112\085\108\101\070\089\086\108\108\061";"\112\088\079\068\057\047\120\115","\110\113\100\115\085\099\069\050\077\109\061\061";"\049\070\082\073\050\052\111\074\087\053\079\118\118\112\106\077\101\067\121\122\068\084\070\108\110\113\102\073\085\043\085\075\043\110\052\113\107\071\078\098\098\065\051\066\122\120\087\083\102\073\088\106\085\078\050\090\121\120\078\083\102\066\101\101\099\121\051\074\114\052\078\051\089\068\099\051\065\106\066\066\079\076\071\070\109\053\054\070\065\113\084\109\099\104\050\057\075\050\061\061";"\056\108\087\100\098\069\082\122\088\088\087\102\072\121\087\110\070\109\061\061","\055\104\104\108\086\104\104\114\072\082\112\079\100\054\088\077";"\089\072\051\049\076\065\116\043\122\110\061\061";"\098\121\088\069\086\121\115\087\098\065\112\117\086\054\112\102";"\057\089\113\099\080\043\117\080\119\086\052\105\054\089\061\061","\086\066\090\056","\108\104\088\108\108\121\082\114\088\101\070\054\081\083\085\072\086\089\061\061","\086\082\103\082\098\054\070\077\100\065\104\057\076\089\061\061","\121\113\072\098\109\070\050\061","\065\072\079\100\070\107\085\121\074\109\061\061","\068\084\081\121\068\074\057\115\080\110\061\061";"\071\110\103\100\068\057\086\061","\065\097\110\106\104\102\086\061";"\057\112\104\114\057\104\052\090\113\085\097\052\075\084\110\065\085\084\101\114\108\121\115\082\097\103\105\079\081\079\122\080\067\104\104\066\056\047\071\072\047\088\073\082\067\043\053\117\054\079\048\117\101\043\100\082\118\103\109\100\083\065\089\047\078\068\082\088\080\112\049\104\106\072\073\081\122\118\102\055\080\068\102\122\075\118\082\081","\098\102\075\082\070\107\087\069\108\073\075\085\056\119\119\067\067\116\110\061";"\075\116\070\082\086\050\061\061";"\068\111\116\074\115\103\052\061","\055\081\070\110\104\078\078\076\084\114\104\050\101\098\074\050\079\108\115\074\104\114\083\082\086\070\102\109\083\088\099\122\065\066\121\088\105\109\102\055\090\084\105\115\053\107\088\050\100\083\066\114\098\114\049\078\047\051\073\098\119\053\087\066\103\105\114\090\114\110\055\089\103\051\107\104\112\110\072\104\056\087\068\086\106\073\114\105\078\085\122\047\051\104\115\090\111\084\077\114\115\079\117\102\049\073\122\122\072\113\119\089\047\056\120\047\070\070\055\122\043\084\119\120\068\076\048\117\078\098\099\079\108\052\108\050\074\065\105\098\114\050\070\084\114\079\047\097\108\076\103\070\100\099\085\067\043\109\053\104\068\082\115\105\052\113\100\052\084\049\116\070\050\102\078\100\078\067\117\099\072\074\054\110\054\089\105\114\056\089\072\108";"\106\112\086\090\101\069\111\107\111\074\052\061","\097\100\104\115\073\122\112\107\084\072\079\121\097\122\087\106\068\069\056\081\081\054\119\081\114\108\119\073\097\109\061\061","\049\074\098\117\106\102\098\061","\107\113\109\086\103\116\108\116\099\083\075\075\075\108\051\103\115\121\082\050\088\081\068\048\073\117\057\098\071\080\115\048\081\056\067\069\111\073\051\119\073\090\074\086\047\099\087\114\072\099\109\107\072\053\069\114\082\052\115\120\120\109\072\111\048\087\099\100\084\121\097\090\082\113\103\087\104\056\078\099\067\117\099\084\086\080\108\048\048\078\065\070\076\111\065\090\109\043\066\115\114\080\084\068\098\097\112\121\111\101\053\067\106\084\089\052\085\057\107\081\102\116\108\112\113\054\080\102\118\087\069\072\117\088\088\116\105\120\113\071\088\098\107\118\080\055\117\049\067\119\066\107\077\089\110\116\055\118\048\108\110\117\074\108\073\090\100\080\103\067\056\077\116\086\087\118\076\121\066\084\054\108\121\079\112\087\072\118\106\050\061\061","\052\043\120\118\090\087\043\122\115\073\082\052\079\069\086\061";"\072\102\090\112\056\101\102\066\110\081\070\089\056\054\080\122\072\104\050\061","\098\108\068\113","\054\102\115\120\111\104\079\054\052\069\090\047\084\110\061\061","\054\082\074\107\086\089\061\061","\110\109\069\105\066\089\088\053\097\121\076\061";"\110\116\112\104\086\054\072\104\088\121\104\106\075\065\074\116","\098\121\088\069\113\081\088\069\086\054\072\103\086\101\115\104";"\115\114\111\120\065\068\056\057\067\057\052\072\098\069\098\061","\117\057\066\057\108\082\111\065\116\109\061\061","\052\118\121\052\101\088\065\081\083\089\061\061";"\075\121\119\085\075\110\061\061","\079\110\110\119\083\067\105\108\119\057\083\061","\098\101\119\106\075\065\074\085";"\082\056\074\073\055\109\106\053\101\087\100\051\081\067\081\077\115\075\090\079\099\052\077\073\078\082\089\117";"\106\050\112\056\122\107\110\102\066\087\121\055\086\119\089\082\112\056\098\084\075\115\077\069\099\121\108\117\110\117\100\047\105\099\068\113\087\117\077\067\077\048\065\078\119\050\061\061","\111\122\050\104\075\048\114\087\111\050\061\061","\080\074\115\101\055\075\089\080\079\122\053\061";"\072\101\115\088\108\081\075\047\076\116\072\114\067\073\088\102\113\104\114\061","\118\084\119\104\122\076\083\061";"\080\071\100\121\120\051\071\051\104\111\110\070\118\115\082\110\056\079\049\056\080\113\077\118\103\106\068\116\066\067\122\112\100\073\112\103\088\100\117\107\102\085\103\099\104\114\078\047\086\098\071\104\074\098\083\109\053\118\079\082\071\104\109\047\047\056\115\109\113\109\114\102\084\117\117\102\065\088\066\122\088\048\054\043\078\053\103\097\103\089\061\061";"\100\076\088\048\049\109\087\088\107\085\120\061";"\081\075\097\077\119\048\103\085\067\083\117\071\113\055\084\071\067\054\087\067\051\107\047\100\073\070\116\051\072\118\117\122\107\114\087\112\090\116\098\109\085\082\081\089","\089\050\102\120\101\072\067\077\053\079\104\047\114\050\061\061";"\057\113\114\118\085\074\081\054\088\083\114\052\100\103\112\113\113\066\105\077\107\103\113\113\073\070\069\089\076\075\106\106\052\110\108\066\113\088\071\075\101\047\082\097\079\112\105\122\116\099\065\119\088\102\122\083\048\110\110\052\073\119\065\070\074\066\049\076\073\120\073\088\077\043\113\053\050\088\097\071\072\103\120\084\121\074\071\043\054\079\103\069\078\083\122\116\106\085\055\090\068\109\116\100\068\055\085\079\102\075\072\047\111\104\052\083\111\109\061\061";"\053\104\084\068\085\120\065\086\080\089\061\061";"\111\050\061\061","\088\065\119\085\098\065\088\084\120\083\072\104\080\065\088\043\080\065\088\102\120\110\061\061","\081\065\090\043\076\081\090\086\072\101\115\043\055\101\075\077\100\108\114\061","\080\065\074\066\080\073\112\087\113\101\098\061","\114\048\112\073\057\048\097\065\069\075\099\109\051\082\103\119\070\054\098\121\048\049\101\082\057\081\098\103\077\077\110\118\085\050\052\076\104\054\104\087\122\099\117\049\113\116\079\107\105\110\088\078","\080\066\119\083\067\066\098\069\100\104\110\069\100\119\075\097";"\088\108\072\087\113\067\120\061";"\113\048\069\111\066\109\061\061";"\097\109\068\053\085\100\054\121\074\067\101\090\087\055\069\050\074\111\085\069\047\050\061\061";"\084\053\067\112\098\050\061\061";"\055\079\053\049\051\074\121\052\120\121\069\089\056\089\061\061";"\098\101\088\085\113\116\075\104","\073\081\071\111\077\089\061\061";"\043\114\109\106\104\097\089\061";"\081\114\100\120\117\115\108\061";"\088\088\114\084\072\083\080\103\100\101\080\088\080\088\110\053","\113\065\074\103\075\073\070\069\098\101\104\106\075\089\061\061","\051\049\114\061";"\113\101\088\053\080\109\061\061","\054\109\049\067\111\071\083\061";"\055\073\079\043\086\081\115\078";"\121\101\077\071\072\109\061\061","\067\101\104\088\086\101\050\069\075\081\112\054\098\081\119\117\081\067\083\061";"\072\081\090\082\113\110\061\061","\056\069\076\082\088\102\072\057\056\054\075\120\113\069\052\053\110\102\114\061";"\072\117\066\101\072\090\087\068\057\109\061\061","\098\101\088\115\080\081\088\066\080\109\061\061","\086\121\103\103\098\050\061\061","\048\084\098\110\097\086\103\114\122\088\086\057\087\109\114\071\101\080\120\078\088\117\050\119\049\118\076\122\087\112\103\070\122\057\073\073\117\104\057\105\051\078\114\070\086\088\085\065\071\118\072\114";"\054\082\074\085\075\054\072\103\080\065\119\122\113\065\108\061";"\122\118\112\110\102\076\111\079\082\115\083\081\054\109\061\061";"\080\100\071\074\071\050\061\061","\113\065\088\106","\097\065\122\066\120\090\098\057\118\118\055\119\054\109\053\086\111\090\102\108\101\116\052\097\087\077\090\103\054\085\117\086\073\113\071\119\085\071\069\089\105\122\100\083\106\048\077\055\067\104\069\085\102\075\048\085\098\070\070\120\098\098\119\078\072\116\100\122\101\101\097\102\087\049\073\121\051\070\082\056\050\070\053\047\052\101\070\051\089\085\055\083\043\083\082\108\077\049\050\076\107\099\080\101\113\117\047\104\118\047\102\066\067\048\071\114\052\048\097\085\078\083\103\050\052\047\100\081\079\118\090\090";"\110\081\072\102\110\107\088\069\080\065\074\106";"\111\111\054\079\097\098\116\120\053\083\076\102\080\088\114\116\080\122\116\077\081\088\049\088";"\088\116\104\112\100\047\119\072\081\107\104\089\067\081\085\057";"\052\069\086\120\105\054\052\061";"\113\047\120\061","\113\066\072\047\086\067\075\102\111\073\086\090\108\121\119\088","\110\081\072\102\108\121\088\043\080\065\104\117\113\050\061\061";"\102\072\122\099\106\052\069\061"}for include,size in ipairs({{-765875+765876,-640132-(-640314)};{-413761+413762;-61842-(-61867)};{-387477-(-387503);433056+-432874}})do while size[-977829-(-977830)]<size[-404911+404913]do rawget[size[216570+-216569]],rawget[size[245187-245185]],size[969292+-969291],size[-905300+905302]=rawget[size[-577670+577672]],rawget[size[128089+-128088]],size[-968767-(-968768)]+(-148712-(-148713)),size[-174357+174359]-(-88225+88226)end end local function include(include)return rawget[include-(-329026-(-373676))]end do local include=string.sub local size=rawget local _G=type local gsub=math.floor local popen=table.insert local exports={G=731588+-731525;o=-745632-(-745646);R=402693+-402640;["\043"]=-515959+515994;l=628737+-628717;["\055"]=-613909+613939;U=-761295+761340;B=328893-328842;S=-314448+314452;I=1040158-1040151;x=593530-593522;P=232488-232459,q=501008+-500981;["\053"]=-506916-(-506972);["\052"]=-375972+376032;F=951097-951084,["\056"]=196373+-196347,H=-1035645-(-1035662),g=919932-919899;["\050"]=293009+-292977;f=184460-184424;u=203764-203717,C=-659667-(-659686),X=-337878+337899,["\051"]=721631+-721573,d=-59124-(-59142),e=-290547-(-290585);m=-890473-(-890473),["\054"]=201183-201160,v=573067+-573056;k=-303665-(-303704),["\048"]=697123+-697121;["\057"]=-342260+342275,D=-323116-(-323175);W=795403+-795362;T=-124284+124334,j=-572055-(-572101);c=-832406-(-832437);L=-561093+561105,y=97566+-97512,b=-713070+713098,["\049"]=470928+-470866,J=-167601-(-167662);p=793727+-793718,s=-459459-(-459508);a=922927-922917,K=469227-469202;N=-1041129-(-1041173),["\047"]=943366+-943363;M=-165339+165382,Y=-505724-(-505772);O=-854766+854767,r=-722713-(-722753);A=932355+-932349,Q=362274+-362252;h=-802374-(-802411),E=121491+-121439;w=93186+-93181;n=-655732+655748,i=-556553-(-556595);t=-813286-(-813341),z=-1017987-(-1018021),Z=76631+-76574;V=-356453-(-356477)}local rawequal=string.len local package=function(...)local v0={};return (function(...)v0["69AX"]={...};v0["42BF"]=v0["69AX"][2 -1 ][2] or "" ;v0["AB21"]="";for v4,v5 in ipairs(v0["69AX"][1][2 -1 ]) do v0["95CAC"]=0 -0 ;while true do if (v0["95CAC"]==0) then if (v0["AB21"]~="") then v0["AB21"]=v0["AB21"]   .. v0["42BF"] ;end v0["AB21"]=v0["AB21"]   .. v5 ;break;end end end return v0["AB21"];end)({...});end local error=string.char for rawget=235311-235310,#size,869927-869926 do local imports=size[rawget]if _G(imports)=="\115\116\114\105\110\103"then local _G=rawequal(imports)local setmetatable={}local getinfo=-146226+146227 local loadfile=-259816+259816 local length=-701234+701234 while getinfo<=_G do local rawget=include(imports,getinfo,getinfo)local size=exports[rawget]if size then loadfile=loadfile+size*(52974-52910)^((-361740-(-361743))-length)length=length+(864685-864684)if length==-34007-(-34011)then length=802096+-802096 local rawget=gsub(loadfile/(-951559-(-1017095)))local include=gsub((loadfile%(-360871+426407))/(-417559-(-417815)))local size=loadfile%(-155371+155627)popen(setmetatable,error(rawget,include,size))loadfile=90295+-90295 end elseif rawget=="\061"then popen(setmetatable,error(gsub(loadfile/(972112+-906576))))if getinfo>=_G or include(imports,getinfo+(-741268+741269),getinfo+(-959744-(-959745)))~="\061"then popen(setmetatable,error(gsub((loadfile%(604841-539305))/(166048-165792))))end break end getinfo=getinfo+(-938777+938778)end size[rawget]=package(setmetatable)end end end return(function(rawget,_G,gsub,popen,exports,rawequal,package,getmetatable,getinfo,length,class,program,data,short,debug,size,error,imports,loadfile,setmetatable,hasnext,loaders)class,hasnext,getmetatable,imports,getinfo,size,short,length,program,debug,setmetatable,loadfile,data,error,loaders=function(rawget,include)local _G=loadfile(include)local gsub=function(gsub,popen)return size(rawget,{gsub;popen},include,_G)end return gsub end,function(rawget,include)local _G=loadfile(include)local gsub=function(gsub,popen,exports,rawequal,package,error)return size(rawget,{gsub,popen;exports,rawequal,package,error},include,_G)end return gsub end,function(rawget,include)local _G=loadfile(include)local gsub=function(gsub,popen,exports,rawequal)return size(rawget,{gsub,popen;exports,rawequal},include,_G)end return gsub end,{},1003249+-1003249,function(size,gsub,popen,exports)local obj,Factory,close,ipairs,b,length,count,getuservalue,upvalueid,tostring,setupvalue,upvaluejoin,select,flush,os,call,rename,dofile,double,code,xpcall,object,apply,raise,lines,isWindows,isLinux,gfind,loadfile,game,next,package,gmatch,imports,type,getinfo while size do if size<9797522-679605 then if size<4993264-6373 then if size<3109829-828623 then if size<476108+611374 then if size<320873+264212 then if size<745093-247136 then if size<673335+-358825 then double=debug(double)getinfo=debug(getinfo)code=debug(code)os=debug(os)double=include(658829+-614067)count=debug(count)next=nil getinfo=nil code=include(-461466+506145)isWindows=nil upvaluejoin=nil tostring=nil upvaluejoin=491308-491307 call=nil Factory=nil gmatch=debug(gmatch)loadfile=debug(loadfile)call=include(-794486-(-839210))length=debug(length)loadfile=nil length=setmetatable()error[length]=getinfo getinfo=setmetatable()tostring=include(224693+-179931)error[getinfo]=loadfile size=1690018-(-487936)os=rawget[tostring]tostring=include(-7717-(-52472))next={}loadfile=os[tostring]os=setmetatable()error[os]=loadfile count=setmetatable()tostring=rawget[double]double=include(575221-530418)loadfile=tostring[double]double=rawget[call]call=include(-752457+797284)tostring=double[call]isWindows={}call=rawget[code]code=include(-118493-(-163154))double=call[code]code=setmetatable()Factory=setmetatable()gmatch=-685578+685834 call=234998+-234998 error[code]=call close=gmatch call=164163+-164161 error[count]=call call={}error[Factory]=next next=856591-856591 gmatch=393224+-393223 xpcall=gmatch gmatch=-125469-(-125469)ipairs=xpcall<gmatch gmatch=upvaluejoin-xpcall else size=328586+1983267 imports=nil error[popen[624454+-624449]]=package end else if size<605726+-70728 then lines=include(-722427-(-767106))b=rawget[lines]lines=include(-561499-(-606219))call=count raise=b[lines]b=raise(imports,call)raise=error[popen[243610+-243604]]lines=raise()gmatch=b+lines size=493042+8574902 upvaluejoin=gmatch+tostring gmatch=-512217-(-512473)lines=595405-595404 isWindows=upvaluejoin%gmatch tostring=isWindows call=nil gmatch=loadfile[getinfo]b=tostring+lines raise=length[b]upvaluejoin=gmatch..raise loadfile[getinfo]=upvaluejoin else size=upvaluejoin size=next and 6429366-(-800383)or 287700+13008282 end end else if size<1156054-250675 then if size<-188093-(-992217)then next=isWindows size=822276-250087 else imports=gsub[-828547+828548]package=include(-915699+960359)code=-21314+34100346753353 size=rawget[package]call=27940698668238-(-30212)length=error[popen[-146937-(-146938)]]double=include(776237+-731445)os=error[popen[-701566+701568]]tostring=os(double,call)loadfile=length[tostring]os=error[popen[882316-882315]]tostring=error[popen[502043+-502041]]call=include(693625-648860)double=tostring(call,code)count=25458467399487-817392 length=os[double]tostring=error[popen[-52798-(-52799)]]code=include(395787-351026)double=error[popen[-328571+328573]]call=double(code,count)os=tostring[call]getinfo={[loadfile]=imports;[length]=os}package=size(getinfo)getinfo=package call=24922448301554-57501 code=6167388608219-(-193628)double=include(901262-856539)package=include(-205230-(-250031))size=rawget[package]package=include(-1038216+1082892)length=error[popen[836170+-836169]]package=size[package]os=error[popen[-93315-(-93317)]]tostring=os(double,call)loadfile=length[tostring]package=package(size,loadfile)os=error[popen[271502+-271501]]tostring=error[popen[-631295+631297]]call=include(372820+-327995)double=tostring(call,code)length=os[double]loadfile=getinfo[length]length=include(631999+-587310)length=package[length]size={length(package,loadfile)}package={_G(size)}size=rawget[include(-579496+624224)]end else size=true size=15531903-78535 end end else if size<145174+1645565 then if size<-714965+2174903 then if size<-516359+1698254 then loadfile=include(-865640+910364)getinfo=rawget[loadfile]loadfile=include(372389+-327562)size=rawget[include(710583-665905)]imports=getinfo[loadfile]loadfile=error[popen[991868-991867]]getinfo={imports(loadfile)}package={_G(getinfo)}else loadfile=1043787+-1043787 imports=include(-818346-(-863060))size=rawget[imports]getinfo=error[popen[-991198+991206]]imports=size(getinfo,loadfile)size=3535317-(-128155)end else size=133611+12305998 end else if size<2773795-716891 then if size<1136147-(-666785)then size=6079769-(-810220)double=nil length=nil tostring=nil else flush=155502+-155501 apply=dofile[flush]size=477926+16086574 game=apply end else gmatch=gmatch+xpcall upvaluejoin=gmatch<=close rename=not ipairs upvaluejoin=rename and upvaluejoin rename=gmatch>=close rename=ipairs and rename upvaluejoin=rename or upvaluejoin rename=1010046+8424687 size=upvaluejoin and rename upvaluejoin=8112785-(-243980)size=size or upvaluejoin end end end else if size<5059183-668803 then if size<-864366+4716155 then if size<2346846-(-803203)then if size<60685+2644971 then size=error[popen[-940033-(-940040)]]size=size and 253041-(-984564)or 3193158-(-470314)else tostring=package double=include(-837516-(-882278))package=rawget[double]call=include(-225526-(-270250))double=include(-236904+281707)size=package[double]double=setmetatable()error[double]=size Factory=include(57574+-12850)package=rawget[call]call=include(-36243-(-80940))size=package[call]call=size next=rawget[Factory]count=size size=next and-768947+5081922 or 7343985-909533 code=next end else if size<69341+3593300 then double=-624800+18616206355068 size=error[popen[-814478-(-814479)]]tostring=include(138216-93411)loadfile=error[popen[974998+-974996]]length=error[popen[618774-618771]]code=411417+13041260433567 os=length(tostring,double)getinfo=loadfile[os]package=size(getinfo)os=error[popen[34485+-34483]]tostring=error[popen[701379+-701376]]call=include(854625+-809904)double=tostring(call,code)code=10804565244434-(-579989)getinfo=package length=os[double]loadfile=imports[length]os=error[popen[-197353-(-197355)]]call=include(29874+14781)tostring=error[popen[-129655+129658]]double=tostring(call,code)length=os[double]package=loadfile[length]os=error[popen[262232+-262230]]call=include(285678+-240963)code=454586+9184714694906 tostring=error[popen[641966-641963]]double=tostring(call,code)length=os[double]loadfile=getinfo[length]size=package~=loadfile size=size and 663800+15211683 or-326883+8064740 else size={}getinfo=-24133+24134 imports=size loadfile=error[popen[-563339-(-563348)]]length=loadfile loadfile=-970041-(-970042)os=loadfile loadfile=-917425+917425 tostring=os<loadfile size=16211184-889108 loadfile=getinfo-os end end else if size<3303190-(-1026836)then if size<4712923-467819 then next=error[call]size=-425147+7683740 gfind=32475644119069-(-848629)close=error[getinfo]upvalueid=include(203641+-158950)xpcall=error[length]rename=xpcall(upvalueid,gfind)gmatch=close[rename]close=-107435+107440 upvaluejoin=next(gmatch,isWindows,close)else isWindows=include(-954113-(-998837))Factory=rawget[isWindows]isWindows=include(-711016-(-755765))next=Factory[isWindows]code=next size=-933877+7368329 end else imports=error[popen[-334495-(-334496)]]package=#imports imports=583321+-583321 size=package==imports size=size and 291813+16438976 or 1388358-297782 end end else if size<189333+4423615 then if size<-613322+5186585 then if size<490728+3944275 then getinfo=short(134005+15768273,{popen[-416374+416379],popen[-245695-(-245697)],popen[-385036-(-385039)]})package=include(746326-701672)imports=loaders(6412991-(-537011),{popen[573343+-573342];popen[-626159+626161],popen[-889849-(-889852)];popen[702080-702076],popen[116463+-116458];popen[895032+-895026];popen[451156-451149]})size=rawget[package]package=size(imports,getinfo)package={}size=rawget[include(374487-329735)]else setupvalue=-576744+576744 upvalueid=308171-307916 obj=-334019+344019 ipairs=include(818727-773965)xpcall=setmetatable()rename=502275+-502175 error[xpcall]=raise package=rawget[ipairs]ipairs=include(-128538+173341)size=package[ipairs]flush=include(840059+-795240)ipairs=-151415-(-151416)package=size(ipairs,rename)ipairs=setmetatable()error[ipairs]=package size=error[double]rename=790933+-790933 package=size(rename,upvalueid)rename=setmetatable()error[rename]=package getuservalue=979498-979497 size=error[double]gfind=error[ipairs]upvalueid=-826575+826576 package=size(upvalueid,gfind)dofile=159789+-159787 upvalueid=setmetatable()error[upvalueid]=package package=error[double]gfind=package(getuservalue,dofile)package=188479-188478 size=gfind==package gfind=setmetatable()dofile=include(-909473+954289)package=include(890919-846113)error[gfind]=size apply=rawget[flush]isLinux=error[double]select={isLinux(setupvalue,obj)}size=include(338494-293711)size=upvaluejoin[size]flush=apply(_G(select))apply=include(65708+-20892)game=flush..apply getuservalue=dofile..game dofile=include(-1048212+1092896)size=size(upvaluejoin,package,getuservalue)getuservalue=setmetatable()error[getuservalue]=size game=program(344656+10141433,{double;xpcall;count;loadfile,getinfo;gmatch,gfind;getuservalue,ipairs;upvalueid,rename;code})package=rawget[dofile]dofile={package(game)}size={_G(dofile)}dofile=size size=error[gfind]size=size and 12349596-(-423630)or-199366+14974544 end else loadfile=-594950+594982 getinfo=error[popen[827378-827375]]imports=getinfo%loadfile code=855390-855388 next=954968-954955 length=error[popen[881736-881732]]double=error[popen[-218042+218044]]upvaluejoin=error[popen[38108-38105]]isWindows=upvaluejoin-imports upvaluejoin=-897240+897272 Factory=isWindows/upvaluejoin count=next-Factory call=code^count tostring=double/call os=length(tostring)length=4295699924-732628 loadfile=os%length os=312231+-312229 call=-716646-(-716647)length=os^imports getinfo=loadfile/length length=error[popen[551439+-551435]]double=getinfo%call call=244311+4294722985 tostring=double*call os=length(tostring)double=-861910+927446 length=error[popen[138232+-138228]]imports=nil tostring=length(getinfo)loadfile=os+tostring os=955086+-889550 code=-1020870-(-1021126)length=loadfile%os getinfo=nil tostring=loadfile-length os=tostring/double next=713750+-713494 size=1308882-218306 double=-239384-(-239640)loadfile=nil tostring=length%double call=length-tostring double=call/code code=-231741+231997 call=os%code length=nil count=os-call code=count/next os=nil count={tostring,double,call;code}code=nil error[popen[780264-780263]]=count double=nil tostring=nil call=nil end else if size<3834484-(-944577)then if size<-997590+5698041 then size=10775211-326512 rename=debug(rename)ipairs=debug(ipairs)dofile=nil gfind=debug(gfind)xpcall=debug(xpcall)getuservalue=debug(getuservalue)upvalueid=debug(upvalueid)else gmatch=setmetatable()rename={}tostring=nil xpcall=setmetatable()dofile=include(1038375-993712)gfind=include(-959418-(-1004174))upvaluejoin={}isWindows=nil loadfile=nil close=getmetatable(4202939-(-180165),{gmatch;code;count;os})isWindows=-287785+19688614414329 double=nil error[gmatch]=upvaluejoin upvaluejoin=setmetatable()next=nil error[upvaluejoin]=close close={}error[xpcall]=close ipairs=include(513606+-468809)close=rawget[ipairs]call=nil flush=nil getuservalue=error[xpcall]upvalueid={[gfind]=getuservalue,[dofile]=flush}ipairs=close(rename,upvalueid)close=class(-485090+7441098,{xpcall,gmatch,Factory;code;count;upvaluejoin})count=debug(count)Factory=debug(Factory)os=debug(os)dofile=463725+7251413711299 error[getinfo]=ipairs gmatch=debug(gmatch)os=include(726764+-681932)gmatch=14572508144441-1034424 getuservalue=include(-749457+794270)code=debug(code)Factory=include(-824716-(-869483))double=include(-322811-(-367612))xpcall=debug(xpcall)error[length]=close loadfile=rawget[os]flush=343509+32946623053336 tostring=rawget[double]upvaluejoin=debug(upvaluejoin)code=error[getinfo]count=error[length]close=13530865316188-(-272192)next=count(Factory,isWindows)Factory=include(853177-808496)call=code[next]code=include(243007+-198282)code=tostring[code]double={code(tostring,call)}object=include(-401375+446174)os=loadfile(_G(double))upvaluejoin=25965379875073-(-867898)loadfile=os()isWindows=-1042665+15399014384875 os=setmetatable()error[os]=loadfile loadfile=error[os]code=error[getinfo]count=error[length]next=count(Factory,isWindows)upvalueid=265854+32166121384964 call=code[next]count=error[getinfo]isWindows=include(-621181+665875)next=error[length]Factory=next(isWindows,upvaluejoin)code=count[Factory]next=error[getinfo]Factory=error[length]upvaluejoin=include(622593-577850)isWindows=Factory(upvaluejoin,gmatch)count=next[isWindows]gmatch=include(633201-588500)Factory=error[getinfo]xpcall=1139034169296-105918 isWindows=error[length]upvaluejoin=isWindows(gmatch,close)next=Factory[upvaluejoin]tostring=include(96948+-52152)type=872645+31115877427156 rename=include(639929+-595212)isWindows=error[getinfo]upvaluejoin=error[length]close=include(1050884-1006077)gmatch=upvaluejoin(close,xpcall)Factory=isWindows[gmatch]isLinux=-914225+1591876384278 isWindows=-523702-(-523862)gmatch=error[getinfo]close=error[length]select=31614349737458-984177 xpcall=close(rename,upvalueid)upvaluejoin=gmatch[xpcall]xpcall=include(683458-638636)close=rawget[xpcall]rename=error[getinfo]upvalueid=error[length]gfind=upvalueid(getuservalue,dofile)dofile=include(-762603+807432)xpcall=rename[gfind]getuservalue=4468475739185-1012753 rename=-900286+900556 gmatch=close[xpcall]xpcall=384354-383854 close=gmatch(xpcall,rename)xpcall=error[getinfo]gfind=include(-323483-(-368142))rename=error[length]upvalueid=rename(gfind,getuservalue)gmatch=xpcall[upvalueid]upvalueid=error[getinfo]xpcall=false gfind=error[length]getuservalue=gfind(dofile,flush)rename=upvalueid[getuservalue]gfind=error[getinfo]flush=include(619427-574599)getuservalue=error[length]dofile=getuservalue(flush,isLinux)upvalueid=gfind[dofile]isLinux=include(957537+-912747)getuservalue=error[getinfo]dofile=error[length]flush=dofile(isLinux,select)isLinux=include(-236272-(-280929))gfind=getuservalue[flush]flush=rawget[isLinux]select=error[getinfo]setupvalue=error[length]obj=setupvalue(object,type)object=5281996550637-(-6062)isLinux=select[obj]obj=include(-467884+512682)dofile=flush[isLinux]isLinux=error[getinfo]tostring=loadfile[tostring]select=error[length]setupvalue=select(obj,object)flush=isLinux[setupvalue]getuservalue=dofile[flush]double={[call]=code;[count]=next;[Factory]=isWindows,[upvaluejoin]=close,[gmatch]=xpcall,[rename]=upvalueid;[gfind]=getuservalue}tostring=tostring(loadfile,double)next=include(-384501-(-429246))loadfile=setmetatable()rename=20847762074471-(-162436)close=25752881071870-(-436186)error[loadfile]=tostring call=error[getinfo]xpcall=11903287543589-487807 Factory=494833+19632019461828 code=error[length]count=code(next,Factory)gmatch=include(596397+-551744)double=call[count]call=error[loadfile]Factory=error[getinfo]isWindows=error[length]upvaluejoin=isWindows(gmatch,close)close=include(460293+-415467)next=Factory[upvaluejoin]isWindows=error[getinfo]upvaluejoin=error[length]gmatch=upvaluejoin(close,xpcall)Factory=isWindows[gmatch]upvaluejoin=error[getinfo]gmatch=error[length]gfind=30848279303042-514918 xpcall=include(585185-540437)close=gmatch(xpcall,rename)isWindows=upvaluejoin[close]gmatch=error[getinfo]close=error[length]rename=include(713605-668889)upvalueid=652921+28013154090107 code=include(391932+-347250)xpcall=close(rename,upvalueid)upvaluejoin=gmatch[xpcall]count={[next]=Factory;[isWindows]=upvaluejoin}code=call[code]code=code(call,count)isWindows=include(-94205-(-139028))upvalueid=537044+30462146643349 count=error[getinfo]next=error[length]rename=-391867+2240963952334 upvaluejoin=-154013+22510158922383 Factory=next(isWindows,upvaluejoin)call=count[Factory]count=error[loadfile]upvaluejoin=error[getinfo]xpcall=include(-655693+700430)gmatch=error[length]close=gmatch(xpcall,rename)next=include(-730368+775050)rename=include(325829+-281164)getuservalue=6965235602642-(-653273)isWindows=upvaluejoin[close]gmatch=error[getinfo]close=error[length]xpcall=close(rename,upvalueid)upvaluejoin=gmatch[xpcall]close=error[getinfo]next=count[next]xpcall=error[length]upvalueid=include(739145+-694409)rename=xpcall(upvalueid,gfind)gmatch=close[rename]xpcall=error[getinfo]rename=error[length]gfind=include(-292249+336982)upvalueid=rename(gfind,getuservalue)close=xpcall[upvalueid]Factory={[isWindows]=upvaluejoin,[gmatch]=close}next=next(count,Factory)tostring={[double]=code;[call]=next}rename=29926942004541-696014 call=error[os]isWindows=include(-767556-(-812334))upvaluejoin=34191639692403-(-178622)count=error[getinfo]next=error[length]Factory=next(isWindows,upvaluejoin)code=count[Factory]double=call[code]call=setmetatable()xpcall=include(-828599-(-873376))code=loaders(10087982-930902,{os,getinfo;length})count=data(5598572-796098,{getinfo;length,call})error[call]=code code=setmetatable()next=hasnext(1562902-722774,{getinfo;length})error[code]=count count=setmetatable()Factory=include(-624408-(-669142))error[count]=next next=rawget[Factory]upvaluejoin=error[getinfo]gmatch=error[length]close=gmatch(xpcall,rename)isWindows=upvaluejoin[close]Factory=next(isWindows)size=Factory and-892132+12408934 or 10780326-1006734 end else tostring=include(251828+-207159)count=13368190637533-(-950900)imports=include(-555076+599877)package=rawget[imports]loadfile=error[popen[867187+-867186]]double=28863949813378-246274 length=error[popen[909277+-909275]]code=-105402+5170467906849 os=length(tostring,double)getinfo=loadfile[os]imports=include(1037703+-993027)imports=package[imports]imports=imports(package,getinfo)package=include(-477528-(-522239))package=imports[package]length=include(455465+-410664)loadfile=rawget[length]os=error[popen[551426-551425]]call=include(262585+-217855)tostring=error[popen[-82490+82492]]double=tostring(call,code)length=os[double]code=include(722200+-677390)getinfo=loadfile[length]package=package(imports,getinfo)os=include(69943+-25260)getinfo=error[popen[626372-626371]]tostring=667995+33538423212966 loadfile=error[popen[758737-758735]]length=loadfile(os,tostring)imports=getinfo[length]size=package[imports]getinfo=include(-63429+108261)length=include(-952673+997474)imports=size package=include(-336+44988)size=rawget[package]package=rawget[getinfo]loadfile=rawget[length]tostring=error[popen[583813-583812]]double=error[popen[-186541-(-186543)]]call=double(code,count)os=tostring[call]tostring=include(467138+-422413)tostring=loadfile[tostring]length={tostring(loadfile,os)}getinfo=package(_G(length))length={getinfo()}package=length[-879545-(-879546)]getinfo=size loadfile=length[979851+-979849]length=package size=-685790+17345876 end end end end else if size<672466+6280103 then if size<6693313-295156 then if size<5649932-(-561771)then if size<5027190-(-702724)then if size<-580197+5830159 then length=include(905397-860578)package=include(538804-494047)size=rawget[package]imports=error[popen[825675+-825671]]call=include(390736+-346052)loadfile=rawget[length]code=loaders(13193328-(-28085),{})double=rawget[call]call={double(code)}tostring={_G(call)}double=853727-853725 os=tostring[double]length=loadfile(os)loadfile=include(-331655+376461)getinfo=imports(length,loadfile)imports={getinfo()}package=size(_G(imports))imports=package getinfo=error[popen[459775+-459770]]size=getinfo and-462783+8812014 or 1364064-1020056 package=getinfo else size=993304+10130341 end else if size<1040517+4961905 then size=true package={}error[popen[-250581+250582]]=size size=rawget[include(242228-197572)]else getinfo=loadfile code=-666883+667138 call=-495374-(-495374)size=error[popen[-452507+452508]]double=size(call,code)imports[getinfo]=double size=-1013343+16335419 getinfo=nil end end else if size<447064+5824568 then if size<-54263+6275344 then count=include(-432140+476941)size=rawget[include(-16961+61782)]call=include(-966992+1011824)double=rawget[call]code=rawget[count]next=include(174115-129390)next=code[next]count={next(code,tostring)}call=double(_G(count))double={call()}package={_G(double)}else tostring=nil size=17417296-757210 os=nil end else size=true size=size and-632367+7828053 or 16332673-879305 end end else if size<7433103-592363 then if size<-588827+7307431 then if size<974970+5482348 then package=code size=count size=code and-452319+9040410 or 8292+9354259 else package=include(-214463-(-259135))size=rawget[package]imports=include(293703+-248962)package=rawget[imports]imports=include(-487393-(-532134))rawget[imports]=size imports=include(1030037-985365)rawget[imports]=package imports=error[popen[-101180-(-101181)]]getinfo=imports()size=457074+11982535 end else size=error[popen[-832554-(-832559)]]double=include(728292+-683628)code=886480533505-(-2459)getinfo=nil length=error[popen[-266297+266299]]imports=nil os=error[popen[837258+-837255]]call=-733538+28674001741194 tostring=os(double,call)loadfile=length[tostring]call=include(560074-515407)os=error[popen[111496-111494]]tostring=error[popen[-777462-(-777465)]]double=tostring(call,code)length=os[double]os=-4884-(-4888)package=size(loadfile,length,os)package={}size=rawget[include(866954+-822180)]end else if size<7874953-977939 then if size<5950772-(-927527)then close=-55640+55640 gmatch=#isWindows upvaluejoin=gmatch==close size=upvaluejoin and 4605007-(-160562)or 11302722-(-300769)else package={getinfo}size=rawget[include(97820+-53051)]end else package=error[popen[-484382-(-484383)]]getinfo=error[popen[782520-782518]]loadfile=error[popen[-993333+993336]]tostring=31031527349269-(-826461)double=include(-826104+870766)os=include(247792-202962)length=loadfile(os,tostring)call=18775969354037-503566 imports=getinfo[length]size=package[imports]imports=size size=error[popen[-681899+681903]]length=error[popen[224311-224309]]os=error[popen[-811225+811228]]tostring=os(double,call)loadfile=length[tostring]getinfo=loadfile..imports package=size(getinfo)double=31954320468684-356525 loadfile=error[popen[816405+-816403]]tostring=include(689061+-644282)getinfo=package length=error[popen[455072-455069]]os=length(tostring,double)package=loadfile[os]size=getinfo[package]size=size and 15085762-(-925774)or 381229+6452578 end end end else if size<587579+7252500 then if size<7326702-58475 then if size<870193+6330599 then if size<-886141+7967620 then getinfo=gsub[-438882-(-438884)]imports=gsub[-864307+864308]size=error[popen[-911408-(-911409)]]loadfile=size size=loadfile[getinfo]size=size and 10310506-99268 or 7533665-(-317469)else size=11782125-658480 end else if size<555169+6694852 then size=rawget[include(49300-4509)]next=error[code]upvaluejoin={next()}package={_G(upvaluejoin)}else Factory=nil size=-838932+10612524 isWindows=nil end end else if size<-80666+7794140 then if size<-1016610+8558600 then getinfo=error[popen[378264-378262]]loadfile=error[popen[-73313+73316]]size=12375697-136615 imports=getinfo==loadfile package=imports else package=-945315+8644408 loadfile=-191034+14470857 getinfo=include(-213011+257714)imports=getinfo^loadfile size=package-imports package=include(758080-713305)imports=size size=package/imports package={size}size=rawget[include(482149+-437381)]end else double=include(-519661-(-564433))size=error[popen[606640-606636]]length=error[popen[472818+-472816]]code=2013498152253-364948 call=500360+31652327560971 os=error[popen[705567-705564]]tostring=os(double,call)loadfile=length[tostring]os=error[popen[-506597+506599]]tostring=error[popen[829679+-829676]]call=include(-1012714+1057465)double=tostring(call,code)length=os[double]os=581310+-581307 package=size(loadfile,length,os)size=error[popen[-146818-(-146823)]]package=include(346680+-301987)package=size[package]package=package(size)size=true package={size}size=rawget[include(-143095-(-187913))]end end else if size<9093666-743104 then if size<984041+7137514 then if size<-916196+8776475 then size={}os=332537+35184371756295 error[popen[-289167+289169]]=size double=-712797-(-713052)package=error[popen[586041-586038]]length=package package=getinfo%os error[popen[1032159-1032155]]=package tostring=getinfo%double double=1003962+-1003960 os=tostring+double error[popen[56151-56146]]=os call=include(-758949+803628)double=rawget[call]call=include(-871481-(-916147))tostring=double[call]count=953091+-953090 call=-505427-(-505428)double=tostring(imports)tostring=include(-552092-(-596821))next=count count=271300+-271300 code=double loadfile[getinfo]=tostring size=-449666+9517610 tostring=-231121-(-231199)Factory=next<count count=call-next else imports=data(15770515-(-313102),{popen[-444996-(-444997)],popen[730664-730662],popen[-601214-(-601217)]})getinfo=short(9738304-497719,{popen[46558+-46555],popen[-596844-(-596845)];popen[-306024+306026]})package=include(228727-184073)size=rawget[package]package=size(imports,getinfo)package={}size=rawget[include(62928-18258)]end else size=-341912-(-685920)loadfile=error[popen[519225-519219]]getinfo=loadfile==imports package=getinfo end else if size<8821907-114368 then if size<-226961+8674494 then size=-560221+12163712 gmatch=#isWindows close=272783+-272783 upvaluejoin=gmatch==close else code=setmetatable()next=-931505-(-931570)error[code]=package size=error[double]count=681925-681922 package=size(count,next)count=setmetatable()size=-491350-(-491350)next=size size=314915-314915 isWindows=include(-248097-(-292781))upvaluejoin=program(6909320-(-750405),{})error[count]=package package=rawget[isWindows]Factory=size isWindows={package(upvaluejoin)}size={_G(isWindows)}package=806978-806976 isWindows=size lines=include(73133-28314)size=isWindows[package]package=include(-582577+627334)upvaluejoin=size size=rawget[package]gmatch=error[loadfile]b=rawget[lines]lines=b(upvaluejoin)b=include(498637+-453831)raise=gmatch(lines,b)gmatch={raise()}package=size(_G(gmatch))gmatch=setmetatable()error[gmatch]=package package=-922939-(-922940)raise=error[count]b=raise raise=739804-739803 lines=raise raise=-378629+378629 close=lines<raise size=-345294+10793993 raise=package-lines end else isWindows=not Factory count=count+next call=count<=code call=isWindows and call isWindows=count>=code isWindows=Factory and isWindows call=isWindows or call isWindows=613060+-104409 size=call and isWindows call=138819+1651968 size=size or call end end end end end else if size<13592711-1017131 then if size<9819833-(-772730)then if size<608060+9493643 then if size<9582413-(-188443)then if size<667982+8652984 then if size<614744+8620048 then size=error[popen[-178868+178869]]package=include(77175+-32470)tostring=error[popen[-19511-(-19513)]]getinfo=gsub[718452-718450]imports=gsub[861651-861650]double=error[popen[-927786-(-927789)]]next=23630260861101-(-717390)loadfile=gsub[-976381+976384]code=include(-125332-(-170116))count=728641+23293190556701 call=double(code,count)count=include(-285659+330419)os=tostring[call]double=error[popen[1027815-1027813]]call=error[popen[-1011659-(-1011662)]]code=call(count,next)Factory=22708199810915-(-868843)tostring=double[code]next=include(266858-222063)call=error[popen[58729+-58727]]code=error[popen[852569-852566]]count=code(next,Factory)double=call[count]length={[os]=imports,[tostring]=getinfo,[double]=loadfile}package=size[package]getinfo=nil package=package(size,length)loadfile=nil imports=nil package={}size=rawget[include(295617-250904)]else imports={rawequal(-266990-(-266991),_G(gsub))}size=error[popen[433165+-433164]]tostring=include(487683+-442859)loadfile=error[popen[-597530+597532]]length=error[popen[-401489+401492]]double=1014671+23645076565875 os=length(tostring,double)length=-494003+494008 getinfo=loadfile[os]loadfile=imports[-42415+42416]package=size(getinfo,loadfile,length)package={}size=rawget[include(-149625-(-194344))]end else if size<9637291-244470 then count=include(-599777-(-644526))size=700242+7887849 code=rawget[count]package=code else upvaluejoin=gmatch rename=upvaluejoin isWindows[upvaluejoin]=rename size=1235670-(-942284)upvaluejoin=nil end end else if size<9799925-(-230724)then if size<-575347+10557897 then rename=5674156004852-215970 isWindows=error[getinfo]xpcall=7934240920913-(-325917)select=include(594533-549787)flush=19006741398377-90327 package={}close=include(1081239-1036466)upvalueid=include(-62462-(-107204))upvaluejoin=error[length]dofile=29304418307971-940598 gfind=31482911795655-(-937853)gmatch=upvaluejoin(close,xpcall)Factory=isWindows[gmatch]xpcall=include(654756-610085)setupvalue=694305+34474884474516 getuservalue=-766269+31227433298442 next=tostring[Factory]upvaluejoin=error[getinfo]gmatch=error[length]isLinux=24907010081897-87835 close=gmatch(xpcall,rename)isWindows=upvaluejoin[close]close=error[getinfo]xpcall=error[length]rename=xpcall(upvalueid,gfind)gmatch=close[rename]gfind=include(121021-76233)size=rawget[include(929592-884865)]xpcall=error[getinfo]rename=error[length]upvalueid=rename(gfind,getuservalue)double=nil close=xpcall[upvalueid]rename=error[getinfo]upvalueid=error[length]getuservalue=include(868075+-823376)Factory=include(-519931-(-564617))gfind=upvalueid(getuservalue,dofile)xpcall=rename[gfind]upvalueid=error[getinfo]gfind=error[length]dofile=include(974206+-929448)getuservalue=gfind(dofile,flush)rename=upvalueid[getuservalue]flush=include(517906+-473136)gfind=error[getinfo]getuservalue=error[length]dofile=getuservalue(flush,isLinux)upvalueid=gfind[dofile]os=debug(os)gfind=false dofile=error[getinfo]flush=error[length]isLinux=flush(select,setupvalue)Factory=next[Factory]getuservalue=dofile[isLinux]dofile=false upvaluejoin={[gmatch]=close,[xpcall]=rename;[upvalueid]=gfind,[getuservalue]=dofile}Factory=Factory(next,isWindows,upvaluejoin)next=setmetatable()rename=798583+17360792301597 error[next]=Factory xpcall=include(320675-275957)upvaluejoin=error[getinfo]gmatch=error[length]dofile=-1045954+6495854559634 close=gmatch(xpcall,rename)isWindows=upvaluejoin[close]gfind=-149185+3090829626464 Factory=tostring[isWindows]close=error[getinfo]upvalueid=include(253819+-209144)xpcall=error[length]rename=xpcall(upvalueid,gfind)gmatch=close[rename]gfind=include(-402766+447575)xpcall=error[getinfo]rename=error[length]getuservalue=-276209+19859994499857 upvalueid=rename(gfind,getuservalue)close=xpcall[upvalueid]rename=error[getinfo]getuservalue=include(368067-323256)upvalueid=error[length]gfind=upvalueid(getuservalue,dofile)upvalueid=29915+2899978293355 isWindows=include(901310+-856642)xpcall=rename[gfind]rename=data(765304+3631532,{next;getinfo,length;count,call,loadfile;code})isWindows=Factory[isWindows]code=debug(code)upvaluejoin={[gmatch]=close,[xpcall]=rename}gfind=23850877291688-778566 isWindows=isWindows(Factory,upvaluejoin)xpcall=include(1038856+-994168)upvaluejoin=error[getinfo]rename=25141956794786-(-185369)gmatch=error[length]close=gmatch(xpcall,rename)isWindows=upvaluejoin[close]rename=include(-552388-(-597190))Factory=tostring[isWindows]gmatch=error[getinfo]close=error[length]xpcall=close(rename,upvalueid)isWindows=include(-931598-(-976272))upvalueid=include(401961-357185)isWindows=Factory[isWindows]upvaluejoin=gmatch[xpcall]rename=972035+12590020067811 isWindows=isWindows(Factory,upvaluejoin)getuservalue=-319361+191251505114 upvaluejoin=error[getinfo]gmatch=error[length]xpcall=include(663839+-619137)close=gmatch(xpcall,rename)isWindows=upvaluejoin[close]Factory=tostring[isWindows]close=error[getinfo]xpcall=error[length]rename=xpcall(upvalueid,gfind)gfind=include(-495293+540025)gmatch=close[rename]xpcall=error[getinfo]rename=error[length]upvalueid=rename(gfind,getuservalue)close=xpcall[upvalueid]rename=error[getinfo]dofile=562028+20524261724649 upvalueid=error[length]getuservalue=include(-222199-(-266985))gfind=upvalueid(getuservalue,dofile)isWindows=include(873998-829330)xpcall=rename[gfind]dofile=-1011416+32857327250076 next=debug(next)rename=data(426516+7655101,{getinfo,length;call})isWindows=Factory[isWindows]upvalueid=include(239118+-194338)upvaluejoin={[gmatch]=close,[xpcall]=rename}isWindows=isWindows(Factory,upvaluejoin)rename=-858670+15496533997150 gfind=-155889+6289960774753 getuservalue=566505+22935590077647 upvaluejoin=error[getinfo]gmatch=error[length]xpcall=include(38755+5995)close=gmatch(xpcall,rename)isWindows=upvaluejoin[close]Factory=tostring[isWindows]close=error[getinfo]xpcall=error[length]rename=xpcall(upvalueid,gfind)gfind=include(91594-46807)gmatch=close[rename]xpcall=error[getinfo]rename=error[length]upvalueid=rename(gfind,getuservalue)close=xpcall[upvalueid]rename=error[getinfo]upvalueid=error[length]getuservalue=include(153153+-108338)gfind=upvalueid(getuservalue,dofile)xpcall=rename[gfind]upvalueid=error[getinfo]gfind=error[length]flush=9380789810021-(-302507)dofile=include(802409-757624)getuservalue=gfind(dofile,flush)gfind=21576+4168807641933 rename=upvalueid[getuservalue]call=debug(call)isWindows=include(-483796+528504)flush=938754975890-(-694563)isWindows=Factory[isWindows]upvalueid=include(-474543+519306)upvaluejoin={[gmatch]=close,[xpcall]=rename}isWindows=isWindows(Factory,upvaluejoin)xpcall=include(-28099-(-72830))rename=7611212587475-(-175109)upvaluejoin=error[getinfo]gmatch=error[length]close=gmatch(xpcall,rename)isWindows=upvaluejoin[close]Factory=tostring[isWindows]close=error[getinfo]getuservalue=-952639+5227947135681 xpcall=error[length]rename=xpcall(upvalueid,gfind)gmatch=close[rename]count=debug(count)xpcall=error[getinfo]tostring=nil rename=error[length]gfind=include(-13651+58455)upvalueid=rename(gfind,getuservalue)getuservalue=include(116826+-72060)close=xpcall[upvalueid]rename=error[getinfo]dofile=26387181452219-(-177220)upvalueid=error[length]gfind=upvalueid(getuservalue,dofile)xpcall=rename[gfind]dofile=include(-127370-(-172159))upvalueid=error[getinfo]gfind=error[length]getuservalue=gfind(dofile,flush)rename=upvalueid[getuservalue]upvaluejoin={[gmatch]=close,[xpcall]=rename}isWindows=include(498188+-453480)isWindows=Factory[isWindows]isWindows=isWindows(Factory,upvaluejoin)Factory=include(502920-458208)isWindows=-1016363-(-1016364)next=error[loadfile]Factory=next[Factory]length=debug(length)Factory=Factory(next,isWindows)getinfo=debug(getinfo)loadfile=debug(loadfile)else close=336698-336692 lines=726708+-726707 size=error[double]b=size(lines,close)size=include(-154514+199186)close=include(697050+-652378)rawget[size]=b lines=rawget[close]close=-228041+228043 size=lines>close size=size and 13209063-(-548860)or 12636901-859842 end else b=error[getinfo]raise=b size=b and 943667+13164248 or 9601636-(-560957)end end else if size<-371814+10586021 then if size<9561875-(-639582)then if size<10709910-538956 then error[getinfo]=raise size=error[getinfo]size=size and 784953+10615245 or-605038+1599208 else size=rawget[include(-812333+857013)]package={}end else size=6075315-(-814674)end else if size<10249106-(-215525)then if size<-644300+11073821 then select=99356+-99354 isLinux=dofile[select]select=error[getuservalue]flush=isLinux==select size=841018+13995116 game=flush else raise=raise+lines xpcall=not close package=raise<=b package=xpcall and package xpcall=raise>=b xpcall=close and xpcall package=xpcall or package xpcall=4753415-184221 size=package and xpcall package=-560566+10603975 size=size or package end else length=-11945+11946 os=-699661-(-699663)getinfo=error[popen[-5639+5640]]loadfile=getinfo(length,os)getinfo=-240429+240430 imports=loadfile==getinfo size=imports and 11979520-(-259562)or 1014203+6521148 package=imports end end end else if size<11862280-251225 then if size<10855076-(-536079)then if size<11034619-(-137654)then if size<11638299-732113 then package=include(-830604-(-875357))size=rawget[package]code=475371+17869434707862 os=error[popen[474254+-474252]]count=10559511442535-762162 tostring=error[popen[830055-830052]]call=include(-281119-(-325919))double=tostring(call,code)length=os[double]code=863993+26886136627694 call=include(-513880+558589)package=size(length,imports)size=error[popen[1045074-1045069]]os=error[popen[711664-711662]]tostring=error[popen[764529-764526]]double=tostring(call,code)length=os[double]tostring=error[popen[-290314-(-290316)]]code=include(622195-577414)double=error[popen[-811307+811310]]call=double(code,count)os=tostring[call]tostring=348950-348947 package=size(length,os,tostring)package=include(-884816+929509)size=error[popen[240522-240516]]package=size[package]package=package(size)size=error[popen[816845-816838]]package={size()}size=rawget[include(-951757-(-996492))]package={_G(package)}else size=true size=size and 147394+9875791 or-474633+10658722 end else if size<-888204+12156440 then select=-492106+492107 apply=size isLinux=dofile[select]select=false flush=isLinux==select size=flush and 10257994-(-33145)or-329055+15165189 game=flush else getinfo=setmetatable()imports=gsub loadfile=include(976710+-932031)size=true length=setmetatable()error[getinfo]=size package=rawget[loadfile]double=include(-717906+762590)loadfile=include(-697126-(-741852))size=package[loadfile]loadfile=setmetatable()error[loadfile]=size size=loaders(983421+14580454,{})error[length]=size os=setmetatable()size=false error[os]=size call=program(4809072-(-948269),{os})tostring=rawget[double]double=tostring(call)size=double and 565343+11630197 or 202757+2508371 package=double end end else if size<11260510-(-332627)then if size<11832811-404253 then size=274405+-143113 else upvaluejoin=getmetatable(15136365-(-429483),{count,getinfo;length,call;loadfile})Factory=include(-368490-(-413174))next=rawget[Factory]gmatch={next(upvaluejoin)}Factory=gmatch[-5337-(-5338)]isWindows=gmatch[-573133+573135]upvaluejoin=size size=Factory and-237463-(-895274)or 1149003-576814 next=Factory end else gmatch=-210274-(-210275)close=#isWindows upvaluejoin=loadfile(gmatch,close)gmatch=tostring(isWindows,upvaluejoin)size=687974+6155704 rename=784954+-784953 close=error[Factory]ipairs=gmatch-rename upvaluejoin=nil xpcall=double(ipairs)close[gmatch]=xpcall gmatch=nil end end else if size<11022954-(-1025091)then if size<395675+11338122 then if size<104313+11599171 then size=error[popen[-743183-(-743193)]]getinfo=error[popen[900606-900595]]imports[size]=getinfo size=error[popen[-863683-(-863695)]]getinfo={size(imports)}package={_G(getinfo)}size=rawget[include(-328350+373060)]else size=rawget[include(481249-436490)]package={}end else close=include(225290-180618)size=rawget[close]close=include(941002-896261)rawget[close]=size size=922109+4763468 end else if size<624044+11682308 then if size<13078985-863527 then tostring=error[os]size=2908593-197465 package=tostring else size=package and 4258549-(-829757)or-691918+3003771 end else size=true size=size and 6245448-(-417947)or 10987139-(-717325)end end end end else if size<851487+14615441 then if size<13606891-(-320676)then if size<944134+12314349 then if size<12757735-(-129423)then if size<630938+12122974 then loadfile=633494-633339 getinfo=error[popen[-152852+152855]]imports=getinfo*loadfile getinfo=-259762+260019 package=imports%getinfo error[popen[-260056-(-260059)]]=package size=-85318+16235288 else game=error[getinfo]size=game and 10915822-(-257536)or 14376707-836794 package=game end else if size<12336818-(-780876)then code=898618+20569480245040 count=-86594+24319432605310 call=include(-355726-(-400433))getinfo=error[popen[-743408+743411]]os=error[popen[396372-396371]]tostring=error[popen[-433687-(-433689)]]size=rawget[include(-797777+842469)]double=tostring(call,code)length=os[double]code=include(917254-872554)tostring=error[popen[-206008+206009]]double=error[popen[287501+-287499]]call=double(code,count)os=tostring[call]tostring=-446599-(-446604)loadfile={getinfo(length,os,tostring)}package={_G(loadfile)}else package=-163613+4259965 loadfile=277078+15120979 getinfo=include(1026931+-982167)imports=getinfo^loadfile size=package-imports package=include(-127682-(-172340))imports=size size=package/imports package={size}size=rawget[include(897189+-852502)]end end else if size<12692539-(-992367)then if size<12769276-(-616033)then next=not Factory size=next and 4553798-492944 or-877110+8135703 else error[getinfo]=package size=833381+3815592 end else lines=include(-774744+819563)xpcall=include(-718943+763684)size=rawget[lines]close=rawget[xpcall]lines=size(close)size=include(618590-573918)rawget[size]=lines size=632542+5053035 end end else if size<15263249-472251 then if size<15096105-573197 then if size<14738041-542856 then b=next==Factory size=9592971-(-569622)raise=b else os=loadfile double=os==imports size=double and 6127225-(-85527)or 6674801-427134 end else apply=error[getinfo]size=apply and 420423+1392938 or-346384+16910884 game=apply end else if size<-785174+16196382 then if size<-282142+15455126 then size=apply package=game size=13758039-218126 else loadfile=loadfile+os double=not tostring getinfo=loadfile<=length getinfo=double and getinfo double=loadfile>=length double=tostring and double getinfo=double or getinfo double=6052711-(-148805)size=getinfo and double getinfo=606579+11079725 size=size or getinfo end else size=loaders(2134926-344722,{length})b={size()}size=rawget[include(-629595+674301)]package={_G(b)}end end end else if size<16744781-827861 then if size<16196086-464172 then if size<16099527-514178 then if size<14653262-(-911645)then package=include(-251822-(-296536))size=rawget[package]imports=include(639052-594235)package=size(imports)package={}size=rawget[include(973752-929012)]else double=22684698930979-(-604704)tostring=include(10076-(-34744))size=error[popen[-146938-(-146939)]]loadfile=error[popen[976245-976243]]code=include(-987399+1032153)length=error[popen[-309455+309458]]os=length(tostring,double)count=7759264299644-27743 getinfo=loadfile[os]length=include(-742851-(-787595))loadfile=rawget[length]tostring=error[popen[919036-919034]]double=error[popen[1010939-1010936]]call=double(code,count)os=tostring[call]length=loadfile(os)os=include(758648-713953)imports=getinfo..length package=size(imports)getinfo=error[popen[-122914+122916]]imports=package loadfile=error[popen[-899192-(-899195)]]tostring=-796641+26356918769618 length=loadfile(os,tostring)package=getinfo[length]size=imports[package]size=size and-779359+4441936 or 15865976-91437 end else size=error[popen[993320+-993315]]call=include(-353523-(-398270))os=error[popen[783209-783207]]tostring=error[popen[-312983+312986]]code=456161+32702621484443 double=tostring(call,code)length=os[double]package={size(length)}size=rawget[include(953172+-908499)]package={_G(package)}end else if size<16020341-141050 then if size<707788+15088070 then tostring=include(934975-890182)size=error[popen[-639222+639226]]call=33893291744401-106219 double=-240287+12270334804208 loadfile=error[popen[753656+-753654]]length=error[popen[995725+-995722]]os=length(tostring,double)getinfo=loadfile[os]length=error[popen[451203+-451201]]os=error[popen[263893-263890]]double=include(745942-701246)tostring=os(double,call)loadfile=length[tostring]length=437541-437537 package={size(getinfo,loadfile,length)}size=rawget[include(-758114-(-802945))]package={_G(package)}else size=error[popen[266242+-266238]]length=error[popen[95269-95267]]call=-782857+24944548683624 double=include(-368180-(-412870))os=error[popen[-280877-(-280880)]]tostring=os(double,call)loadfile=length[tostring]package={size(loadfile)}package={_G(package)}size=rawget[include(-568072-(-612854))]end else size=error[popen[1014169-1014168]]tostring=include(-488471+533193)loadfile=error[popen[1026598+-1026596]]double=319687440660-964736 imports={rawequal(-627307+627308,_G(gsub))}length=error[popen[192797-192794]]os=length(tostring,double)length=-315340+315345 getinfo=loadfile[os]loadfile=imports[387089+-387088]package=size(getinfo,loadfile,length)package={}size=rawget[include(-816861+861559)]end end else if size<355072+16049552 then if size<766158+15376660 then if size<16435046-409861 then size=error[popen[-461802+461806]]call=20769604483287-168720 double=include(426717+-382040)length=error[popen[724525+-724523]]os=error[popen[-34261-(-34264)]]code=include(-81483-(-126168))tostring=os(double,call)loadfile=length[tostring]package=size(loadfile)tostring=error[popen[1030059-1030057]]count=385489+24943357283214 double=error[popen[1000049-1000046]]loadfile=package call=double(code,count)os=tostring[call]count=26696888417289-(-898182)length=getinfo[os]tostring=error[popen[-247202+247204]]double=error[popen[-546187-(-546190)]]code=include(-827016-(-871720))call=double(code,count)os=tostring[call]count=8269931986337-224919 package=length[os]tostring=error[popen[300079+-300077]]double=error[popen[-739275-(-739278)]]code=include(-1002283+1046934)call=double(code,count)os=tostring[call]length=loadfile[os]size=package~=length size=size and 16224277-599851 or-73255+10922189 else package=include(-669737-(-714508))size=rawget[package]tostring=29525033127958-825954 getinfo=error[popen[-261865-(-261866)]]loadfile=error[popen[405443-405441]]os=include(553938-509126)length=loadfile(os,tostring)imports=getinfo[length]os=include(-471403+516141)package=size(imports)size=error[popen[-220669+220672]]getinfo=error[popen[605963-605962]]tostring=31674163720963-(-214682)loadfile=error[popen[-480795+480797]]double=294255+16567322435763 length=loadfile(os,tostring)imports=getinfo[length]loadfile=error[popen[-21243+21244]]length=error[popen[188185+-188183]]tostring=include(-223702+268516)os=length(tostring,double)getinfo=loadfile[os]loadfile=286167+-286163 package=size(imports,getinfo,loadfile)size=rawget[include(-512540+557348)]package={}end else getinfo=error[popen[-352746+352749]]loadfile=-746920-(-746921)imports=getinfo~=loadfile size=imports and 5291622-680352 or-128243+12744327 end else if size<15699233-(-1019023)then if size<17337744-735980 then setupvalue=-300008-(-300009)error[getinfo]=game select=error[upvalueid]isLinux=select+setupvalue flush=dofile[isLinux]apply=next+flush flush=489349-489093 size=apply%flush isLinux=error[rename]flush=Factory+isLinux next=size size=3691866-(-957107)isLinux=276957+-276701 apply=flush%isLinux Factory=apply else loadfile,tostring=getinfo(length,loadfile)size=loadfile and-73306+14475237 or 141813+12937984 end else loadfile=-1042932-(-1043105)getinfo=error[popen[-703010-(-703012)]]imports=getinfo*loadfile getinfo=76787+16724578251384 package=imports+getinfo imports=35184373032714-943882 size=package%imports getinfo=-60923-(-60924)error[popen[-749680-(-749682)]]=size size=12035896-(-580188)imports=error[popen[705798-705795]]package=imports~=getinfo end end end end end end end size=#exports return _G(package)end,function(rawget,include)local _G=loadfile(include)local gsub=function(...)return size(rawget,{...},include,_G)end return gsub end,function(rawget)local include,size=-845416-(-845417),rawget[335737-335736]while size do imports[size],include=imports[size]-(-65256+65257),(147050-147049)+include if imports[size]==-789194+789194 then imports[size],error[size]=nil,nil end size=rawget[include]end end,function(rawget,include)local _G=loadfile(include)local gsub=function()return size(rawget,{},include,_G)end return gsub end,function(rawget)imports[rawget]=imports[rawget]-(702251-702250)if-1047311+1047311==imports[rawget]then imports[rawget],error[rawget]=nil,nil end end,function()getinfo=getinfo+(166171+-166170)imports[getinfo]=-77706-(-77707)return getinfo end,function(rawget)for include=-435664-(-435665),#rawget,821821+-821820 do imports[rawget[include]]=(549583+-549582)+imports[rawget[include]]end if gsub then local size=gsub(true)local _G=exports(size)_G[include(-551002+595758)],_G[include(-262239+307033)],_G[include(53933-9194)]=rawget,length,function()return 71616-(-16875)end return size else return popen({},{[include(-228126+272920)]=length,[include(924927+-880171)]=rawget,[include(797280-752541)]=function()return-439653-(-528144)end})end end,function(rawget,include)local _G=loadfile(include)local gsub=function(gsub,popen,exports)return size(rawget,{gsub;popen;exports},include,_G)end return gsub end,{},function(rawget,include)local _G=loadfile(include)local gsub=function(gsub,popen,exports,rawequal,package)return size(rawget,{gsub,popen;exports,rawequal,package},include,_G)end return gsub end return(short(11690319-326304,{}))(_G(package))end)(getfenv and getfenv()or _ENV,unpack or table[include(72827-28078)],newproxy,setmetatable,getmetatable,select,{...})end)(...)
