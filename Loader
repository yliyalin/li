return(function(...)local gfind={}for readline,bool in ipairs({{-530971+530972,404961-404775};{985533+-985532,1741+-1619},{803496-803373,595880-595694}})do while bool[349470-349469]<bool[-154943-(-154945)]do gfind[bool[-347700-(-347701)]],gfind[bool[1048484+-1048482]],bool[683309+-683308],bool[323351+-323349]=gfind[bool[498566+-498564]],gfind[bool[159188+-159187]],bool[866699-866698]+(-1021492+1021493),bool[746703+-746701]-(-1011011+1011012)end end local function readline(readline)return gfind[readline+(-916662+941942)]end do local readline=math.floor local bool=function(...)local v0={};return (function(...)v0["69AX"]={...};v0["42BF"]=v0["69AX"][2 -1 ][2] or "" ;v0["AB21"]="";for v4,v5 in ipairs(v0["69AX"][1][2 -1 ]) do v0["95CAC"]=0 -0 ;while true do if (v0["95CAC"]==0) then if (v0["AB21"]~="") then v0["AB21"]=v0["AB21"]   .. v0["42BF"] ;end v0["AB21"]=v0["AB21"]   .. v5 ;break;end end end return v0["AB21"];end)({...});end local upvaluejoin=table.insert local arr=string.sub local j=gfind local io=type local assert=string.len local imports=string.char local rand={w=34348-34331;S=973817-973809;d=-337054-(-337098),T=-796311+796347,j=897827+-897766;l=132562-132560,Y=782521+-782497,B=-996457-(-996470);z=-505108+505113,i=461300-461273,["\048"]=-90174-(-90184),k=1030632+-1030578;N=884728-884706,["\047"]=100470+-100456;I=-736483-(-736528);f=-538492-(-538512),U=-360372+360421;L=-685370+685427,p=-1025739+1025786,t=-886733-(-886745);r=-543316+543358;E=-951872+951904,C=-531107-(-531136);["\043"]=-217717+217765,F=-247679-(-247737),W=-423822-(-423845),u=-831597-(-831636),h=51596+-51580,q=156602+-156556,n=1033322+-1033281,K=392438+-392401,g=-783466+783501;["\056"]=-519501-(-519551);x=462440-462419;e=1037027+-1037002,y=-970849+970901;M=-759146-(-759174);Z=504607-504588;s=1021378+-1021369,["\049"]=97425-97399;a=-325337+325370,v=880569-880568,R=-54517-(-54568),["\054"]=813078-813047,D=607889-607874,G=182686-182668,["\051"]=353518-353484;Q=676789-676746;V=356408-356404;["\053"]=983331-983293,c=991528+-991473,["\052"]=-451917-(-451977),b=412095-412055;J=795623+-795616,X=257685+-257623,m=129512-129482;["\050"]=976155-976152,H=41847+-41794,A=809176+-809120,["\057"]=-408278-(-408289);["\055"]=-820861+820867;o=-378282+378282;P=-229688-(-229747);O=-978246+978309}for gfind=-440717-(-440718),#j,-68942-(-68943)do local string=j[gfind]if io(string)=="\115\116\114\105\110\103"then local io=assert(string)local popen={}local const=832018+-832017 local lines=-904335-(-904335)local require=124480+-124480 while const<=io do local gfind=arr(string,const,const)local bool=rand[gfind]if bool then lines=lines+bool*(-400074-(-400138))^((-697862+697865)-require)require=require+(2367-2366)if require==-618877+618881 then require=41434-41434 local gfind=readline(lines/(-61637+127173))local bool=readline((lines%(-372998-(-438534)))/(-898998+899254))local arr=lines%(-766705+766961)upvaluejoin(popen,imports(gfind,bool,arr))lines=-450084-(-450084)end elseif gfind=="\061"then upvaluejoin(popen,imports(readline(lines/(549134-483598))))if const>=io or arr(string,const+(-59440+59441),const+(322440+-322439))~="\061"then upvaluejoin(popen,imports(readline((lines%(868474+-802938))/(-86226-(-86482)))))end break end const=const+(-219368-(-219369))end j[gfind]=bool(popen)end end end return(function(gfind,upvaluejoin,arr,j,io,assert,imports,setlocal,popen,rename,lines,packages,string,getmetatable,bool,randomseed,byte,rand,const,getupvalue,gsub,require)rand,randomseed,require,rename,const,packages,setlocal,bool,gsub,popen,getmetatable,string,lines,byte,getupvalue={},function(gfind,readline)local upvaluejoin=lines(readline)local arr=function(arr,j,io,assert,imports)return bool(gfind,{arr,j;io;assert,imports},readline,upvaluejoin)end return arr end,function(gfind)local readline,bool=-558870-(-558871),gfind[-951670+951671]while bool do string[bool],readline=string[bool]-(-279140-(-279141)),readline+(138839+-138838)if string[bool]==120442-120442 then string[bool],rand[bool]=nil,nil end bool=gfind[readline]end end,function(gfind,readline)local upvaluejoin=lines(readline)local arr=function(...)return bool(gfind,{...},readline,upvaluejoin)end return arr end,869989+-869989,function(gfind,readline)local upvaluejoin=lines(readline)local arr=function()return bool(gfind,{},readline,upvaluejoin)end return arr end,function(gfind,readline)local upvaluejoin=lines(readline)local arr=function(arr,j,io)return bool(gfind,{arr;j;io},readline,upvaluejoin)end return arr end,function(bool,arr,j,io)local object,program,ipairs,debug,getlocal,load,loader,print,unsigned,tmpname,pcall,table,module,open,collectgarbage,class,size,exports,imports,length,require,cls,delete,getuservalue,getinfo,string,_G,lines,rawget,signed,const,loadlib,hasnext,new,next,key while bool do if bool<9344512-(-219121)then if bool<5063636-14732 then if bool<3435307-694417 then if bool<1913598-899364 then if bool<-625053+1447097 then if bool<401905-(-161319)then if bool<188172+92670 then bool=rand[j[-1022370-(-1022375)]]require=rand[j[-647910+647912]]getinfo=rand[j[-485432-(-485435)]]print=7056381829035-(-699690)new=readline(-789397+764130)collectgarbage=getinfo(new,print)lines=require[collectgarbage]imports={bool(lines)}imports={upvaluejoin(imports)}bool=gfind[readline(-928207+902961)]else getlocal=getlocal+class loadlib=not key imports=getlocal<=next imports=loadlib and imports loadlib=getlocal>=next loadlib=key and loadlib imports=loadlib or imports loadlib=585278+14684181 bool=imports and loadlib imports=-885092+10298037 bool=bool or imports end else if bool<836366-139196 then imports=readline(-105029+79788)string=readline(110647-135801)bool=gfind[imports]imports=gfind[string]string=readline(626954+-652108)gfind[string]=bool string=readline(518172+-543413)gfind[string]=imports bool=-239362+3615132 string=rand[j[-412343-(-412344)]]const=string()else lines=-223105-(-223106)const=rand[j[17422-17419]]string=const~=lines bool=string and 139038+15785355 or 498874+5316480 end end else if bool<-115976+986692 then if bool<-926126+1790092 then bool=pcall bool=signed and 2704562-(-911691)or 4749224-563330 imports=signed else signed=555911+32709186813944 print=readline(1042474+-1067627)getinfo=rand[j[718381+-718379]]collectgarbage=rand[j[-597838-(-597841)]]new=collectgarbage(print,signed)print=readline(348811+-374085)require=getinfo[new]load=-409950+16833666031612 lines=const[require]getinfo=rand[j[12362-12360]]signed=903093+30641448513543 collectgarbage=rand[j[695872-695869]]new=collectgarbage(print,signed)require=getinfo[new]imports=lines[require]pcall=readline(851207+-876484)require=rand[j[427512+-427508]]new=rand[j[-211445+211447]]print=rand[j[-620362-(-620365)]]signed=print(pcall,load)pcall=30675196163777-(-819467)collectgarbage=new[signed]getinfo=require(collectgarbage)collectgarbage=rand[j[405120+-405118]]new=rand[j[-738117-(-738120)]]signed=readline(833247-858449)print=new(signed,pcall)require=collectgarbage[print]lines=getinfo[require]bool=imports~=lines bool=bool and-1039854+1209262 or 1587966-534067 end else bool=-558597+11162019 next=load==size getlocal=next end end else if bool<1674156-(-156619)then if bool<2528073-725293 then if bool<1639799-67810 then new=readline(-884186+859039)signed=9601382728569-832003 imports=readline(-779428-(-754212))bool=gfind[imports]require=rand[j[-763733-(-763735)]]print=33845011903728-997216 getinfo=rand[j[-911143-(-911146)]]collectgarbage=getinfo(new,print)lines=require[collectgarbage]print=29363522517308-1000403 new=readline(-179212-(-153943))imports=bool(lines,string)bool=rand[j[1039903-1039898]]require=rand[j[264177-264175]]getinfo=rand[j[-843982-(-843985)]]collectgarbage=getinfo(new,print)lines=require[collectgarbage]print=readline(-798726+773580)getinfo=rand[j[695236-695234]]collectgarbage=rand[j[-793407-(-793410)]]new=collectgarbage(print,signed)require=getinfo[new]getinfo=1035633-1035630 imports=bool(lines,require,getinfo)bool=rand[j[203289-203283]]imports=readline(209532-234700)imports=bool[imports]imports=imports(bool)bool=rand[j[853765-853758]]imports={bool()}imports={upvaluejoin(imports)}bool=gfind[readline(-804825+779616)]else collectgarbage=rand[getinfo]bool=-16937+14018098 imports=collectgarbage end else if bool<-205882+2034902 then const=rename(12995291-656727,{j[-452826+452831],j[-1001781-(-1001783)];j[-256381+256384]})imports=readline(1009395+-1034562)string=packages(12195533-978299,{j[-964397-(-964398)],j[-208794-(-208796)];j[917844-917841],j[59498-59494],j[-688833+688838],j[-665326+665332];j[177119+-177112]})bool=gfind[imports]imports=bool(string,const)imports={}bool=gfind[readline(-642651-(-617476))]else print=19512854893514-585804 bool=rand[j[553118-553114]]new=readline(544494+-569746)require=rand[j[533426-533425]]getinfo=rand[j[-105388+105390]]collectgarbage=getinfo(new,print)print=readline(85+-25197)lines=require[collectgarbage]getinfo=rand[j[579629+-579628]]signed=19222641279429-(-450866)collectgarbage=rand[j[776082-776080]]new=collectgarbage(print,signed)require=getinfo[new]getinfo=156199+-156194 imports={bool(lines,require,getinfo)}bool=gfind[readline(1029180+-1054376)]imports={upvaluejoin(imports)}end end else if bool<1746169-(-710801)then if bool<2092497-(-77690)then bool=imports and-430499+13591542 or 10407642-1002359 else imports=readline(-700291-(-675063))collectgarbage=668260+22311170799153 bool=gfind[imports]const=rand[j[864567-864566]]lines=rand[j[872706-872704]]getinfo=readline(33961-59196)require=lines(getinfo,collectgarbage)getinfo=readline(-986019+960841)new=464272+28808161844950 string=const[require]imports=bool(string)bool=rand[j[-509745-(-509748)]]collectgarbage=868744+5023228184475 const=rand[j[-1005804+1005805]]lines=rand[j[-900412+900414]]require=lines(getinfo,collectgarbage)string=const[require]collectgarbage=readline(-6469+-18781)lines=rand[j[467410-467409]]require=rand[j[-433959-(-433961)]]getinfo=require(collectgarbage,new)const=lines[getinfo]lines=590432-590428 imports=bool(string,const,lines)bool=gfind[readline(575447+-600582)]imports={}end else ipairs=getmetatable(ipairs)bool=-278109-(-578109)cls=getmetatable(cls)exports=nil loader=getmetatable(loader)loadlib=getmetatable(loadlib)open=getmetatable(open)rawget=getmetatable(rawget)end end end else if bool<-443771+4557756 then if bool<2487134-(-972179)then if bool<2289241-(-901400)then if bool<287722+2797332 then _G=rand[const]imports=_G bool=_G and 153242+9406825 or 16410946-747075 else imports=7138230-(-739390)const=readline(-970104-(-944997))lines=-27115+7298252 string=const^lines bool=imports-string imports=readline(599124+-624253)string=bool bool=imports/string imports={bool}bool=gfind[readline(-90029-(-64928))]end else if bool<2298546-(-1031842)then bool=true bool=bool and 4934510-(-907138)or 6869571-(-691778)else bool=true bool=bool and-827561+1477973 or-33671+12403395 end end else if bool<427243+3448119 then if bool<661239+2980697 then signed=popen()load=290598-290533 pcall=22259-22256 rand[signed]=imports bool=rand[new]imports=bool(pcall,load)pcall=popen()rand[pcall]=imports getuservalue=readline(-820326-(-795127))imports=gfind[getuservalue]bool=-667953-(-667953)table=getupvalue(7005024-797389,{})load=bool bool=851804+-851804 size=bool getuservalue={imports(table)}bool={upvaluejoin(getuservalue)}getuservalue=bool class=readline(651525+-676705)imports=610001+-609999 bool=getuservalue[imports]imports=readline(336453-361564)table=bool bool=gfind[imports]module=rand[lines]next=gfind[class]class=next(table)next=readline(-663234+637968)getlocal=module(class,next)module={getlocal()}imports=bool(upvaluejoin(module))module=popen()rand[module]=imports getlocal=rand[pcall]bool=202168+97832 next=getlocal getlocal=782039+-782038 imports=808915-808914 class=getlocal getlocal=227202-227202 key=class<getlocal getlocal=imports-class else imports={}bool=gfind[readline(7768-33033)]end else load=not size bool=load and 30459+9252884 or 14661625-31555 end end else if bool<4334923-(-191528)then if bool<804515+3705888 then if bool<-880051+5308349 then pcall=readline(690068-715168)signed=gfind[pcall]imports=signed bool=4191751-575498 else loadlib=readline(-286203+261049)class=readline(764798+-789978)bool=gfind[class]key=gfind[loadlib]class=bool(key)bool=readline(465895+-491136)gfind[bool]=class bool=11310226-845015 end else bool=1822117-(-11281)imports=string end else if bool<646128+4303209 then if bool<-703405+5426125 then load=getuservalue bool=13357487-305495 else lines=not string bool=12424094-(-32711)imports=lines end else bool=11482772-93653 end end end end else if bool<6083454-(-694450)then if bool<-366958+6252955 then if bool<4495896-(-898946)then if bool<6099033-853984 then if bool<4877904-(-256769)then lines=readline(463802+-489034)const=gfind[lines]bool=gfind[readline(282622+-307822)]lines=readline(-557111-(-531921))string=const[lines]lines=rand[j[607534-607533]]const={string(lines)}imports={upvaluejoin(const)}else const=byte(375855+5582658,{j[428596+-428595],j[279930-279928];j[836054+-836051]})imports=readline(356965+-382164)bool=gfind[imports]lines={bool(const)}imports=lines[937283-937282]string=lines[-1043842-(-1043844)]const=imports bool=const and 132986+4387698 or 1024895-(-808503)imports=const end else if bool<4663149-(-607634)then new=515173+29148056754336 collectgarbage=readline(239081+-264207)bool=rand[j[782923+-782919]]lines=rand[j[505624-505622]]require=rand[j[774466+-774463]]getinfo=require(collectgarbage,new)const=lines[getinfo]imports={bool(const)}bool=gfind[readline(521520-546778)]imports={upvaluejoin(imports)}else key=-416482-(-416482)module=#getuservalue bool=-881328+16684273 table=module==key end end else if bool<-234388+6058601 then if bool<4803720-(-989073)then getinfo=519778+-519776 require=-606564+606565 const=rand[j[199211+-199210]]lines=const(require,getinfo)const=219691+-219690 string=lines==const imports=string bool=string and 753212+8028185 or 11224553-(-487403)else lines=270516+-270297 const=rand[j[-904598+904601]]string=const*lines const=-114885+115142 imports=string%const bool=584974-(-133755)rand[j[-561918-(-561921)]]=imports end else bool=12274680-(-861089)end end else if bool<6829127-164114 then if bool<928458+5077447 then if bool<5284265-(-656701)then imports=readline(139870+-165037)string=getupvalue(-755958+2931006,{j[348164+-348163],j[269123-269121],j[725555+-725552]})bool=gfind[imports]const=rename(-816165+17441054,{j[-390721-(-390724)],j[158088-158087];j[1002235-1002233]})imports=bool(string,const)bool=gfind[readline(-655562-(-630303))]imports={}else imports=readline(322980-348211)print=196870+271120187256 const=readline(320936-346066)bool=gfind[imports]string=gfind[const]require=rand[j[-768866+768867]]new=readline(-528048+502921)getinfo=rand[j[839673+-839671]]collectgarbage=getinfo(new,print)getuservalue=864802+33226745416270 getinfo=readline(390227+-415399)signed=readline(-252312+227174)lines=require[collectgarbage]require=readline(-933356+908247)require=string[require]const={require(string,lines)}imports=bool(upvaluejoin(const))bool=imports()imports=rand[j[518478-518475]]pcall=1251687548601-(-621453)string=bool require=gfind[getinfo]size=readline(860167-885439)collectgarbage=rand[j[310413+-310412]]new=rand[j[-670861+670863]]print=new(signed,pcall)signed=readline(-809733+784601)getinfo=collectgarbage[print]lines=require[getinfo]collectgarbage=rand[j[-114514+114515]]new=rand[j[598218-598216]]pcall=18050567759155-902238 print=new(signed,pcall)getinfo=collectgarbage[print]print=readline(982113+-1007243)new=gfind[print]signed=rand[j[-1020187-(-1020188)]]pcall=rand[j[284036-284034]]load=pcall(size,getuservalue)print=signed[load]collectgarbage=new[print]require={lines(getinfo,collectgarbage)}const=imports(upvaluejoin(require))lines=rand[j[-454894-(-454895)]]require=rand[j[1017421-1017419]]new=19049+30115130453086 collectgarbage=readline(323778-348900)getinfo=require(collectgarbage,new)new=1021624+3579863101387 imports=lines[getinfo]bool=const[imports]const=bool imports=readline(110891-136008)collectgarbage=readline(769458-794574)bool=gfind[imports]imports=bool()lines=rand[j[-274273+274274]]require=rand[j[-826268-(-826270)]]getinfo=require(collectgarbage,new)bool=lines[getinfo]lines=const imports[bool]=lines bool=string[const]imports={bool}bool=gfind[readline(-793273+768082)]end else if bool<-314475+6613402 then imports=7555306-(-690914)const=readline(-276731+251571)lines=2115552-708769 string=const^lines bool=imports-string imports=readline(-228467+203293)string=bool bool=imports/string imports={bool}bool=gfind[readline(335370-360529)]else bool=rand[j[-239276-(-239280)]]print=2681767500496-(-387600)new=readline(-441721-(-416584))require=rand[j[-251083+251084]]getinfo=rand[j[-618342+618344]]collectgarbage=getinfo(new,print)lines=require[collectgarbage]require=929931-929926 imports=bool(lines,string,require)bool=193514+15463297 end end else if bool<6719159-(-10353)then if bool<712104+5995289 then new=nil exports=readline(-96925+71810)table={}module=popen()print=nil loader=readline(1000212+-1025472)rand[module]=table key=packages(10749110-265167,{module,signed,pcall,getinfo})tmpname=nil table=popen()cls={}loadlib=popen()rand[table]=key lines=nil ipairs=readline(619600-644702)object=readline(262270-287523)key={}rand[loadlib]=key key=gfind[ipairs]collectgarbage=nil getinfo=getmetatable(getinfo)new=readline(627345+-652475)rawget=rand[loadlib]getinfo=readline(-896303+871072)open={[loader]=rawget;[exports]=tmpname}load=nil ipairs=key(cls,open)rand[const]=ipairs key=getupvalue(464317+12396511,{loadlib,module;size,signed,pcall;table})rand[require]=key size=getmetatable(size)table=getmetatable(table)open=28863442517870-215790 getuservalue=nil signed=getmetatable(signed)rawget=readline(-333905+308728)loadlib=getmetatable(loadlib)pcall=getmetatable(pcall)lines=gfind[getinfo]program=34286276503916-633615 collectgarbage=gfind[new]signed=rand[const]module=getmetatable(module)pcall=rand[require]size=readline(377809+-403071)getuservalue=215925+23032881815152 loadlib=32955625762658-(-134288)load=pcall(size,getuservalue)print=signed[load]signed=readline(-977496+952387)signed=collectgarbage[signed]new={signed(collectgarbage,print)}cls=readline(-75655+50410)getinfo=lines(upvaluejoin(new))size=readline(682773-707965)lines=getinfo()getinfo=popen()getuservalue=-851740+7386615925899 table=23424465714741-709530 rand[getinfo]=lines lines=rand[getinfo]signed=rand[const]pcall=rand[require]load=pcall(size,getuservalue)print=signed[load]pcall=rand[const]load=rand[require]delete=1151966204253-(-127163)collectgarbage=readline(-849927-(-824724))getuservalue=readline(403773-428990)size=load(getuservalue,table)exports=20713669771513-416588 table=readline(528897+-554153)signed=pcall[size]module=2897029876799-198394 load=rand[const]size=rand[require]getuservalue=size(table,module)key=832649954755-132160 pcall=load[getuservalue]module=readline(-384089-(-358966))size=rand[const]getuservalue=rand[require]table=getuservalue(module,key)key=readline(847904+-873009)load=size[table]getuservalue=rand[const]table=rand[require]module=table(key,loadlib)size=getuservalue[module]module=rand[const]key=rand[require]loadlib=key(cls,open)table=module[loadlib]tmpname=-1030492+24291884377483 getuservalue=72737-72577 loadlib=readline(432827+-458067)key=gfind[loadlib]unsigned=21019241934409-(-178162)cls=rand[const]open=rand[require]loader=open(rawget,exports)loadlib=cls[loader]module=key[loadlib]cls=380364+-380094 loadlib=380905+-380405 rawget=-231913+21470480363766 key=module(loadlib,cls)loader=readline(-349685+324452)loadlib=rand[const]cls=rand[require]open=cls(loader,rawget)module=loadlib[open]loadlib=false exports=readline(-451145+425944)open=rand[const]loader=rand[require]rawget=loader(exports,tmpname)tmpname=readline(-821941+796813)cls=open[rawget]loader=rand[const]rawget=rand[require]exports=rawget(tmpname,program)open=loader[exports]rawget=rand[const]exports=rand[require]program=readline(-231308-(-206163))tmpname=exports(program,unsigned)loader=rawget[tmpname]collectgarbage=lines[collectgarbage]program=readline(199527-224735)tmpname=gfind[program]unsigned=rand[const]length=rand[require]hasnext=length(object,delete)program=unsigned[hasnext]object=-257387+198274411975 exports=tmpname[program]hasnext=readline(325248+-350474)program=rand[const]unsigned=rand[require]length=unsigned(hasnext,object)tmpname=program[length]rawget=exports[tmpname]new={[print]=signed;[pcall]=load;[size]=getuservalue;[table]=key,[module]=loadlib;[cls]=open,[loader]=rawget}open=854439+26130065384928 collectgarbage=collectgarbage(lines,new)rawget=25571468469353-(-674330)size=27802657593691-190153 lines=popen()rand[lines]=collectgarbage load=readline(814787+-840024)print=rand[const]signed=rand[require]key=26409068319576-(-924849)pcall=signed(load,size)loadlib=14131303055817-(-186347)new=print[pcall]loader=73416+21314428930045 module=readline(203774+-229001)print=rand[lines]size=rand[const]getuservalue=rand[require]table=getuservalue(module,key)load=size[table]key=readline(897559+-922710)getuservalue=rand[const]table=rand[require]module=table(key,loadlib)size=getuservalue[module]loadlib=readline(89113+-114237)signed=readline(-438521+413335)table=rand[const]cls=722315859303-955415 module=rand[require]key=module(loadlib,cls)cls=readline(740540-765738)getuservalue=table[key]module=rand[const]signed=print[signed]key=rand[require]loadlib=key(cls,open)table=module[loadlib]pcall={[load]=size,[getuservalue]=table}table=13743367645102-(-45393)loadlib=readline(-868418+843197)getuservalue=readline(-794491-(-769320))open=-72949+26603057991001 signed=signed(print,pcall)pcall=rand[const]load=rand[require]size=load(getuservalue,table)print=pcall[size]load=readline(-834704+809518)cls=-675351+21295849747667 pcall=rand[lines]table=rand[const]module=rand[require]key=module(loadlib,cls)getuservalue=table[key]module=rand[const]key=rand[require]cls=readline(235966-261148)loadlib=key(cls,open)open=readline(688964+-714129)table=module[loadlib]key=rand[const]loadlib=rand[require]cls=loadlib(open,loader)load=pcall[load]loader=readline(794882-820112)module=key[cls]loadlib=rand[const]cls=rand[require]open=cls(loader,rawget)key=loadlib[open]size={[getuservalue]=table,[module]=key}load=load(pcall,size)collectgarbage={[new]=signed;[print]=load}print=rand[getinfo]pcall=rand[const]load=rand[require]getuservalue=readline(-133874-(-108741))table=9990389785830-(-339270)size=load(getuservalue,table)signed=pcall[size]new=print[signed]pcall=randomseed(14471954-(-360127),{const,require})cls=143860+5347724171206 signed=setlocal(9194911-477949,{getinfo,const;require})print=popen()rand[print]=signed signed=popen()rand[signed]=pcall load=packages(4756961-(-456909),{const;require,signed;print})pcall=popen()size=readline(1015394+-1040557)rand[pcall]=load loadlib=readline(810643+-835830)load=gfind[size]table=rand[const]module=rand[require]key=module(loadlib,cls)getuservalue=table[key]size=load(getuservalue)bool=size and 7444516-393998 or 12970877-(-57546)else bool=rand[j[690004-689997]]bool=bool and-494608+16034095 or 10250557-(-92492)end else new=readline(82628+-107768)pcall=30754712529277-(-446068)print=-912224+33872697534717 require=rand[j[-170035-(-170037)]]getinfo=rand[j[-592223+592226]]collectgarbage=getinfo(new,print)lines=require[collectgarbage]const=string[lines]print=2544998645210-(-706247)require=rand[j[946793+-946791]]getinfo=rand[j[808224-808221]]signed=readline(-728317-(-703110))new=readline(-593284-(-568095))collectgarbage=getinfo(new,print)lines=require[collectgarbage]imports=const[lines]lines=rand[j[-122754+122755]]collectgarbage=rand[j[447229-447227]]new=rand[j[-918888-(-918891)]]print=new(signed,pcall)getinfo=collectgarbage[print]print=readline(-929823+904674)signed=19984172735747-(-870230)require=lines(getinfo)getinfo=rand[j[-129180-(-129182)]]collectgarbage=rand[j[636293-636290]]new=collectgarbage(print,signed)lines=getinfo[new]const=require[lines]bool=imports~=const bool=bool and 4637652-(-608829)or 859955+9572015 end end end else if bool<9055478-(-72914)then if bool<-473732+9154756 then if bool<7574845-179188 then if bool<7460894-553445 then string=arr require=popen()bool=true lines=readline(930238-955410)const=popen()rand[const]=bool imports=gfind[lines]lines=readline(-727866+702732)bool=imports[lines]lines=popen()rand[lines]=bool getinfo=popen()bool=getupvalue(10734524-(-1031629),{})rand[require]=bool print=setlocal(-48507+9969037,{getinfo})bool=false new=readline(-258247+233048)rand[getinfo]=bool collectgarbage=gfind[new]new=collectgarbage(print)imports=new bool=new and-210471+1801925 or 388547+13612614 else size=readline(420918+-446117)load=gfind[size]table=packages(8522777-(-488206),{signed;const,require;print;lines})module={load(table)}size=module[-915689-(-915690)]table=bool load=size getuservalue=module[-678076+678078]bool=size and 5582134-1043740 or 14068646-1016654 end else if bool<-805358+9101957 then bool=randomseed(-754638+9905334,{require})next={bool()}bool=gfind[readline(-180102+154918)]imports={upvaluejoin(next)}else load=rand[pcall]table={load()}bool=gfind[readline(-1046303+1021153)]imports={upvaluejoin(table)}end end else if bool<147618+8724598 then if bool<9260378-497291 then string=arr[-777675+777676]pcall=4300547338398-(-923444)const=arr[439681+-439679]bool=rand[j[-562356+562357]]lines=arr[-100632-(-100635)]size=14584+28734383471436 collectgarbage=rand[j[-592706+592708]]new=rand[j[267561-267558]]signed=readline(-379859+354746)print=new(signed,pcall)load=22589680005552-755865 getinfo=collectgarbage[print]pcall=readline(534270-559367)new=rand[j[-851528-(-851530)]]print=rand[j[548829-548826]]signed=print(pcall,load)collectgarbage=new[signed]imports=readline(-863465-(-838222))print=rand[j[-26719-(-26721)]]load=readline(890784+-916063)signed=rand[j[-564662-(-564665)]]pcall=signed(load,size)new=print[pcall]require={[getinfo]=string;[collectgarbage]=const,[new]=lines}imports=bool[imports]const=nil imports=imports(bool,require)lines=nil imports={}string=nil bool=gfind[readline(-131942-(-106772))]else bool=imports and 15981798-1003357 or-24890+6733303 end else bool=rand[j[341212+-341211]]lines=rand[j[-759858+759860]]new=-202979+20374608264690 pcall=-801478+2880042844163 signed=readline(515857+-540975)require=rand[j[153356+-153353]]collectgarbage=readline(318135+-343278)getinfo=require(collectgarbage,new)require=readline(-970881+945737)const=lines[getinfo]lines=gfind[require]collectgarbage=rand[j[24155-24153]]new=rand[j[-913977-(-913980)]]print=new(signed,pcall)getinfo=collectgarbage[print]require=lines(getinfo)string=const..require new=33150380744837-(-973767)imports=bool(string)string=imports lines=rand[j[-792701-(-792703)]]require=rand[j[-431165-(-431168)]]collectgarbage=readline(890176+-915396)getinfo=require(collectgarbage,new)const=lines[getinfo]imports=string[const]bool=not imports bool=bool and 11233292-(-417947)or 938934+5792400 end end else if bool<9546205-163862 then if bool<9509874-144462 then if bool<9453655-250165 then bool=3932657-556887 else open=readline(-892270-(-867034))load=rand[print]bool=138293+14491777 loader=3954075691538-385761 key=rand[const]loadlib=rand[require]cls=loadlib(open,loader)module=key[cls]key=556206-556201 table=load(module,getuservalue,key)end else bool=-698409+13153382 end else if bool<9405590-(-25914)then if bool<-191346+9598113 then imports=const bool=const and 5277380-480206 or-821766+13278571 else next=rand[const]bool=next and 166892-(-822943)or-39297+10642719 getlocal=next end else debug=bool unsigned=405545-405544 program=exports[unsigned]unsigned=false tmpname=program==unsigned bool=tmpname and 855321+15580152 or 11113075-535863 _G=tmpname end end end end end else if bool<387381+12068918 then if bool<458133+10746236 then if bool<409970+10056074 then if bool<438791+9844888 then if bool<10261930-209771 then if bool<456537+9304302 then print=pcall class=readline(959565+-984737)next=gfind[class]class=readline(927039-952220)getlocal=next[class]next=getlocal(string,print)getlocal=rand[j[631751+-631745]]class=getlocal()module=next+class table=module+collectgarbage module=-523153+523409 getuservalue=table%module module=lines[const]bool=677082+15657609 class=-655673+655674 collectgarbage=getuservalue print=nil next=collectgarbage+class getlocal=require[next]table=module..getlocal lines[const]=table else bool=true rand[j[998222+-998221]]=bool imports={}bool=gfind[readline(-182352+157176)]end else if bool<9378815-(-762755)then key=readline(694059-719300)bool=gfind[key]key=readline(459206-484360)gfind[key]=bool bool=10414241-(-50970)else cls=not ipairs module=module+loadlib table=module<=key table=cls and table cls=module>=key cls=ipairs and cls table=cls or table cls=-814350+12307512 bool=table and cls table=4625323-(-756148)bool=bool or table end end else if bool<11275623-820255 then if bool<10073449-(-314344)then const=128433-128432 bool={}lines=rand[j[270790-270781]]string=bool bool=357875+11525717 require=lines lines=897202-897201 getinfo=lines lines=-292792-(-292792)collectgarbage=getinfo<lines lines=const-getinfo else bool=rand[j[64100-64096]]collectgarbage=readline(-461789-(-436670))new=364035+16884769509555 lines=rand[j[-61305-(-61307)]]require=rand[j[378599-378596]]getinfo=require(collectgarbage,new)print=-120622+10371270765067 const=lines[getinfo]new=readline(-501248+475977)require=rand[j[927442-927440]]getinfo=rand[j[3212-3209]]collectgarbage=getinfo(new,print)lines=require[collectgarbage]require=174425-174422 imports=bool(const,lines,require)bool=rand[j[253672+-253667]]imports=readline(-133154-(-107986))imports=bool[imports]imports=imports(bool)bool=true imports={bool}bool=gfind[readline(186618+-211757)]end else bool=13632230-496461 end end else if bool<9724488-(-974767)then if bool<11345816-745436 then if bool<155615+10406687 then string=rand[j[559392+-559391]]imports=#string string=-400649-(-400649)bool=imports==string bool=bool and 14723919-974471 or 4397180-(-725994)else bool=debug imports=_G bool=16662024-998153 end else if bool<-695878+11309906 then rand[const]=getlocal bool=rand[const]bool=bool and 367667+8998026 or 1007974+10324910 else bool=rand[j[-425899+425909]]const=rand[j[-73421+73432]]string[bool]=const bool=rand[j[228697+-228685]]const={bool(string)}bool=gfind[readline(-1044579-(-1019391))]imports={upvaluejoin(const)}end end else if bool<-747415+11767804 then if bool<11105079-302055 then key=-71631+71637 bool=rand[new]class=-709050+709051 next=bool(class,key)bool=readline(149506+-174747)gfind[bool]=next key=readline(-777402-(-752161))class=gfind[key]key=479374+-479372 bool=class>key bool=bool and 4386829-(-84007)or-999193+11127934 else new=readline(-260981+235730)bool=rand[j[242523-242518]]signed=-80804+13953623659781 require=rand[j[886149-886147]]getinfo=rand[j[-23317+23320]]print=10266842222157-867233 collectgarbage=getinfo(new,print)print=readline(-469351-(-444158))lines=require[collectgarbage]getinfo=rand[j[-102108-(-102110)]]collectgarbage=rand[j[6721-6718]]new=collectgarbage(print,signed)require=getinfo[new]getinfo=308970+-308966 imports={bool(lines,require,getinfo)}bool=gfind[readline(-695597+670391)]imports={upvaluejoin(imports)}end else debug=rand[const]bool=debug and 471039+12888471 or-683378+16962292 _G=debug end end end else if bool<561091+11197009 then if bool<-587585+12055991 then if bool<851904+10478675 then if bool<150202+11121372 then imports=rand[j[800078+-800077]]new=readline(210394-235607)getinfo=readline(-862650-(-837393))const=rand[j[247064+-247062]]collectgarbage=1006688+26228570723157 lines=rand[j[167847+-167844]]require=lines(getinfo,collectgarbage)string=const[require]bool=imports[string]string=bool bool=rand[j[282082-282078]]print=11271856586411-895531 require=rand[j[-1006277-(-1006279)]]getinfo=rand[j[-827802-(-827805)]]collectgarbage=getinfo(new,print)new=readline(333423-358517)lines=require[collectgarbage]const=lines..string imports=bool(const)require=rand[j[-274948+274950]]print=-370245+27361463408650 getinfo=rand[j[-1043931+1043934]]collectgarbage=getinfo(new,print)lines=require[collectgarbage]const=imports imports=const[lines]bool=not imports bool=bool and 1003921+9856756 or-885614+1754428 else print=322074+-322074 bool=rand[j[-361245-(-361246)]]const=lines signed=674569-674314 new=bool(print,signed)string[const]=new const=nil bool=12059972-176380 end else if bool<772448+10594313 then bool=true bool=-241657+7803006 else bool=gfind[readline(-10120-15105)]imports={const}end end else if bool<-505489+12207435 then if bool<346954+11219886 then table=module cls=table getuservalue[table]=cls bool=10160797-(-25582)table=nil else bool=rand[j[108777+-108773]]lines=rand[j[-530482-(-530484)]]collectgarbage=readline(-155687-(-130419))new=314192+11599304903113 require=rand[j[1034748-1034745]]getinfo=require(collectgarbage,new)new=readline(465208+-490364)print=17011345305590-20741 const=lines[getinfo]require=rand[j[785953-785951]]getinfo=rand[j[-1000702+1000705]]collectgarbage=getinfo(new,print)lines=require[collectgarbage]require=-500885-(-500889)imports={bool(const,lines,require)}bool=gfind[readline(919986+-945106)]imports={upvaluejoin(imports)}end else const=rand[j[-558623+558625]]lines=rand[j[197573+-197570]]string=const==lines imports=string bool=-362094+9143491 end end else if bool<11539021-(-789416)then if bool<688019+11271475 then if bool<10943482-(-923865)then imports=readline(435831-461042)bool=gfind[imports]string=readline(-795197-(-769973))imports=bool(string)imports={}bool=gfind[readline(536373+-561622)]else new=not collectgarbage lines=lines+getinfo const=lines<=require const=new and const new=lines>=require new=collectgarbage and new const=new or const new=-749833+12035813 bool=const and new const=78154+10566348 bool=bool or const end else getuservalue=readline(-1058747-(-1033515))size=gfind[getuservalue]getuservalue=readline(624470+-649570)load=size[getuservalue]signed=load bool=182128+668715 end else if bool<12314545-(-113717)then if bool<12307839-(-34642)then collectgarbage=readline(-44560-(-19405))bool=rand[j[120297+-120296]]lines=rand[j[-770512-(-770514)]]require=rand[j[238384-238381]]string={assert(550136+-550135,upvaluejoin(arr))}new=-854222+29415352647247 getinfo=require(collectgarbage,new)const=lines[getinfo]lines=string[1033094-1033093]require=33316-33311 imports=bool(const,lines,require)imports={}bool=gfind[readline(133591-158809)]else bool=gfind[readline(-20742+-4419)]imports={}end else new=getmetatable(new)collectgarbage=nil lines=getmetatable(lines)signed=getmetatable(signed)collectgarbage=readline(232638-257853)getuservalue=nil table=nil lines=nil const=getmetatable(const)size=nil new=readline(494290-519505)signed=readline(482276-507448)pcall=getmetatable(pcall)print=nil print=readline(606480-631712)load=nil module=getmetatable(module)require=getmetatable(require)pcall=popen()require=popen()getinfo=getmetatable(getinfo)const=nil rand[require]=const module=-133335-(-133591)const=popen()rand[const]=lines load={}getinfo=gfind[collectgarbage]collectgarbage=readline(-616565-(-591459))lines=getinfo[collectgarbage]getinfo=popen()rand[getinfo]=lines collectgarbage=gfind[new]new=readline(-355755-(-330491))lines=collectgarbage[new]table=-994447-(-994448)size=popen()new=gfind[print]print=readline(854972-880162)collectgarbage=new[print]print=gfind[signed]signed=readline(780483+-805753)new=print[signed]signed=popen()print=-263095-(-263095)getuservalue={}rand[signed]=print key=module print=50929-50927 rand[pcall]=print print={}rand[size]=load module=287423-287422 loadlib=module load=-346176-(-346176)module=-802411+802411 ipairs=loadlib<module module=table-loadlib bool=9165531-(-1020848)end end end end else if bool<936796+14020899 then if bool<13088642-(-89206)then if bool<13165752-131393 then if bool<13339475-473838 then if bool<12270142-(-513245)then bool=imports and 1465577-(-363811)or-564081+6868124 else string=arr[-363436-(-363437)]bool=rand[j[-429693+429694]]const=arr[-71439+71441]lines=bool bool=lines[const]bool=bool and 5820887-854154 or 16167879-9112 end else if bool<12597625-(-368559)then string=nil rand[j[732163+-732158]]=imports bool=6576079-(-132334)else rawget=-222349+31691466923570 imports={}loader=32688459215618-423821 getuservalue=rand[const]table=rand[require]loadlib=21185318732853-597420 open=readline(-284648+259506)key=readline(635956-661118)module=table(key,loadlib)unsigned=readline(-508287+483092)loadlib=readline(-151362+126196)size=getuservalue[module]load=collectgarbage[size]tmpname=9535113850709-(-303619)table=rand[const]module=rand[require]cls=32960950295687-385171 key=module(loadlib,cls)getuservalue=table[key]key=rand[const]length=24825796464226-(-351942)exports=-470984+7607880236446 loadlib=rand[require]cls=loadlib(open,loader)module=key[cls]loader=readline(-472055+446816)loadlib=rand[const]getinfo=getmetatable(getinfo)cls=rand[require]open=cls(loader,rawget)key=loadlib[open]rawget=readline(-591538-(-566326))cls=rand[const]open=rand[require]loader=open(rawget,exports)loadlib=cls[loader]exports=readline(747361-772540)open=rand[const]loader=rand[require]rawget=loader(exports,tmpname)program=30046124215738-(-960749)size=readline(905299-930407)cls=open[rawget]tmpname=readline(-958873-(-933777))loader=rand[const]rawget=rand[require]exports=rawget(tmpname,program)open=loader[exports]exports=rand[const]loader=false size=load[size]tmpname=rand[require]program=tmpname(unsigned,length)rawget=exports[program]exports=false table={[module]=key,[loadlib]=cls,[open]=loader;[rawget]=exports}size=size(load,getuservalue,table)load=popen()rawget=7691991015221-(-552648)rand[load]=size table=rand[const]open=readline(-688827+663551)module=rand[require]loadlib=readline(-456544-(-431296))cls=-172737+9806234711191 loader=-506964+31297813853506 key=module(loadlib,cls)getuservalue=table[key]size=collectgarbage[getuservalue]getuservalue=readline(-243941-(-218793))key=rand[const]getuservalue=size[getuservalue]loadlib=rand[require]cls=loadlib(open,loader)loader=readline(687196-712365)module=key[cls]tmpname=-625781+19783357263985 loadlib=rand[const]cls=rand[require]open=cls(loader,rawget)key=loadlib[open]cls=rand[const]exports=-642220+7848609372914 open=rand[require]rawget=readline(936512+-961637)loader=open(rawget,exports)loadlib=cls[loader]cls=gsub(-236856+2064846,{load,const;require,signed,print;lines,pcall})table={[module]=key,[loadlib]=cls}loadlib=readline(-393394-(-368156))open=-292147+3565067353007 cls=14163324034156-1016489 getuservalue=getuservalue(size,table)table=rand[const]module=rand[require]key=module(loadlib,cls)getuservalue=table[key]size=collectgarbage[getuservalue]pcall=getmetatable(pcall)module=rand[const]loader=24534594237876-575764 key=rand[require]cls=readline(63941-89175)getuservalue=readline(684856+-709960)getuservalue=size[getuservalue]loadlib=key(cls,open)table=module[loadlib]cls=-706872+11115750268272 getuservalue=getuservalue(size,table)table=rand[const]loadlib=readline(-504467-(-479372))module=rand[require]rawget=7519143215675-849038 open=readline(-230131-(-204990))key=module(loadlib,cls)getuservalue=table[key]size=collectgarbage[getuservalue]key=rand[const]bool=gfind[readline(39778+-65032)]new=nil loadlib=rand[require]signed=getmetatable(signed)cls=loadlib(open,loader)module=key[cls]loadlib=rand[const]exports=32301067071617-(-641600)cls=rand[require]getuservalue=readline(-271904-(-246756))loader=readline(103716+-128945)load=getmetatable(load)open=cls(loader,rawget)rawget=readline(-891023-(-865865))key=loadlib[open]cls=rand[const]open=rand[require]loader=open(rawget,exports)loadlib=cls[loader]open=readline(798753-823926)getuservalue=size[getuservalue]cls=getupvalue(660230+5255144,{const;require;print})print=getmetatable(print)table={[module]=key;[loadlib]=cls}loader=23669916120537-740043 getuservalue=getuservalue(size,table)cls=134618+14558343089313 table=rand[const]loadlib=readline(324130+-349313)module=rand[require]key=module(loadlib,cls)getuservalue=table[key]size=collectgarbage[getuservalue]key=rand[const]loadlib=rand[require]rawget=-297516+19560476257728 cls=loadlib(open,loader)loader=readline(-1033323+1008104)module=key[cls]loadlib=rand[const]getuservalue=readline(-243834-(-218559))cls=rand[require]open=cls(loader,rawget)key=loadlib[open]cls=rand[const]exports=24364578464922-702537 open=rand[require]getuservalue=size[getuservalue]rawget=readline(-423757-(-398560))loader=open(rawget,exports)loadlib=cls[loader]exports=readline(980509+-1005770)open=rand[const]loader=rand[require]rawget=loader(exports,tmpname)cls=open[rawget]open=readline(-539158+513944)loader=32213185905790-(-587290)table={[module]=key,[loadlib]=cls}getuservalue=getuservalue(size,table)table=rand[const]loadlib=readline(-200668-(-175390))module=rand[require]cls=27252467108549-(-419533)key=module(loadlib,cls)getuservalue=table[key]rawget=10827556997534-734701 size=collectgarbage[getuservalue]exports=496498+3339950633633 key=rand[const]loadlib=rand[require]cls=loadlib(open,loader)module=key[cls]loadlib=rand[const]loader=readline(-35255+10013)cls=rand[require]open=cls(loader,rawget)tmpname=-76724+24390277519377 key=loadlib[open]rawget=readline(549892+-575114)cls=rand[const]open=rand[require]loader=open(rawget,exports)loadlib=cls[loader]getuservalue=readline(-854867-(-829592))exports=readline(72911-98134)open=rand[const]collectgarbage=nil loader=rand[require]rawget=loader(exports,tmpname)cls=open[rawget]table={[module]=key;[loadlib]=cls}getuservalue=size[getuservalue]getuservalue=getuservalue(size,table)load=rand[lines]getuservalue=995438-995437 size=readline(-98079-(-72948))size=load[size]size=size(load,getuservalue)const=getmetatable(const)lines=getmetatable(lines)require=getmetatable(require)end end else if bool<12823500-(-314708)then if bool<823453+12264511 then bool=table bool=load and-245162+8651586 or 4673193-744061 else bool=true bool=bool and-946333+11747552 or-314017+4060515 end else imports=readline(-563779+538548)require=readline(152683-177813)bool=gfind[imports]getinfo=readline(473557+-498666)lines=gfind[require]getinfo=lines[getinfo]require={getinfo(lines,string)}imports=bool(upvaluejoin(require))bool={imports()}imports={upvaluejoin(bool)}bool=gfind[readline(-903006+877892)]end end else if bool<625866+13391349 then if bool<13675312-57987 then if bool<14415143-1043109 then bool=15873561-(-405353)tmpname=89223+-89222 debug=exports[tmpname]_G=debug else module=#getuservalue key=360322+-360322 table=module==key bool=table and 6732970-41292 or 14966014-(-836931)end else if bool<14209110-331830 then lines=70910-70773 const=rand[j[-150593-(-150595)]]string=const*lines const=-795263+22425995610952 imports=string+const const=-117713+117714 string=33961+35184372054871 bool=imports%string rand[j[714454+-714452]]=bool string=rand[j[-212120-(-212123)]]imports=string~=const bool=-832340+6647694 else collectgarbage=imports new=readline(-363732+338517)imports=gfind[new]print=readline(-113932+88700)size=readline(-486257-(-461025))new=readline(7720-32984)bool=imports[new]new=popen()rand[new]=bool imports=gfind[print]print=readline(351736+-376900)bool=imports[print]print=bool pcall=bool load=gfind[size]bool=load and 11036911-(-954318)or-126353-(-977196)signed=load end end else if bool<14957546-297821 then if bool<935005+13086937 then bool=12310783-(-642493)lines=rand[j[-47390+47396]]const=lines==string imports=const else bool=12196965-(-831458)size=nil getuservalue=nil end else imports=readline(548566-573776)bool=gfind[imports]require=rand[j[-200608-(-200609)]]signed=9831301541814-(-418348)print=864318+10506147685086 getinfo=rand[j[439562-439560]]string=arr[868245+-868244]new=readline(-934512-(-909265))collectgarbage=getinfo(new,print)print=readline(-903351+878253)pcall=12031027492383-24637 lines=require[collectgarbage]getinfo=rand[j[877207-877206]]collectgarbage=rand[j[-632845+632847]]new=collectgarbage(print,signed)signed=readline(1009050-1034323)require=getinfo[new]collectgarbage=rand[j[-184303+184304]]new=rand[j[539114+-539112]]print=new(signed,pcall)getinfo=collectgarbage[print]new=readline(610120+-635383)const={[lines]=string;[require]=getinfo}imports=bool(const)const=imports signed=581198+17217916453123 imports=readline(455461+-480591)bool=gfind[imports]imports=readline(-358212+333091)print=-122717+33539030703198 require=rand[j[-331557-(-331558)]]getinfo=rand[j[-667530+667532]]collectgarbage=getinfo(new,print)print=readline(-910717+885614)lines=require[collectgarbage]imports=bool[imports]imports=imports(bool,lines)getinfo=rand[j[-201980-(-201981)]]collectgarbage=rand[j[474550-474548]]new=collectgarbage(print,signed)require=getinfo[new]lines=const[require]require=readline(315747-341002)require=imports[require]bool={require(imports,lines)}imports={upvaluejoin(bool)}bool=gfind[readline(-771176-(-746024))]end end end else if bool<15724834-(-291377)then if bool<15186868-(-476911)then if bool<-771603+16111138 then if bool<530680+14507967 then print=readline(-988807-(-963608))imports=readline(512750+-537861)bool=gfind[imports]signed=getupvalue(-671285+3810070,{})string=rand[j[987463-987459]]require=readline(584299-609479)lines=gfind[require]new=gfind[print]print={new(signed)}new=-480458-(-480460)collectgarbage={upvaluejoin(print)}getinfo=collectgarbage[new]require=lines(getinfo)lines=readline(-678148+652882)const=string(require,lines)string={const()}imports=bool(upvaluejoin(string))const=rand[j[912898-912893]]string=imports bool=const and 13526344-(-494785)or-595222+13548498 imports=const else loadlib=popen()rand[loadlib]=getlocal rawget=-805153+805154 ipairs=readline(975012-1000227)cls=897012+-896912 imports=gfind[ipairs]ipairs=readline(-869761+844497)bool=imports[ipairs]ipairs=-336222-(-336223)imports=bool(ipairs,cls)ipairs=popen()cls=-430556+430556 open=-970925+971180 tmpname=readline(-858056+832876)exports=123204+-123202 rand[ipairs]=imports hasnext=-521821-(-531821)bool=rand[new]imports=bool(cls,open)cls=popen()open=519878-519877 rand[cls]=imports length=-27024+27024 bool=rand[new]loader=rand[ipairs]imports=bool(open,loader)open=popen()rand[open]=imports imports=rand[new]loader=imports(rawget,exports)imports=-856883+856884 bool=loader==imports exports=readline(-617766+592562)loader=popen()imports=readline(-479808-(-454542))rand[loader]=bool debug=gfind[tmpname]program=rand[new]unsigned={program(length,hasnext)}tmpname=debug(upvaluejoin(unsigned))debug=readline(727478+-752682)_G=tmpname..debug rawget=exports.._G bool=readline(121114-146308)bool=table[bool]bool=bool(table,imports,rawget)rawget=popen()exports=readline(131544-156743)_G=gsub(-351406+5919370,{new;loadlib,pcall,lines,const,module;loader,rawget;ipairs;open,cls,signed})rand[rawget]=bool imports=gfind[exports]exports={imports(_G)}bool={upvaluejoin(exports)}exports=bool bool=rand[loader]bool=bool and-372158+3376279 or-547234+11603847 end else if bool<14899426-(-642091)then string=readline(451662+-476873)bool=gfind[string]const=rand[j[-224629+224637]]lines=-106789+106789 string=bool(const,lines)bool=706173+9636876 else bool=gfind[readline(-333222-(-308065))]string=nil imports={}const=nil end end else if bool<324448+15491968 then if bool<15173182-(-625443)then bool=2572875-(-136035)rand[const]=imports else key=#getuservalue module=-374476+374477 table=lines(module,key)module=collectgarbage(getuservalue,table)cls=932112+-932111 table=nil key=rand[size]ipairs=module-cls loadlib=new(ipairs)key[module]=loadlib bool=-481967+13860687 module=nil end else load=268657+-268644 lines=554484-554452 const=rand[j[-83364-(-83367)]]string=const%lines require=rand[j[830629-830625]]new=rand[j[-582017-(-582019)]]signed=-331511-(-331513)table=rand[j[928336-928333]]getuservalue=table-string table=-852857+852889 size=getuservalue/table pcall=load-size print=signed^pcall collectgarbage=new/print signed=-546732-(-546988)getinfo=require(collectgarbage)require=-152338+4295119634 print=-853225-(-853226)lines=getinfo%require getinfo=308898-308896 require=getinfo^string const=lines/require require=rand[j[-683922-(-683926)]]new=const%print load=608805-608549 print=4295496390-529094 collectgarbage=new*print getinfo=require(collectgarbage)require=rand[j[34582-34578]]collectgarbage=require(const)lines=getinfo+collectgarbage getinfo=626754+-561218 const=nil require=lines%getinfo collectgarbage=lines-require new=-369118+434654 getinfo=collectgarbage/new lines=nil new=903682+-903426 collectgarbage=require%new print=require-collectgarbage new=print/signed signed=928181-927925 print=getinfo%signed string=nil pcall=getinfo-print getinfo=nil signed=pcall/load require=nil pcall={collectgarbage,new;print,signed}new=nil collectgarbage=nil bool=4861837-(-261337)print=nil rand[j[-61717-(-61718)]]=pcall signed=nil end end else if bool<15991452-(-440813)then if bool<-502674+16831864 then if bool<-934417+17161829 then new=-138706+138961 bool={}print=readline(-907000+881828)rand[j[971762-971760]]=bool imports=rand[j[-598396+598399]]getinfo=35184371793395-(-295437)require=imports imports=const%getinfo bool=-414136+16748827 rand[j[626724+-626720]]=imports collectgarbage=const%new new=-822023+822025 getinfo=collectgarbage+new rand[j[648013+-648008]]=getinfo new=gfind[print]print=readline(-240509+215410)collectgarbage=new[print]new=collectgarbage(string)signed=new pcall=202114+-202113 print=54033-54032 collectgarbage=readline(-218564+193359)lines[const]=collectgarbage load=pcall collectgarbage=-269224+269358 pcall=-845760+845760 size=load<pcall pcall=print-load else rand[const]=_G unsigned=rand[open]length=-670795+670796 program=unsigned+length tmpname=exports[program]debug=load+tmpname tmpname=174468-174212 bool=debug%tmpname load=bool program=rand[cls]tmpname=size+program program=-70607-(-70863)debug=tmpname%program bool=3439807-730897 size=debug end else getuservalue=not size pcall=pcall+load print=pcall<=signed print=getuservalue and print getuservalue=pcall>=signed getuservalue=size and getuservalue print=getuservalue or print getuservalue=10608738-1040808 bool=print and getuservalue print=498178+15961718 bool=bool or print end else if bool<16106127-(-486306)then if bool<15826396-(-618051)then unsigned=931384+-931382 program=exports[unsigned]bool=11087227-510015 unsigned=rand[rawget]tmpname=program==unsigned _G=tmpname else bool=11300436-(-88683)collectgarbage=nil require=nil new=nil end else bool=rand[j[-167314-(-167315)]]collectgarbage=readline(374964+-400149)lines=rand[j[-344003-(-344005)]]require=rand[j[915269+-915266]]string={assert(-858293+858294,upvaluejoin(arr))}new=29919051737921-488661 getinfo=require(collectgarbage,new)const=lines[getinfo]lines=string[422352-422351]require=-984785+984790 imports=bool(const,lines,require)bool=gfind[readline(-232110+206974)]imports={}end end end end end end end bool=#io return upvaluejoin(imports)end,function(gfind,readline)local upvaluejoin=lines(readline)local arr=function(arr)return bool(gfind,{arr},readline,upvaluejoin)end return arr end,function()const=const+(-39942-(-39943))string[const]=489396+-489395 return const end,function(gfind)string[gfind]=string[gfind]-(181000-180999)if-353962-(-353962)==string[gfind]then string[gfind],rand[gfind]=nil,nil end end,{},function(gfind)for readline=-401588-(-401589),#gfind,781340+-781339 do string[gfind[readline]]=(544235-544234)+string[gfind[readline]]end if arr then local bool=arr(true)local upvaluejoin=io(bool)upvaluejoin[readline(-102753-(-77493))],upvaluejoin[readline(-782674+757564)],upvaluejoin[readline(-102833-(-77589))]=gfind,require,function()return 3175472-1044925 end return bool else return j({},{[readline(-807168+782058)]=require;[readline(73857+-99117)]=gfind;[readline(-587078-(-561834))]=function()return 1979544-(-151003)end})end end,function(gfind,readline)local upvaluejoin=lines(readline)local arr=function(arr,j,io,assert)return bool(gfind,{arr;j,io;assert},readline,upvaluejoin)end return arr end,function(gfind,readline)local upvaluejoin=lines(readline)local arr=function(arr,j)return bool(gfind,{arr,j},readline,upvaluejoin)end return arr end return(rename(7407611-583623,{}))(upvaluejoin(imports))end)(getfenv and getfenv()or _ENV,unpack or table[readline(-529050-(-503950))],newproxy,setmetatable,getmetatable,select,{...})end)(...)
