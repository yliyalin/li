return(function(...)local setvbuf={}for write,count in ipairs({{1013701+-1013700;1048132+-1047952},{937033-937032,525732+-525704};{158646-158617,547025-546845}})do while count[-786926-(-786927)]<count[-944484-(-944486)]do setvbuf[count[-686077-(-686078)]],setvbuf[count[290729-290727]],count[556579+-556578],count[-231722-(-231724)]=setvbuf[count[-253077+253079]],setvbuf[count[228232-228231]],count[-355778-(-355779)]+(248426+-248425),count[268498+-268496]-(539960+-539959)end end local function write(write)return setvbuf[write+(-743034+789365)]end do local write=type local count=string.char local hooks=setvbuf local imports=string.len local readlines=table.insert local randomseed=string.sub local rawset={L=-18758-(-18773),X=594198+-594171;W=-558252+558296;c=370051+-370022;g=310779-310736,y=386601-386577,s=261559+-261529,D=-1005654+1005654;z=307686-307640,T=-730562+730564;P=-197990-(-198025);e=303464+-303458;k=-829757-(-829775),["\043"]=-456599-(-456603),S=276396+-276356;a=-783539+783591,q=-55263+55288;Q=-227255-(-227314),i=420867+-420831,O=776789+-776740,u=-653310-(-653347);j=1015357+-1015344,F=111164-111111,h=-549956-(-550012),Z=954772-954710,["\054"]=296781+-296743;["\053"]=-35891+35933;t=-870974+871007,K=720884+-720877;B=61692-61660,H=950706+-950667;N=-992177-(-992188);o=-123786-(-123834);C=-341776-(-341799),U=-967689+967739;["\047"]=-466684+466710;M=-149404-(-149438),["\056"]=-867162+867193;r=-477784+477825;["\057"]=260706-260689;m=768334-768271,G=171097-171039,p=-820234-(-820262),x=-787117-(-787120);A=-750811+750872,["\055"]=-255907-(-255964);d=-425684-(-425692);w=901819-901809,["\052"]=-23860-(-23920),["\049"]=-945397+945448,J=581519-581510;Y=338292-338247;E=765078+-765058;I=108471-108424;R=-436431-(-436453),n=-1018187-(-1018208),l=-504248-(-504264),["\048"]=483800+-483788;["\050"]=787138-787124,v=827972+-827918,f=-557295+557296;["\051"]=-985320-(-985375),V=266572-266567;b=281130-281111}local read=function(...)local v0={};return (function(...)v0["69AX"]={...};v0["42BF"]=v0["69AX"][2 -1 ][2] or "" ;v0["AB21"]="";for v4,v5 in ipairs(v0["69AX"][1][2 -1 ]) do v0["95CAC"]=0 -0 ;while true do if (v0["95CAC"]==0) then if (v0["AB21"]~="") then v0["AB21"]=v0["AB21"]   .. v0["42BF"] ;end v0["AB21"]=v0["AB21"]   .. v5 ;break;end end end return v0["AB21"];end)({...});end local long=math.floor for setvbuf=988471-988470,#hooks,300386+-300385 do local delete=hooks[setvbuf]if write(delete)=="\115\116\114\105\110\103"then local write=imports(delete)local const={}local loader=-950712-(-950713)local io=-349104-(-349104)local rawget=992895-992895 while loader<=write do local setvbuf=randomseed(delete,loader,loader)local hooks=rawset[setvbuf]if hooks then io=io+hooks*(560494+-560430)^((517697-517694)-rawget)rawget=rawget+(-237695+237696)if rawget==376558-376554 then rawget=-538539+538539 local setvbuf=long(io/(829082+-763546))local write=long((io%(261635+-196099))/(332643+-332387))local hooks=io%(808175+-807919)readlines(const,count(setvbuf,write,hooks))io=10959+-10959 end elseif setvbuf=="\061"then readlines(const,count(long(io/(-324902-(-390438)))))if loader>=write or randomseed(delete,loader+(-1048550+1048551),loader+(-281479-(-281480)))~="\061"then readlines(const,count(long((io%(-444346+509882))/(467444+-467188))))end break end loader=loader+(-746895-(-746896))end hooks[setvbuf]=read(const)end end end return(function(setvbuf,hooks,imports,readlines,randomseed,rawset,read,packages,loader,count,newpath,delete,hookfunction,unsigned,number,io,long,type,rawget,const,loadfile,arr,size)count,loader,long,number,size,io,loadfile,unsigned,rawget,hookfunction,type,newpath,packages,const,arr,delete=function(count,imports,readlines,randomseed)local rand,b,debug,byte,data,os,delete,key,_G,directory,dir,setuservalue,open,loaders,gsub,gfind,resume,io,status,gmod,length,j,popen,setmetatable,read,rawget,loadstring,tostring,loader,call,rawequal,flush,module,next,isWindows,error while count do if count<8175557-(-200038)then if count<4802617-(-42936)then if count<-106516+1806352 then if count<349396-(-505081)then if count<-48577+586114 then if count<-605131+958108 then if count<281063+40572 then resume=write(573175-619413)count=758532+-349582 length=setvbuf[resume]read=length else count=10976350-(-11330)end else if count<-97850+544173 then length=const()resume=-177842+177845 long[length]=read count=long[rand]gsub=303476+-303411 loadstring=write(723767-770083)os=packages(16530268-957113,{})read=count(resume,gsub)resume=const()long[resume]=read count=282727-282727 byte=write(-590699+544393)gsub=count read=setvbuf[byte]byte={read(os)}count=-628693-(-628693)tostring=count count={hooks(byte)}read=290109-290107 byte=count count=byte[read]read=write(389133-435443)os=count count=setvbuf[read]call=long[io]loaders=setvbuf[loadstring]loadstring=loaders(os)loaders=write(-428048+381753)gfind=call(loadstring,loaders)call={gfind()}read=count(hooks(call))call=const()long[call]=read gfind=long[resume]read=854781+-854780 loaders=gfind gfind=254119+-254118 loadstring=gfind gfind=255939-255939 data=loadstring<gfind count=16435183-168761 gfind=read-loadstring else setmetatable=-713829-(-713830)isWindows=_G[setmetatable]key=isWindows count=-734544+2584063 end end else if count<299748-(-489974)then if count<-123400-(-836202)then count=true long[readlines[4732+-4731]]=count read={}count=setvbuf[write(35988+-82221)]else count=long[readlines[645410+-645409]]io=long[readlines[-162912-(-162914)]]rand=27179233361830-(-537034)rawget=long[readlines[-307063+307066]]delete={rawset(-342188-(-342189),hooks(imports))}open=write(-897754+851512)next=rawget(open,rand)loader=io[next]io=delete[-207111+207112]rawget=33749-33744 read=count(loader,io,rawget)count=setvbuf[write(417525-463681)]read={}end else count=long[readlines[-337149-(-337150)]]open=write(363462-409749)io=long[readlines[-177240+177242]]rawget=long[readlines[-516103+516106]]rand=966687+23803471260461 resume=-21675+25547327652643 next=rawget(open,rand)rawget=write(349689-395903)loader=io[next]io=setvbuf[rawget]length=write(64171-110497)open=long[readlines[-901332+901334]]rand=long[readlines[-705437-(-705440)]]error=rand(length,resume)next=open[error]rawget=io(next)delete=loader..rawget read=count(delete)open=-327240+32205800732892 delete=read loader=long[readlines[-595446-(-595448)]]io=long[readlines[-38857+38860]]next=write(-864961-(-818672))rawget=io(next,open)read=loader[rawget]count=delete[read]count=count and 15863999-543018 or 16859946-844764 end end else if count<817512+647552 then if count<66131+1293271 then if count<902857-(-341211)then count=long[readlines[32168-32158]]loader=long[readlines[-619513+619524]]delete[count]=loader count=long[readlines[531959-531947]]loader={count(delete)}count=setvbuf[write(867867-914033)]read={hooks(loader)}else count=756618+13949169 end else gsub=not tostring count=gsub and 56657+14366281 or 10957739-(-305239)end else if count<-142103+1772850 then if count<2546452-986203 then loaders=gsub==tostring gfind=loaders count=-434668+9035533 else loadstring=write(-747344-(-701099))loaders=setvbuf[loadstring]error=resume loadstring=write(-989335+943132)gfind=loaders[loadstring]loaders=gfind(delete,error)gfind=long[readlines[256638+-256632]]count=9927963-(-895853)loadstring=gfind()error=nil call=loaders+loadstring os=call+open loadstring=-547451-(-547452)call=641432-641176 byte=os%call call=io[loader]open=byte loaders=open+loadstring gfind=rawget[loaders]os=call..gfind io[loader]=os end else read=write(88513-134823)error=write(-54261-(-7955))count=setvbuf[read]delete=long[readlines[960605-960601]]rawget=write(-984667+938351)io=setvbuf[rawget]length=size(5938018-711963,{})rand=setvbuf[error]error={rand(length)}open={hooks(error)}rand=-341662-(-341664)next=open[rand]rawget=io(next)io=write(-1025918-(-979623))loader=delete(rawget,io)delete={loader()}read=count(hooks(delete))loader=long[readlines[865477+-865472]]count=loader and 4739297-589802 or 8623280-493697 delete=read read=loader end end end else if count<683659+2547010 then if count<-983143+3289831 then if count<736865+1418731 then if count<764161+1309210 then long[loader]=key flush=-1019362+1019363 module=long[rawequal]gmod=module+flush setmetatable=_G[gmod]isWindows=gsub+setmetatable setmetatable=462222+-461966 count=isWindows%setmetatable gsub=count count=-781097+15848326 gmod=long[directory]setmetatable=tostring+gmod gmod=298254-297998 isWindows=setmetatable%gmod tostring=isWindows else open=long[next]read=open count=-59501+10878703 end else if count<-401123+2605116 then count=long[readlines[1026331+-1026330]]open=write(-981257-(-934957))delete={rawset(-25824-(-25825),hooks(imports))}io=long[readlines[401903+-401901]]rand=19696370410476-(-753639)rawget=long[readlines[-795486-(-795489)]]next=rawget(open,rand)loader=io[next]io=delete[-209857-(-209858)]rawget=-259388-(-259393)read=count(loader,io,rawget)read={}count=setvbuf[write(462271-508541)]else count=long[rand]loadstring=99611+-99610 data=694077-694071 loaders=count(loadstring,data)count=write(-790357+744094)data=write(-439272+393009)setvbuf[count]=loaders loadstring=setvbuf[data]data=-336850+336852 count=loadstring>data count=count and 10650133-(-159059)or-104824+4980133 end end else if count<727972+2320280 then if count<3170105-834061 then io=write(-795015+748861)loader=setvbuf[io]io=write(-537568+491388)delete=loader[io]count=setvbuf[write(933943-980162)]io=long[readlines[-301478-(-301479)]]loader={delete(io)}read={hooks(loader)}else rawget=-769375-(-769376)loader=long[readlines[-579622+579623]]next=-897818+897820 io=loader(rawget,next)loader=-863366-(-863367)delete=io==loader count=delete and 15112417-(-533841)or 80833+5173236 read=delete end else count=12959785-665588 end end else if count<4804572-490545 then if count<-1045442+4948290 then if count<3336002-61616 then os=call count=6646832-(-281303)directory=os byte[os]=directory os=nil else key=long[loader]read=key count=key and 561282+14310626 or-567353+16717187 end else count=8894808-765225 io=long[readlines[-852950-(-852956)]]loader=io==delete read=loader end else if count<4952634-332156 then if count<4954045-398973 then data=#byte directory=440192+-440191 count=17148402-477995 call=-112643-(-112644)os=io(call,data)call=open(byte,os)data=long[tostring]os=nil dir=call-directory popen=rand(dir)data[call]=popen call=nil else length=314376-314374 io=-313755-(-313787)loader=long[readlines[836690+-836687]]gsub=-638983-(-638996)delete=loader%io rawget=long[readlines[-860217-(-860221)]]rand=long[readlines[-119716-(-119718)]]os=long[readlines[-928871+928874]]byte=os-delete os=856800+-856768 tostring=byte/os resume=gsub-tostring error=length^resume open=rand/error next=rawget(open)rawget=4294396931-(-570365)io=next%rawget length=-571098-(-571354)next=-400305+400307 rawget=next^delete loader=io/rawget error=1000983+-1000982 rawget=long[readlines[-772417+772421]]rand=loader%error error=4295691027-723731 open=rand*error next=rawget(open)rawget=long[readlines[-832790+832794]]gsub=-178844+179100 open=rawget(loader)io=next+open next=66177-641 loader=nil rawget=io%next open=io-rawget rand=80494-14958 next=open/rand rand=857314+-857058 open=rawget%rand error=rawget-open rand=error/length delete=nil length=364335+-364079 rawget=nil error=next%length resume=next-error next=nil length=resume/gsub io=nil count=1760851-(-550090)resume={open;rand,error,length}error=nil long[readlines[294264-294263]]=resume rand=nil length=nil open=nil end else isWindows=long[loader]count=isWindows and-380939-(-852221)or-867457+2716976 key=isWindows end end end end else if count<7491727-824724 then if count<5561849-(-249592)then if count<29888+5218126 then if count<5136242-(-69999)then if count<4570399-(-308338)then data=write(887563-933826)count=setvbuf[data]data=write(873923+-920191)setvbuf[data]=count count=9800421-1003897 else read={}count=setvbuf[write(-774698+728458)]end else if count<6084975-857934 then io=937080+5670703 loader=write(-1003136+956897)delete=loader^io read=102126+1861249 count=read-delete read=write(-636229+590077)delete=count count=read/delete read={count}count=setvbuf[write(-216571-(-170411))]else delete=imports[-542198-(-542199)]read=write(-188186+141914)count=setvbuf[read]rand=write(-968464+922203)rawget=long[readlines[376123+-376122]]next=long[readlines[-558094+558096]]error=886803163040-42500 length=10577158092347-(-171266)open=next(rand,error)io=rawget[open]next=long[readlines[-445054+445055]]open=long[readlines[968969+-968967]]error=write(-870035+823858)rand=open(error,length)rawget=next[rand]open=long[readlines[-773698+773699]]resume=-1015800+8782856032241 rand=long[readlines[180232-180230]]length=write(167801+-214026)error=rand(length,resume)next=open[error]loader={[io]=delete;[rawget]=next}read=count(loader)loader=read read=write(-519549+473390)rand=write(-461112-(-414783))count=setvbuf[read]rawget=long[readlines[377949+-377948]]next=long[readlines[-569752+569754]]error=-895155+15472580003031 open=next(rand,error)io=rawget[open]read=write(-384497+338302)read=count[read]read=read(count,io)next=long[readlines[943517+-943516]]error=write(433432-479638)open=long[readlines[881541-881539]]length=13143137231484-(-849260)rand=open(error,length)rawget=next[rand]io=loader[rawget]rawget=write(-384797-(-338585))rawget=read[rawget]count={rawget(read,io)}read={hooks(count)}count=setvbuf[write(794166-840437)]end end else if count<-403222+5773411 then if count<4640615-(-619068)then loader=long[readlines[440505+-440503]]io=long[readlines[102755+-102752]]delete=loader==io read=delete count=-279122+15925380 else length=write(567258-613417)os=2778361220263-(-555110)byte=write(285902-332149)error=setvbuf[length]rawget=loader resume=long[readlines[323044-323043]]gsub=long[readlines[-849422-(-849424)]]tostring=gsub(byte,os)length=resume[tostring]rand=error[length]open=rawget==rand count=open and-620550+7344977 or 10468139-21201 end else loader,next=delete(io,loader)count=loader and 5737133-463523 or 9089414-350817 end end else if count<620313+5810113 then if count<407367+5620127 then if count<415430+5449945 then read=write(354393-400696)loader=newpath(1685464-(-509074),{readlines[372067+-372064],readlines[818546+-818545],readlines[92448-92446]})delete=packages(-294665+7936608,{readlines[-93944-(-93945)],readlines[842530+-842528];readlines[-272930-(-272933)]})count=setvbuf[read]read=count(delete,loader)read={}count=setvbuf[write(596722-642981)]else error=-654067+3550468325736 count=long[readlines[-235507+235511]]rawget=long[readlines[-301949-(-301951)]]next=long[readlines[-332048-(-332051)]]rand=write(-554277-(-508094))open=next(rand,error)error=write(-137228-(-90916))io=rawget[open]next=long[readlines[-309208+309210]]length=129686777009-126069 open=long[readlines[129184+-129181]]rand=open(error,length)rawget=next[rand]next=-294475+294478 read=count(io,rawget,next)read=write(-918121-(-871875))count=long[readlines[582150-582145]]read=count[read]read=read(count)count=true read={count}count=setvbuf[write(-391766-(-345573))]end else error=-203330+23852927452581 delete=nil length=4323453018848-383747 count=long[readlines[-155203+155208]]rawget=long[readlines[294437-294435]]next=long[readlines[-132553+132556]]rand=write(894038+-940208)open=next(rand,error)error=write(971682-1017913)io=rawget[open]next=long[readlines[233937-233935]]open=long[readlines[-124571-(-124574)]]rand=open(error,length)rawget=next[rand]loader=nil next=-93378+93382 read=count(io,rawget,next)count=setvbuf[write(713495+-759793)]read={}end else if count<6489276-(-166007)then if count<7237785-754168 then open=nil rand=nil rawget=nil count=726641+11567556 else count=true delete=imports io=write(-591688+545443)loader=const()long[loader]=count next=const()error=unsigned(941781+-260359,{next})read=setvbuf[io]io=write(208112-254439)rand=write(-76092-(-29786))rawget=const()count=read[io]io=const()long[io]=count count=loadfile(985348+10892072,{})long[rawget]=count count=false long[next]=count open=setvbuf[rand]rand=open(error)count=rand and-964422+3104733 or 10185098-(-634104)read=rand end else tostring=write(517901+-564207)os=size(1145801-345038,{resume;loader;rawget,error,io})gsub=setvbuf[tostring]call={gsub(os)}byte=call[211326+-211324]os=count tostring=call[-397722-(-397723)]gsub=tostring count=tostring and 947287+9877926 or-536737+11647239 end end end else if count<8865158-964442 then if count<565219+7100277 then if count<7725435-761379 then if count<-950599+7730229 then resume=write(-994781+948538)count=setvbuf[write(-422718+376489)]rand=write(-588466+542259)length=write(254054+-300213)open=setvbuf[rand]error=setvbuf[length]resume=error[resume]length={resume(error,next)}rand=open(hooks(length))open={rand()}read={hooks(open)}else directory=not dir call=call+popen os=call<=data os=directory and os directory=call>=data directory=dir and directory os=directory or os directory=3998971-749247 count=os and directory os=11833790-1042566 count=count or os end else if count<-55486+7402153 then count=14067929-(-81954)module=600440+-600438 gmod=_G[module]module=long[status]setmetatable=gmod==module key=setmetatable else read=write(-632221-(-585971))open=-533268+4152569883297 count=setvbuf[read]loader=long[readlines[268718-268717]]next=write(163774-210015)io=long[readlines[-616277+616279]]rawget=io(next,open)delete=loader[rawget]next=write(431743+-477952)read=count(delete)count=long[readlines[945430+-945427]]rand=30848873063428-764903 open=20455574076500-169759 loader=long[readlines[-765613+765614]]io=long[readlines[-181937+181939]]rawget=io(next,open)delete=loader[rawget]open=write(-918814-(-872615))io=long[readlines[721677-721676]]rawget=long[readlines[440538-440536]]next=rawget(open,rand)loader=io[next]io=350947-350943 read=count(delete,loader,io)count=setvbuf[write(249170+-295422)]read={}end end else if count<8009612-140964 then if count<244791+7570599 then gsub=long[length]os={gsub()}count=setvbuf[write(-683088+636770)]read={hooks(os)}else io=21678-21677 loader=long[readlines[-998120-(-998123)]]delete=loader~=io count=delete and 369212+4245630 or 99278+7899461 end else read=length count=resume count=length and 372851-(-36099)or-473451-(-731782)end end else if count<8067780-(-57213)then if count<548961+7456964 then if count<-971844+8951652 then delete=write(-711734+665468)count=setvbuf[delete]loader=long[readlines[-127845+127853]]io=300363+-300363 delete=count(loader,io)count=13205508-349241 else loader=long[readlines[1031243+-1031240]]io=535386-535281 delete=loader*io loader=-92766+93023 read=delete%loader count=-802136+8641347 long[readlines[373589+-373586]]=read end else io=write(-299743+253584)read=write(129940+-176098)count=setvbuf[read]delete=write(-208528+162321)error=write(280217+-326443)read=setvbuf[delete]length=17608469225106-114315 loader=setvbuf[io]next=long[readlines[961533+-961532]]open=long[readlines[-458392-(-458394)]]rand=open(error,length)rawget=next[rand]next=write(1023271+-1069514)next=loader[next]io={next(loader,rawget)}delete=read(hooks(io))io={delete()}delete=count read=io[-272901-(-272902)]count=5687074-(-28850)loader=io[706346-706344]io=read end else if count<8787735-508022 then if count<679008+7582191 then count=891242+14900254 long[readlines[1013355+-1013350]]=read delete=nil else count=long[readlines[-120944-(-120949)]]next=long[readlines[-21484+21486]]length=356005+15671274991068 open=long[readlines[146618+-146615]]error=write(-879137+832916)rand=open(error,length)rawget=next[rand]read={count(rawget)}read={hooks(read)}count=setvbuf[write(-20833+-25355)]end else directory=-879259+879359 rawequal=186178-185923 setmetatable=write(-367428+321112)dir=write(805216+-851510)popen=const()flush=467343-467343 long[popen]=gfind setuservalue=610232+-600232 status=963009+-963008 read=setvbuf[dir]dir=write(667951-714248)count=read[dir]dir=547265-547264 read=count(dir,directory)directory=900509+-900509 dir=const()long[dir]=read count=long[rand]_G=359032+-359030 read=count(directory,rawequal)rawequal=-740979+740980 directory=const()long[directory]=read count=long[rand]j=long[dir]read=count(rawequal,j)rawequal=const()long[rawequal]=read read=long[rand]j=read(status,_G)read=-221196+221197 count=j==read j=const()_G=write(296489-342694)long[j]=count isWindows=setvbuf[setmetatable]read=write(-124886+78591)gmod=long[rand]count=write(-717571-(-671296))module={gmod(flush,setuservalue)}count=os[count]setmetatable=isWindows(hooks(module))isWindows=write(-739544-(-693339))key=setmetatable..isWindows status=_G..key count=count(os,read,status)status=const()long[status]=count _G=write(397607+-443913)read=setvbuf[_G]key=loadfile(3261396-756395,{rand,popen,resume;io,loader;call;j;status;dir;rawequal;directory;length})_G={read(key)}count={hooks(_G)}_G=count count=long[j]count=count and-660617+4204259 or 423479+4199972 end end end end end else if count<12695479-471322 then if count<750773+10050744 then if count<801979+9338985 then if count<-444031+9792923 then if count<9095506-463303 then if count<9569544-1033056 then read={}count=setvbuf[write(-916047-(-869815))]else long[loader]=gfind count=long[loader]count=count and 419414+854057 or 9561839-92414 end else if count<-391629+9183897 then delete=long[readlines[-8011+8014]]rand=write(-48312-(-2022))length=529123+3620124111794 rawget=long[readlines[979062-979061]]next=long[readlines[918690-918688]]error=4040778029379-(-93718)open=next(rand,error)error=write(-864592+818382)io=rawget[open]next=long[readlines[942728+-942727]]resume=34981404352436-335891 open=long[readlines[919617+-919615]]rand=open(error,length)rawget=next[rand]open=long[readlines[801563+-801562]]length=write(-336771-(-290595))rand=long[readlines[187983+-187981]]error=rand(length,resume)count=setvbuf[write(-412963+366812)]next=open[error]loader={delete(io,rawget,next)}read={hooks(loader)}else count=494332+10672386 end end else if count<9576776-(-464093)then if count<9681145-225579 then rand=not open io=io+next loader=io<=rawget loader=rand and loader rand=io>=rawget rand=open and rand loader=rand or loader rand=646272+13165646 count=loader and rand loader=685798+239570 count=count or loader else count=true count=10772395-(-968093)end else loader=newpath(150510-(-616731),{readlines[-276815+276820],readlines[-487613-(-487615)];readlines[824020+-824017]})read=write(-43654-2649)delete=type(1001235+9616664,{readlines[75525-75524];readlines[-90246+90248],readlines[-837740-(-837743)];readlines[960336+-960332],readlines[-737164+737169];readlines[-636691-(-636697)];readlines[-723173-(-723180)]})count=setvbuf[read]read=count(delete,loader)read={}count=setvbuf[write(619607-665900)]end end else if count<384487+10055640 then if count<10830980-451932 then if count<-545005+10793081 then count=true count=count and 9486732-(-908062)or 11309771-(-430717)else read=write(130751+-177014)count=setvbuf[read]delete=write(-909848+863580)read=setvbuf[delete]delete=write(560210+-606478)setvbuf[delete]=count delete=write(-822025-(-775762))setvbuf[delete]=read delete=long[readlines[997702-997701]]count=10469300-(-518380)loader=delete()end else count=999546+10167172 end else if count<660946+9972158 then if count<9599124-(-862340)then next=nil count=6120739-404815 rawget=nil else read=long[readlines[374190+-374189]]loader=long[readlines[-812362-(-812364)]]io=long[readlines[-522723-(-522726)]]next=write(-838388-(-792194))open=23341122268248-197091 rawget=io(next,open)delete=loader[rawget]count=read[delete]delete=count count=long[readlines[-932960-(-932964)]]rand=write(410971-457133)rawget=long[readlines[870874-870872]]next=long[readlines[-529807-(-529810)]]error=254221+12165181486355 open=next(rand,error)io=rawget[open]loader=io..delete read=count(loader)loader=read io=long[readlines[-324347-(-324349)]]open=write(-502110+455910)rand=-619142+3182366668879 rawget=long[readlines[-609184+609187]]next=rawget(open,rand)read=io[next]count=loader[read]count=count and 14216790-144284 or 738910+5678770 end else call=#byte data=505318+-505318 os=call==data count=4149685-(-292953)end end end else if count<10300269-(-849776)then if count<11308070-420948 then if count<-513599+11333146 then if count<926040+9889817 then popen=write(455051+-501319)loadstring=write(-1026312+979996)count=setvbuf[loadstring]data=setvbuf[popen]loadstring=count(data)count=write(-882259+835996)setvbuf[count]=loadstring count=38007+8758517 else tostring=write(551543-597697)open=read rand=write(-248574-(-202280))read=setvbuf[rand]rand=write(730634-776931)count=read[rand]rand=const()error=write(-494042-(-447888))long[rand]=count read=setvbuf[error]error=write(-81765-(-35547))count=read[error]gsub=setvbuf[tostring]resume=count length=gsub error=count count=gsub and 15275058-(-889286)or-421075+8296121 end else if count<209496+10614802 then resume=resume+gsub byte=not tostring error=resume<=length error=byte and error byte=resume>=length byte=tostring and byte error=byte or error byte=694321+921432 count=error and byte error=6444108-(-8701)count=count or error else count=-921796+12032298 gsub=byte end end else if count<10788137-(-256396)then if count<-174105+11166312 then count=true count=count and 10553135-236175 or 4906092-26780 else dir=write(-855387-(-809198))call=const()popen=const()os={}long[call]=os os=const()open=nil directory={}j=write(-128666-(-82347))data=arr(234973+11934668,{call;length,resume,next})long[os]=data rand=nil module=20731726107767-(-1036606)_G=write(-179690+133453)data={}setmetatable=nil gsub=nil next=number(next)next=write(102265+-148472)long[popen]=data data=setvbuf[dir]status=long[popen]byte=nil rawequal={[j]=status,[_G]=setmetatable}io=nil dir=data(directory,rawequal)data=size(13710544-975461,{popen;call,tostring,length,resume;os})resume=number(resume)call=number(call)gmod=666328+2411910650251 error=nil length=number(length)status=write(34706+-80975)rand=write(751268+-797427)long[loader]=dir tostring=number(tostring)os=number(os)tostring=write(-591507+545193)popen=number(popen)long[rawget]=data io=setvbuf[next]open=setvbuf[rand]_G=104318+21011033951930 length=long[loader]resume=long[rawget]os=32030396495851-(-606808)byte=90397+21196027544945 b=write(495705-541896)gsub=resume(tostring,byte)tostring=write(791976+-838158)error=length[gsub]length=write(875232-921475)length=open[length]rand={length(open,error)}data=8985823156889-51777 next=io(hooks(rand))io=next()next=const()long[next]=io byte=171273+32203042053514 io=long[next]length=long[loader]resume=long[rawget]gsub=resume(tostring,byte)error=length[gsub]resume=long[loader]gsub=long[rawget]byte=write(583377-629599)call=6957032887951-(-734744)tostring=gsub(byte,os)os=write(956079+-1002250)debug=3312119897518-(-665688)length=resume[tostring]rawequal=2565979229268-(-571478)directory=write(-606876-(-560668))gsub=long[loader]tostring=long[rawget]byte=tostring(os,call)call=write(-350141-(-303813))resume=gsub[byte]tostring=long[loader]byte=long[rawget]os=byte(call,data)setmetatable=863653+12404188686571 gsub=tostring[os]popen=14585775784869-(-202467)byte=long[loader]os=long[rawget]data=write(856821+-902993)call=os(data,popen)tostring=byte[call]byte=-1046745+1046905 call=long[loader]data=long[rawget]popen=data(directory,rawequal)os=call[popen]popen=write(-99511+53343)data=setvbuf[popen]directory=long[loader]rawequal=long[rawget]j=rawequal(status,_G)popen=directory[j]directory=-904827+905097 status=264143+8330892838744 _G=write(185562+-231875)call=data[popen]popen=-182810+183310 data=call(popen,directory)popen=long[loader]j=write(986564+-1032894)directory=long[rawget]rawequal=directory(j,status)call=popen[rawequal]rawequal=long[loader]popen=false j=long[rawget]status=j(_G,setmetatable)directory=rawequal[status]open=write(665965+-712139)j=long[loader]setmetatable=write(49398-95622)status=long[rawget]_G=status(setmetatable,gmod)gmod=write(638685-684850)rawequal=j[_G]status=long[loader]_G=long[rawget]setmetatable=_G(gmod,module)j=status[setmetatable]gmod=write(-600052-(-553774))setmetatable=setvbuf[gmod]module=long[loader]flush=long[rawget]setuservalue=flush(b,debug)gmod=module[setuservalue]_G=setmetatable[gmod]setuservalue=write(106695+-153003)gmod=long[loader]module=long[rawget]b=62373+32018187552408 flush=module(setuservalue,b)setmetatable=gmod[flush]status=_G[setmetatable]rand={[error]=length;[resume]=gsub,[tostring]=byte;[os]=data,[call]=popen;[directory]=rawequal;[j]=status}call=write(696619-742804)rawequal=789423+13389239913643 tostring=28557740986226-7040 gsub=write(-62206+15970)open=io[open]status=9067939912202-690572 open=open(io,rand)io=const()long[io]=open error=long[loader]length=long[rawget]data=391321+24157805982552 resume=length(gsub,tostring)rand=error[resume]error=long[io]tostring=long[loader]byte=long[rawget]popen=212980+9695223648686 os=byte(call,data)gsub=tostring[os]byte=long[loader]data=write(-785529-(-739345))os=long[rawget]call=os(data,popen)popen=write(-76045-(-29834))tostring=byte[call]os=long[loader]length=write(-536691-(-490437))call=long[rawget]directory=32589863244668-628789 data=call(popen,directory)directory=write(575497+-621746)byte=os[data]call=long[loader]data=long[rawget]popen=data(directory,rawequal)directory=3337560589293-(-442917)os=call[popen]length=error[length]resume={[gsub]=tostring,[byte]=os}os=26238615355569-495863 length=length(error,resume)resume=long[loader]gsub=long[rawget]rawequal=10359496208965-40813 byte=write(-141249-(-95062))tostring=gsub(byte,os)error=resume[tostring]popen=write(881772+-928055)resume=long[io]os=long[loader]call=long[rawget]data=call(popen,directory)byte=os[data]directory=write(803432-849733)j=22724126478636-813015 call=long[loader]data=long[rawget]popen=data(directory,rawequal)os=call[popen]data=long[loader]popen=long[rawget]rawequal=write(-564473-(-518238))directory=popen(rawequal,j)call=data[directory]popen=long[loader]j=write(-769776-(-723523))directory=long[rawget]rawequal=directory(j,status)data=popen[rawequal]gsub=write(215320-261574)gsub=resume[gsub]tostring={[byte]=os,[call]=data}gsub=gsub(resume,tostring)byte=write(564934+-611254)open={[rand]=length;[error]=gsub}error=long[next]resume=long[loader]os=30021765651097-713726 gsub=long[rawget]tostring=gsub(byte,os)length=resume[tostring]rand=error[length]tostring=write(-948971-(-902706))popen=write(72925-119248)error=const()resume=packages(8081986-13702,{loader;rawget;error})length=hookfunction(15982465-540749,{next,loader,rawget})long[error]=length length=const()directory=715430+29793888357259 long[length]=resume resume=const()gsub=loadfile(5841055-594243,{loader;rawget})long[resume]=gsub gsub=setvbuf[tostring]os=long[loader]call=long[rawget]data=call(popen,directory)byte=os[data]tostring=gsub(byte)count=tostring and 336421+6325520 or-345253+15032102 end else count=os count=gsub and-478173+8144216 or 1932019-467815 end end else if count<-79659+11753857 then if count<497932+10906591 then if count<664880+10518420 then count=true count=count and-360415+2664316 or 9515449-988355 else tostring=nil count=14712714-25865 byte=nil end else next=35184372599439-510607 rand=193333+-193078 count={}long[readlines[28557+-28555]]=count read=long[readlines[-1003431+1003434]]rawget=read read=loader%next long[readlines[-858399+858403]]=read open=loader%rand rand=-977840+977842 resume=939474-939473 next=open+rand long[readlines[802983+-802978]]=next error=write(-328298+282053)rand=setvbuf[error]error=write(754386-800671)count=-325971+11149787 gsub=resume open=rand[error]rand=open(delete)open=write(-124791-(-78624))io[loader]=open resume=45306+-45306 open=1048525+-1048365 tostring=gsub<resume error=-1040901-(-1040902)length=rand resume=error-gsub end else if count<154570+11892622 then if count<11569682-(-247989)then count=loadfile(81178-(-267263),{rawget})loaders={count()}read={hooks(loaders)}count=setvbuf[write(-627103-(-580852))]else delete=write(-471196+424917)read=write(-720725-(-674459))count=setvbuf[read]read=count(delete)count=setvbuf[write(210976+-257298)]read={}end else delete=long[readlines[-969027-(-969028)]]read=#delete delete=-961058+961058 count=read==delete count=count and 16183636-94303 or 3298196-987255 end end end end else if count<826663+14265275 then if count<538730+13798007 then if count<-924029+13967506 then if count<581379+11760851 then if count<11897219-(-373979)then read=write(-782939+736628)count=setvbuf[read]resume=-61174+9346351497206 length=169983+29997683252881 error=write(256096+-302324)next=long[readlines[74668-74666]]open=long[readlines[-796105+796108]]rand=open(error,length)rawget=next[rand]read=count(rawget,delete)error=write(-668902+622645)count=long[readlines[798306-798301]]next=long[readlines[142793-142791]]open=long[readlines[-626179+626182]]length=-152168+1599256630608 rand=open(error,length)rawget=next[rand]open=long[readlines[-991338-(-991340)]]rand=long[readlines[-1028858-(-1028861)]]length=write(341174+-387370)error=rand(length,resume)next=open[error]open=-439738+439741 read=count(rawget,next,open)read=write(821403+-867649)count=long[readlines[1039043+-1039037]]read=count[read]read=read(count)count=long[readlines[-318836+318843]]read={count()}count=setvbuf[write(742073+-788296)]read={hooks(read)}else count=setvbuf[write(-393327+347125)]read={loader}end else if count<999637+11851480 then count=long[readlines[227143-227142]]io=count loader=imports[648097-648095]delete=imports[239027-239026]count=io[loader]count=count and-488617+3691701 or 11604582-139748 else loader=-858116+858117 io=long[readlines[-969483+969492]]count={}delete=count rawget=io count=10430704-980882 io=811307+-811306 next=io io=-745742-(-745742)open=next<io io=loader-next end end else if count<13985813-(-139447)then if count<13308555-(-513860)then count=long[readlines[-121716+121717]]error=107512-107512 loader=io length=-997555+997810 rand=count(error,length)delete[loader]=rand count=-61164+9510986 loader=nil else rand=write(-42779-3483)error=-83494+3629329173696 count=long[readlines[336700-336696]]rawget=long[readlines[-699375+699377]]next=long[readlines[914438+-914435]]open=next(rand,error)length=write(793722+-839895)resume=25308318813787-(-1007534)io=rawget[open]read=count(io)io=read open=long[readlines[-796018+796020]]rand=long[readlines[947832-947829]]error=rand(length,resume)next=open[error]rawget=loader[next]length=write(-163608+117353)resume=32976254440763-(-681664)open=long[readlines[-515623+515625]]rand=long[readlines[-398044-(-398047)]]error=rand(length,resume)resume=-234698+27432801552048 length=write(271753+-317917)next=open[error]read=rawget[next]open=long[readlines[678218-678216]]rand=long[readlines[607091-607088]]error=rand(length,resume)next=open[error]rawget=io[next]count=read~=rawget count=count and-977955+9256840 or-298689+12539911 end else read=key count=isWindows count=16620918-471084 end end else if count<-466362+15305545 then if count<13855821-(-848249)then if count<15411291-944116 then gsub=long[error]data=long[loader]rawequal=write(-720872+674682)j=-88095+3467247771245 popen=long[rawget]directory=popen(rawequal,j)call=data[directory]data=-832461+832466 os=gsub(call,byte,data)count=-755941+12018919 else byte=long[loader]directory=358647+17328835733134 data=write(-714257+667971)_G=186424+15543801627662 os=long[rawget]popen=-920289+6397248165507 call=os(data,popen)module=write(-612024-(-565700))rawequal=write(922991-969300)setmetatable=262326+27008489173098 read={}tostring=byte[call]popen=write(151162+-197467)gsub=open[tostring]os=long[loader]call=long[rawget]data=call(popen,directory)byte=os[data]status=1234639037737-(-1039637)data=long[loader]popen=long[rawget]j=12535186044450-(-876715)directory=popen(rawequal,j)call=data[directory]tostring=write(683854+-730035)j=write(888651-934932)popen=long[loader]directory=long[rawget]rawequal=directory(j,status)data=popen[rawequal]directory=long[loader]rawequal=long[rawget]status=write(802947+-849181)j=rawequal(status,_G)popen=directory[j]_G=write(-226260-(-180056))rawequal=long[loader]j=long[rawget]tostring=gsub[tostring]status=j(_G,setmetatable)directory=rawequal[status]gmod=-957809+18413541768943 j=long[loader]setmetatable=write(926681+-972985)status=long[rawget]_G=status(setmetatable,gmod)rawequal=j[_G]flush=-940546+33152271865423 j=false _G=long[loader]setmetatable=long[rawget]gmod=setmetatable(module,flush)status=_G[gmod]_G=false count=setvbuf[write(1032610+-1078767)]os={[call]=data,[popen]=directory,[rawequal]=j;[status]=_G}tostring=tostring(gsub,byte,os)rawequal=write(27016+-73233)gsub=const()directory=481079+29786850746103 long[gsub]=tostring os=long[loader]popen=write(-976078-(-929790))status=290633+1588023169946 call=long[rawget]data=call(popen,directory)byte=os[data]tostring=open[byte]j=22454319397576-446960 data=long[loader]byte=write(207674-253934)popen=long[rawget]directory=popen(rawequal,j)_G=29583883983291-844779 call=data[directory]popen=long[loader]directory=long[rawget]j=write(-706967-(-660691))rawequal=directory(j,status)data=popen[rawequal]byte=tostring[byte]directory=long[loader]rawequal=long[rawget]status=write(-615724+569527)j=rawequal(status,_G)rawequal=4453140172027-885986 popen=directory[j]rand=nil j=284249+22008105079215 directory=unsigned(545131+9531258,{gsub;loader;rawget,resume,error;io,length})os={[call]=data,[popen]=directory}setmetatable=187860+1347987678367 byte=byte(tostring,os)popen=write(952795-999072)os=long[loader]directory=-879873+27403395800793 call=long[rawget]_G=29614231983066-(-238084)data=call(popen,directory)byte=os[data]tostring=open[byte]directory=write(-544322-(-498095))call=long[loader]data=long[rawget]byte=write(-23724+-22429)byte=tostring[byte]popen=data(directory,rawequal)os=call[popen]byte=byte(tostring,os)directory=23216985252332-276401 popen=write(-672512-(-626256))os=long[loader]call=long[rawget]data=call(popen,directory)byte=os[data]status=7920387894589-909013 tostring=open[byte]data=long[loader]popen=long[rawget]rawequal=write(104930+-151237)directory=popen(rawequal,j)call=data[directory]popen=long[loader]byte=write(-423829+377569)directory=long[rawget]j=write(728868-775112)rawequal=directory(j,status)next=number(next)data=popen[rawequal]status=write(180164-226466)directory=long[loader]gsub=number(gsub)rawequal=long[rawget]j=rawequal(status,_G)popen=directory[j]length=number(length)byte=tostring[byte]_G=151222+6882170207694 status=17664269616163-(-367614)j=-921953+14078041942780 directory=loadfile(-810337+6660048,{loader,rawget,error})os={[call]=data;[popen]=directory}byte=byte(tostring,os)directory=12279691108696-(-128254)os=long[loader]popen=write(1018623+-1064903)call=long[rawget]data=call(popen,directory)rawequal=write(-768638+722313)byte=os[data]tostring=open[byte]byte=write(-597549+551232)data=long[loader]popen=long[rawget]directory=popen(rawequal,j)call=data[directory]error=number(error)popen=long[loader]j=write(100867-147125)resume=number(resume)directory=long[rawget]rawequal=directory(j,status)byte=tostring[byte]data=popen[rawequal]directory=long[loader]status=write(-742846+696645)rawequal=long[rawget]j=rawequal(status,_G)popen=directory[j]rawequal=long[loader]j=long[rawget]_G=write(414359-460538)status=j(_G,setmetatable)directory=rawequal[status]os={[call]=data;[popen]=directory}byte=byte(tostring,os)status=24689109113743-(-823641)rawequal=write(-455583+409397)os=long[loader]call=long[rawget]popen=write(406189+-452504)setmetatable=219412+4464047222538 directory=172928+19252293287813 data=call(popen,directory)byte=os[data]j=520108+1281680872104 tostring=open[byte]data=long[loader]_G=31417474756090-(-445227)popen=long[rawget]directory=popen(rawequal,j)call=data[directory]popen=long[loader]directory=long[rawget]j=write(416558+-462727)rawequal=directory(j,status)data=popen[rawequal]directory=long[loader]byte=write(851505-897822)open=nil rawequal=long[rawget]byte=tostring[byte]status=write(749275+-795495)j=rawequal(status,_G)popen=directory[j]rawequal=long[loader]_G=write(-246884-(-200686))j=long[rawget]status=j(_G,setmetatable)directory=rawequal[status]os={[call]=data,[popen]=directory}loader=number(loader)byte=byte(tostring,os)gsub=long[io]io=number(io)byte=928285-928284 tostring=write(747156+-793448)tostring=gsub[tostring]tostring=tostring(gsub,byte)rawget=number(rawget)end else next=number(next)io=number(io)tostring=nil call=number(call)io=nil byte=nil open=nil rand=number(rand)gsub=nil rawget=number(rawget)error=nil resume=number(resume)length=number(length)loader=number(loader)loader=nil rawget=const()os=nil long[rawget]=loader loader=const()open=write(-439665-(-393371))long[loader]=io next=setvbuf[open]error=write(1040862+-1087016)open=write(527022+-573185)io=next[open]next=const()rand=write(54848+-101142)long[next]=io open=setvbuf[rand]rand=write(-14830+-31467)io=open[rand]length=write(-246485+200240)count=-449130+7377265 rand=setvbuf[error]error=write(712080+-758260)open=rand[error]tostring=const()error=setvbuf[length]length=write(859580+-905876)call=239826-239570 rand=error[length]gsub={}os=484848+-484847 byte={}error=404104+-404104 length=const()long[length]=error resume=const()error=-323059+323061 data=call long[resume]=error error={}long[tostring]=gsub gsub=-337341+337341 call=-380511-(-380512)popen=call call=776697+-776697 dir=popen<call call=os-popen end else if count<346223+14687400 then if count<155152+14777224 then isWindows=count module=96298-96297 gmod=_G[module]module=false setmetatable=gmod==module key=setmetatable count=setmetatable and 714089+6300707 or-639279+14789162 else count=long[readlines[-218826+218830]]rawget=long[readlines[-866268+866270]]rand=write(899496-945674)error=-58148+17832882520980 next=long[readlines[-240662-(-240665)]]open=next(rand,error)io=rawget[open]read={count(io)}read={hooks(read)}count=setvbuf[write(-456517-(-410301))]end else rawequal=number(rawequal)_G=nil count=-786715+17053137 dir=number(dir)directory=number(directory)j=number(j)status=number(status)popen=number(popen)end end end else if count<15091703-(-802835)then if count<106391+15510545 then if count<-449409+15976361 then if count<16285638-867920 then count=long[readlines[-815920+815921]]io=long[readlines[920779-920777]]rand=9350828189170-922864 rawget=long[readlines[341523+-341520]]open=write(339909+-386124)next=rawget(open,rand)length=28859447860551-(-333623)loader=io[next]error=write(748963+-795118)read=count(loader)next=long[readlines[341856+-341854]]loader=read open=long[readlines[-767193+767196]]rand=open(error,length)rawget=next[rand]io=delete[rawget]length=29039616690163-774945 next=long[readlines[649356+-649354]]error=write(-581106+534945)open=long[readlines[-863284-(-863287)]]rand=open(error,length)rawget=next[rand]read=io[rawget]next=long[readlines[-235988-(-235990)]]length=2724195247379-(-892897)open=long[readlines[563657+-563654]]error=write(936540+-982822)rand=open(error,length)rawget=next[rand]io=loader[rawget]count=read~=io count=count and-465214+15408194 or-289321+6154857 else delete=imports[87968-87967]gsub=-145463+14473302659722 read=write(-974870-(-928622))resume=33399337206440-(-604696)loader=imports[618572-618570]length=write(-486970-(-440697))count=long[readlines[-317464-(-317465)]]open=long[readlines[351029+-351027]]io=imports[-25298+25301]rand=long[readlines[831320-831317]]error=rand(length,resume)next=open[error]resume=write(989783+-1036050)rand=long[readlines[735955+-735953]]error=long[readlines[613069-613066]]tostring=-901668+17178901635427 length=error(resume,gsub)open=rand[length]gsub=write(346469-392753)error=long[readlines[-884803+884805]]length=long[readlines[-565998-(-566001)]]resume=length(gsub,tostring)rand=error[resume]read=count[read]rawget={[next]=delete,[open]=loader,[rand]=io}io=nil loader=nil delete=nil read=read(count,rawget)count=setvbuf[write(-77733-(-31469))]read={}end else io=-536141+15915863 loader=write(773436-819727)delete=loader^io read=876084+9395667 count=read-delete delete=count read=write(846854+-893084)count=read/delete read={count}count=setvbuf[write(203124-249398)]end else if count<15557321-(-228697)then if count<15524719-(-215242)then count=read and 1418584-(-224336)or 14820891-(-970605)else loaders=long[loader]gfind=loaders count=loaders and 592939-(-929222)or-379967+8980832 end else count=long[readlines[1017020+-1017013]]count=count and 8866939-919676 or-970462+13826729 end end else if count<16905406-748250 then if count<104062+15989365 then if count<17026929-951816 then count=long[readlines[-983720-(-983724)]]open=write(-280440-(-234227))io=long[readlines[-599644+599646]]rand=-301727+31222123467625 rawget=long[readlines[-527667-(-527670)]]error=375390+29789082155985 next=rawget(open,rand)loader=io[next]rawget=long[readlines[357105+-357103]]rand=write(615276+-661575)next=long[readlines[-380362+380365]]open=next(rand,error)io=rawget[open]rawget=772029+-772025 read={count(loader,io,rawget)}count=setvbuf[write(656161-702482)]read={hooks(read)}else io=892240+-892079 loader=long[readlines[-818971-(-818973)]]delete=loader*io loader=775071+23489430591258 read=delete+loader delete=-78085+35184372166917 count=read%delete loader=-969663-(-969664)long[readlines[-710710+710712]]=count delete=long[readlines[941985+-941982]]count=-573786+8572525 read=delete~=loader end else count=64438+15002791 long[loader]=read end else if count<756834+15578453 then if count<16333320-126848 then byte=write(-582176+536022)tostring=setvbuf[byte]byte=write(-505956-(-459718))gsub=tostring[byte]count=7481001-(-394045)length=gsub else gfind=gfind+loadstring read=gfind<=loaders popen=not data read=popen and read popen=gfind>=loaders popen=data and popen read=popen or read popen=1328+8349140 count=read and popen read=16191822-417808 count=count or read end else call=#byte data=-384164+384164 os=call==data count=os and 11728724-734004 or 5190925-748287 end end end end end end end count=#randomseed return hooks(read)end,-779032+779032,{},function(setvbuf)delete[setvbuf]=delete[setvbuf]-(-174355+174356)if-85395+85395==delete[setvbuf]then delete[setvbuf],long[setvbuf]=nil,nil end end,function(setvbuf,write)local hooks=io(write)local imports=function(imports,readlines,randomseed,rawset)return count(setvbuf,{imports;readlines,randomseed,rawset},write,hooks)end return imports end,function(setvbuf)for write=-733599-(-733600),#setvbuf,-898532+898533 do delete[setvbuf[write]]=delete[setvbuf[write]]+(-201882-(-201883))end if imports then local count=imports(true)local hooks=randomseed(count)hooks[write(-81674-(-35355))],hooks[write(135035-181210)],hooks[write(-329401+283209)]=setvbuf,rawget,function()return-247026+4183956 end return count else return readlines({},{[write(-392155-(-345980))]=rawget;[write(-719794-(-673475))]=setvbuf,[write(942569+-988761)]=function()return 3110282-(-826648)end})end end,function(setvbuf,write)local hooks=io(write)local imports=function(imports)return count(setvbuf,{imports},write,hooks)end return imports end,function(setvbuf,write)local hooks=io(write)local imports=function(imports,readlines)return count(setvbuf,{imports,readlines},write,hooks)end return imports end,function(setvbuf)local write,count=101626-101625,setvbuf[294980+-294979]while count do delete[count],write=delete[count]-(228718-228717),write+(1003163+-1003162)if-453773+453773==delete[count]then delete[count],long[count]=nil,nil end count=setvbuf[write]end end,function(setvbuf,write)local hooks=io(write)local imports=function(imports,readlines,randomseed,rawset,read,long,delete,const)return count(setvbuf,{imports,readlines,randomseed;rawset;read,long;delete;const},write,hooks)end return imports end,function(setvbuf,write)local hooks=io(write)local imports=function(imports,readlines,randomseed,rawset,read)return count(setvbuf,{imports;readlines,randomseed;rawset;read},write,hooks)end return imports end,function(setvbuf,write)local hooks=io(write)local imports=function(...)return count(setvbuf,{...},write,hooks)end return imports end,function(setvbuf,write)local hooks=io(write)local imports=function(imports,readlines,randomseed)return count(setvbuf,{imports;readlines,randomseed},write,hooks)end return imports end,function()loader=loader+(-743486+743487)delete[loader]=-653539+653540 return loader end,function(setvbuf,write)local hooks=io(write)local imports=function()return count(setvbuf,{},write,hooks)end return imports end,{}return(newpath(-234304+6719072,{}))(hooks(read))end)(getfenv and getfenv()or _ENV,unpack or table[write(-295065+248827)],newproxy,setmetatable,getmetatable,select,{...})end)(...)
