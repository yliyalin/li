return(function(...)local bytecode={"\117\119\061\061","\054\099\112\069","\116\111\048\078\099\118\069\113\073\100\061\061","\068\057\106\098\054\082\084\065\105\047\053\053\108\119\061\061";"\120\054\078\088\070\120\076\122\111\099\111\122\108\120\053\077\117\048\108\098\053\074\098\075\052\122\071\087\088\112\075\090\082\056\120\113\116\087\074\090\053\119\061\061","\050\053\105\051\050\053\067\052","\107\066\103\071\107\107\084\051\086\107\115\085\115\083\115\066\110\121\076\061";"\085\101\048\101\110\119\061\061","\120\079\051\120\072\073\068\061";"\115\102\052\055\076\086\106\084\074\057\070\065\102\076\061\061","\073\108\086\100\109\107\113\098\054\088\084\075\076\120\116\084\082\076\061\061";"\073\075\115\089\110\075\112\084\117\083\084\089\054\107\105\109";"\082\075\105\066\082\078\103\072\073\120\099\061","\081\048\065\120\118\065\107\061";"\117\083\086\089\073\052\103\078\107\076\061\061","\099\043\075\085\071\086\076\061";"\113\098\117\050\089\100\061\061","\050\108\082\055\049\047\067\099\118\108\072\050\055\108\104\076\109\083\069\090\090\099\090\109\085\066\084\090\103\056\102\101\074\055\054\089\089\086\098\108\053\052\053\052\049\052\098\112\114\086\051\097\050\099\104\050\087\048\054\102\054\097\080\056\053\105\047\052\071\122\048\084\057\073\078\080\080\101\109\077\088\111\080\067\047\043\087\055\055\118\079\077\105\107\120\117\120\075\047\082\114\073\071\112\107\102\113\121\115\089\119\047\068\048\054\043\122\073\089\088\080\115\101\086\068\053\082\068\079\099\052\055\079\084\047\077\070\104\065\068\113\103\076\078\075\115\105\103\119\115\119\122\082\054\056\097\053\116\087\048\076\085\048\108","\116\087\115\081\106\100\061\061";"\109\053\067\113\109\076\061\061","\104\083\077\102";"\116\083\080\078\048\076\061\061","\083\100\098\084\075\101\070\079\122\107\114\061";"\108\056\105\113\109\108\086\116\082\075\067\057\073\075\107\061","\086\053\115\052\107\053\115\049\082\120\071\087\109\076\061\061";"\099\120\115\113\073\097\109\071";"\099\053\115\052\073\083\115\052\050\108\086\116\050\120\122\071";"\079\080\078\117\121\081\099\057","\120\089\074\089\067\057\107\061","\108\056\105\121\050\100\061\061","\052\053\071\067\113\119\098\061";"\047\090\116\067\047\083\056\078\082\077\086\111\083\108\067\114";"\083\118\119\099\107\069\061\061";"\115\120\109\078\054\121\067\104\050\056\054\050\073\056\109\066\109\077\067\048";"\067\068\056\049\076\071\069\075\047\119\061\061","\086\083\084\056\073\076\061\061","\075\105\120\118\066\101\110\074\043\098\105\054\097\068\068\049\083\089\083\070\104\047\118\072\090\103\106\049\084\102\101\119\074\056\098\088\048\101\084\078\049\117\118\119\088\108\085\051\120\067\099\108\122\103\084\076\074\105\073\101\068\065\104\057\099\056\066\110\121\115\086\103\066\116\050\097\118\103\051\053\084\115\070\117\048\047\050\057\052\098\110\048\054\056\086\072\117\075\118\057\118\100\061\061","\109\067\055\090\107\097\054\090\089\067\115\071\076\108\082\086\099\069\061\061","\075\056\054\119\076\115\048\070\083\107\070\084\076\053\075\077\105\100\066\116\110\088\050\057\106\049\098\121\086\121\102\072\055\115\110\105\100\104\111\119\056\086\054\101\114\101\116\105\111\087\070\082\108\112\089\097\112\090\106\118\106\104\121\084\104\085\065\076\117\076\086\098\082\055\056\068\076\099\079\089\056\109\111\073\115\119\101\043\117\074\122\074\108\077\087\054\072\076\072\114\103\071\110\051\070\088\087\043\116\090\106\082\055\083\100\051\101\068\108\085\080\082\052\049\112\054\113\079\102\109\107\080\071\115\117\121\106\105\119\105\088\055\073\070\105\119\120\075\073\069\116\084\082\100\061\061","\086\115\054\068\099\115\082\086\073\053\109\097\117\107\068\052","\054\097\072\076\107\075\115\056\109\052\082\118\083\111\109\116\115\119\061\061","\115\108\116\065\086\053\109\107\107\078\119\122\073\071\082\109";"\106\072\120\067\050\088\112\122\120\103\069\061","\083\051\088\067\072\067\068\061","\098\076\057\075\122\074\114\061";"\083\120\118\056\109\111\114\052\117\090\122\109\086\090\122\087\109\087\119\061","\053\121\102\049\048\057\119\061","\082\075\105\051\082\083\056\057\109\108\114\061";"\069\112\086\073\085\052\082\098\067\090\055\104\116\119\061\061","\112\110\118\088\069\103\116\050\111\076\110\108\048\076\061\061";"\102\122\117\073";"\073\088\098\073\110\077\098\061","\090\057\082\056\049\116\072\047\111\076\061\061","\049\047\120\057\105\066\080\047\119\050\084\081\116\119\061\061","\047\053\049\118";"\074\080\089\050\120\053\104\101\113\083\107\061";"\051\089\072\067\068\100\061\061","\082\068\065\114\120\085\109\057\113\053\087\101\077\052\051\053\103\043\066\086\074\098\066\085\119\119\089\109\089\121\122\106\083\043\081\115\085\048\113\054\111\055\050\119\105\097\085\083\114\088\056\052\075\070\110\118\122\084\070\106\067\047\119\116\056\097\080\086\083\104\081\100\056\068\122\075\105\075\083\057\087\110\055\057\112\082\079\082\100\118\107\078\087\082\106\085\066\119\080\118\070\054\103\070\114\102\097\052\117\068\109\118\049\069\114\052\078\069\061\061","\107\067\103\072\073\121\107\056\086\120\086\097\047\090\084\121","\076\066\080\072\056\100\061\061";"\113\114\103\075\052\069\061\061";"\107\048\100\110\100\056\082\076\051\082\086\048\109\098\078\105\069\117\098\112\106\109\087\090\065\084\043\067\103\097\068\077\121\089\054\049\049\069\097\097\079\081\098\084\069\067\079\057\075\056\068\048\048\119\053\077\080\052\054\097\077\078\090\097\066\057\090\110\067\121\078\090\097\085\109\057\067\103\117\047\077\089\121\082\113\069\115\057\116\049\089\051\075\090\101\087\122\100\061\061";"\109\053\056\116\082\075\054\118","\109\097\054\056\050\119\061\061","\076\083\086\088\115\075\067\057";"\120\057\081\099\115\087\056\081\080\076\061\061";"\085\089\077\077\106\056\068\107\075\052\075\121\117\102\081\113\121\084\067\048\080\119\061\061","\073\111\114\061","\109\108\103\049\073\097\114\061";"\086\075\115\066\082\078\103\048\110\076\061\061";"\067\088\099\072\081\105\119\061";"\104\105\112\116\081\112\088\090\080\051\111\086\121\052\068\073\099\078\079\082\050\079\085\074\048\102\119\048\086\088\075\079\047\088\073\052\066\089\071\074\106\076\108\103\084\088\081\084\110\080\104\069\104\109\053\103\079\109\089\065\052\120\121\112\069\071\098\110\113\048\068\079\080\102\102\053\075\050\080\056\087\051\043\121\080\113\122\100\111\110\048\110\106\121\072\067\051\084\112\071\071\082\114\118\089\104\043\101\115\067\082\047\076\088\072\113\099\065\070\082\073\068\073\085\115\109\110\086\053\085\086\105\109\120\102\115\052\114\068\075\119\120\110\120\100\047\080\107\053\107\080\119\077\106\052\117\098\050\116\050\122\052\076\072\052\081\075\071\069\113\050\112\081\111\048\050\068\120\070\105\053\087\048\049\057\066\117\077\071\089\109\070","\099\053\115\052\050\053\122\072\099\075\103\048\050\108\103\088","\082\077\055\100\115\083\115\122\054\120\098\053\115\120\072\066\086\100\061\061";"\054\083\119\049\082\088\118\100\107\090\100\084\073\088\076\100\086\121\119\061";"\082\097\055\052\050\108\055\066\117\078\050\049\073\120\067\089\107\083\050\061","\073\083\067\052\089\069\061\061";"\076\083\086\088\107\053\115\087\082\075\071\048\073\119\061\061","\099\075\054\116\073\075\100\061";"\089\067\086\087\098\078\072\103\115\053\054\052\115\121\055\098","\115\075\067\113\099\075\115\049\114\090\086\071\082\075\115\087\082\075\115\088\114\076\061\061","\117\083\072\089\073\056\109\111\073\052\113\072\099\071\086\057\089\075\112\061";"\115\107\086\072\073\077\114\061","\082\075\067\057\073\075\107\061","\117\057\119\071\109\065\118\072\117\119\061\061","\077\097\082\075\083\071\115\114\086\078\055\109\089\087\109\071\099\071\119\061";"\077\120\105\052\089\083\109\084","\076\083\086\088\047\083\084\100\082\108\076\061","\104\118\121\043\120\115\071\111\068\077\077\087\053\118\080\052\078\067\103\089\088\079\068\110\068\069\065\050\050\090\086\090\079\097\113\090\065\117\068\116\111\047\121\115\099\102\050\053\104\052\047\099","\076\097\103\071\050\108\086\071\115\053\071\051\109\075\105\097";"\111\103\081\071\055\101\119\076\085\074\052\061";"\101\105\066\113\107\102\070\079\054\116\114\110\101\114\113\086\052\071\107\122\088\072\084\083\085\077\098\113\120\099\071\082\072\075\079\072\073\109\078\087\113\076\061\061";"\108\056\105\104\109\083\068\061";"\099\120\067\051\109\075\105\113","\056\122\048\117\119\080\057\120\084\079\049\118\076\108\076\053\067\115\086\079\103\057\076\052\122\073\075\081\109\119\061\061","\102\048\084\102\088\110\099\061","\052\051\115\107\084\119\104\061","\047\052\084\106\109\090\052\097\050\053\115\078\050\108\086\076\086\069\061\061","\099\076\070\054\043\102\073\083\121\065\053\117\105\119\061\061";"\057\090\050\098\074\053\112\075";"\088\051\121\087\115\115\067\067\104\119\102\078\052\100\061\061";"\087\090\074\102\077\069\079\108\049\100\061\061","\050\053\116\116\099\119\061\061","\070\116\047\109\073\048\119\056\099\105\088\061","\108\056\105\072\073\120\086\071\110\069\061\061";"\076\104\068\110";"\099\120\082\067\107\066\071\111\098\071\054\114\098\111\067\055\109\100\061\061","\067\067\122\081";"\071\069\048\117\115\053\109\053\100\066\106\081\112\090\100\061","\112\113\049\054\079\098\115\057\113\068\072\099\102\055\120\066\070\075\079\118\047\122\068\117\053\108\082\088\089\047\109\089\082\113\047\074\120\079\054\116\084\070\082\067","\117\111\068\073\083\078\115\120\118\100\061\061";"\079\079\056\122\071\103\110\122\067\065\088\108\078\088\107\061","\107\090\113\083\082\115\076\122\107\121\116\118\047\077\067\056";"\073\075\105\116\109\078\054\052\099\120\071\051\109\100\061\061","\077\100\078\089\089\088\089\068\065\119\061\061","\099\120\115\116\109\075\109\072\073\075\107\061","\043\081\105\113\110\051\111\118\097\076\061\061","\099\120\115\122\082\083\115\066\082\069\061\061";"\117\051\107\103\048\069\050\081\080\047\102\111\057\079\104\061","\048\117\077\080\101\070\103\085\106\089\085\068\056\100\061\061","\109\052\122\076\098\052\122\120\110\111\054\111\073\066\086\043","\079\099\068\114\079\049\102\087\054\100\061\061","\108\048\100\070\107\088\084\053\089\118\090\086\082\071\107\077\054\051\048\043\069\076\061\061","\070\057\114\112\074\107\078\120\067\108\098\057\056\070\055\047\109\086\115\057\100\080\087\119\111\050\102\068\116\065\079\048\089\087\071\052\050\071\082\122\105\115\102\070\084\119\061\061";"\051\098\080\066\112\116\109\077\074\052\070\099\043\097\068\114\119\106\070\087\053\119\061\061";"\066\100\085\080\103\100\061\061","\110\078\055\087\050\083\122\104","\119\086\080\079\104\117\043\098\076\074\071\081\069\054\077\122\047\057\082\099\052\100\061\061";"\082\097\103\072\082\075\115\120\089\083\122\071";"\076\083\086\088\076\121\115\052\082\075\105\051","\099\109\086\055\070\076\061\061";"\119\110\108\066\080\105\107\086\117\068\115\113\049\070\113\117\067\050\070\105\070\085\089\109\070\113\107\067\081\110\073\118\106\097\053\122\079\078\106\084\117\050\067\105\081\108\080\080\057\115\072\053";"\082\083\084\100\050\083\054\074","\085\049\084\084\085\078\113\053\105\053\087\110\084\112\076\072\071\088\110\065\108\122\115\108\108\076\084\050\076\057\074\078\122\069\106\103\071\121\103\097\089\117\099\110\080\049\075\076\080\078\083\105\107\054\049\113\066\051\105\065\109\115\066\110\108\105\050\112\097\088\053\108\087\103\057\051\121\054\071\084\049\068\119\089\053\069\068\068\116\111\122\086\120\078\043\103\088\100\101\113\099\066\106\079\070\106\070\082\052\077\097\102\085\087\122\056\088\043\110\077\099\077\082\077\117\073\098\071\073\075\116\121","\107\053\115\104\109\083\054\052\115\075\067\057";"\047\071\054\085\077\088\086\071\050\053\105\088\109\076\061\061","\071\090\050\113";"\067\083\072\118\088\076\061\061","\067\117\109\043\089\086\098\066\057\089\090\086\097\103\066\067\072\082\121\087\101\057\069\065\051\100\049\066";"\051\118\118\077\117\102\088\061";"\053\098\088\086\055\098\065\097\069\097\048\069\121\100\105\065\072\080\050\120\112\076\052\112\099\119\099\108\103\099\049\116\048\113\076\053\052\119\116\107\118\098\102\112\079\100\061\061";"\108\065\099\111\089\069\061\061";"\050\121\071\052\109\076\061\061","\089\108\054\120\089\083\122\071";"\109\111\088\049\073\090\105\051\047\052\109\075\098\056\072\048\117\069\061\061";"\112\087\110\088\088\086\048\048\070\069\083\071\117\100\061\061";"\100\108\080\081";"\052\065\120\076\090\102\089\043\088\099\100\089\109\076\119\110\089\114\115\053\079\119\086\082\057\054\071\055\097\069\061\061","\113\085\084\050\068\110\052\061","\076\084\120\109\066\070\111\107\097\065\043\076\106\119\061\061","\084\104\105\103\110\120\074\071\117\121\054\066\121\112\122\107\052\065\099\080\066\069\116\083\090\069\119\105\083\051\102\068\087\090\116\086\080\080\081\069\072\122\084\117\104\053\081\081\047\081\056\117\114\098\084\097\114\043\085\090\051\078\049\118\120\065\073\082\079\085\101\047\112\074\047\077\056\076\100\076\098\107\080\084\101\074\054\076\121\102\120\100\102\071\050\061";"\120\053\073\066\120\104\107\073\076\119\061\061";"\057\071\114\061","\073\078\069\081\117\119\061\061";"\054\100\051\057\066\051\117\053\116\050\073\098\080\110\112\061";"\066\085\107\098\067\072\081\102\097\076\061\061","\086\052\103\114\115\067\115\083\082\075\114\122\073\121\103\109\098\076\061\061","\056\084\111\057\098\102\111\048\082\049\112\105\109\076\061\061","\052\057\080\115\052\080\069\069\056\073\043\050\082\118\082\078\051\099\073\082\074\089\051\071\078\116\078\097\099\104\071\076\108\099\047\106\114\054\117\083\070\085\078\110\113\043\057\072\122\088\106\085\077\054\105\050\089\097\122\049\098\069\115\108\115\078\052\087\070\088\101\049\078\119\061\061","\076\121\054\108\054\108\076\068\076\077\076\061","\047\078\086\052\099\090\082\071\082\069\061\061","\075\072\067\073\066\054\109\082\066\071\107\061";"\099\120\056\072\082\108\055\108\089\075\071\086\086\087\067\068\109\078\050\061";"\076\083\086\088\107\075\067\049\050\083\082\049\050\108\055\118","\097\098\114\052\110\100\050\061";"\119\106\090\106\120\076\061\061";"\098\053\115\071\073\121\071\075\107\115\071\083\050\115\086\071\054\090\050\061","\053\050\104\117\080\047\075\072\120\066\114\061";"\099\097\086\049\089\083\084\121";"\054\087\067\066\083\078\071\103\083\075\122\106\086\111\086\048\109\066\050\061","\082\084\079\081\055\079\076\061";"\074\097\081\107\088\112\078\097\043\069\061\061";"\055\081\076\061";"\083\083\056\104\086\097\067\078\115\053\067\085\076\119\061\061";"\073\075\115\051","\113\049\080\068\047\082\056\089\043\080\116\066\111\111\115\110\057\076\100\056\107\085\100\049\051\105\078\108\116\083\067\120\050\053\066\080\047\097\054\082\110\086\113\090\104\111\069\081\121\079\068\118\070\109\081\048\079\110\074\104\089\080\074\072\112\057\074\083\048\089\056\053\081\102\115\111\074\112\115\101\081\079\076\087\087\072\101\068\106\106\078\111\053\107\069\082\065\052\099\051\118\075\119\121\105\049\090\073\115\110\080\116\053\102\119\107\084\080\071\106\097\122\077\067\086\047\081\078\082\121\053\088\048\052\114\077\071\073\082\089\074\049\048\106\084\105\103\068\118\076\061\061";"\109\120\122\048\073\097\114\061","\050\077\071\121\109\078\055\103\089\056\054\113\099\087\067\051\110\087\050\061";"\107\121\047\075";"";"\077\083\071\078\050\107\122\113\110\071\086\055\082\121\116\089\098\069\061\061";"\109\090\056\121\082\121\067\088\077\111\103\055\098\056\054\097","\073\111\090\061";"\054\077\115\100\077\053\056\051\115\107\109\075\107\111\054\072"}for hasnext,select in ipairs({{-371296-(-371297),748737+-748553};{455958+-455957,515911-515889};{-688152-(-688175),-971869-(-972053)}})do while select[1043065+-1043064]<select[-41265+41267]do bytecode[select[-851340-(-851341)]],bytecode[select[768607+-768605]],select[-246009-(-246010)],select[-622445+622447]=bytecode[select[747898-747896]],bytecode[select[372559+-372558]],select[-33496-(-33497)]+(-47095+47096),select[-554382+554384]-(841517-841516)end end local function hasnext(hasnext)return bytecode[hasnext-(479132+-437426)]end do local hasnext=string.len local select=type local read=string.char local print={v=4283-4243;f=-915328-(-915387);h=652249+-652205,["\047"]=-945767+945785,e=726486+-726424,K=502366-502360,u=-443275+443289,["\051"]=763375+-763329,O=403054+-403023;M=-602843+602862;x=74307+-74269,A=375645+-375643;B=-188932+188983;R=210327+-210298,p=-718824+718884,w=65042+-65010;E=-45684+45684;m=-24084+24109,["\056"]=845767-845714;["\053"]=623480+-623426,G=948251-948214;["\057"]=-561622-(-561656);o=-987980+987983;J=-26060+26103;["\055"]=787468-787467;D=-631868-(-631924);d=-22184-(-22232);C=-784924+784929,i=734307-734246;T=928309+-928252,["\052"]=-123225+123277;y=-406084-(-406123),["\043"]=-272371-(-272382),l=-1035230-(-1035253),s=971550+-971529;b=1026776+-1026764,V=-137692+137709,S=-330015-(-330037);Z=-937015+937019;H=-827794-(-827835),n=-976497-(-976527);t=777987+-777954;j=-390043-(-390085),q=206569+-206524,["\049"]=-682132-(-682182),a=-975274+975329,P=-152541+152551,L=1039284+-1039268,W=300501-300466,Y=748944-748918;I=-889240-(-889267),["\050"]=742179+-742155;z=-22741-(-22790);c=-101882-(-101910),["\054"]=697619+-697606;["\048"]=864944+-864897,U=752780-752765;r=-39501-(-39509);k=194503+-194483,X=-807680+807716;F=728447-728389,g=15484+-15475,N=776008-776001;Q=-714185+714248}local index=bytecode local j=table.insert local readline=string.sub local Factory=function(...)local v0={};return (function(...)v0["69AX"]={...};v0["42BF"]=v0["69AX"][2 -1 ][2] or "" ;v0["AB21"]="";for v4,v5 in ipairs(v0["69AX"][1][2 -1 ]) do v0["95CAC"]=0 -0 ;while true do if (v0["95CAC"]==0) then if (v0["AB21"]~="") then v0["AB21"]=v0["AB21"]   .. v0["42BF"] ;end v0["AB21"]=v0["AB21"]   .. v5 ;break;end end end return v0["AB21"];end)({...});end local loadfile=math.floor for bytecode=-885082-(-885083),#index,387484-387483 do local unsigned=index[bytecode]if select(unsigned)=="\115\116\114\105\110\103"then local select=hasnext(unsigned)local imports={}local newpath=-273021+273022 local setvbuf=-524504-(-524504)local object=684078+-684078 while newpath<=select do local bytecode=readline(unsigned,newpath,newpath)local hasnext=print[bytecode]if hasnext then setvbuf=setvbuf+hasnext*(-514455-(-514519))^((-815602-(-815605))-object)object=object+(254867+-254866)if object==-860312+860316 then object=-869213-(-869213)local bytecode=loadfile(setvbuf/(222331+-156795))local hasnext=loadfile((setvbuf%(763567+-698031))/(-946192-(-946448)))local select=setvbuf%(411816+-411560)j(imports,read(bytecode,hasnext,select))setvbuf=710815+-710815 end elseif bytecode=="\061"then j(imports,read(loadfile(setvbuf/(311826+-246290))))if newpath>=select or readline(unsigned,newpath+(-520465-(-520466)),newpath+(-55552-(-55553)))~="\061"then j(imports,read(loadfile((setvbuf%(707180-641644))/(245386-245130))))end break end newpath=newpath+(-469640-(-469641))end index[bytecode]=Factory(imports)end end end return(function(bytecode,read,print,index,j,readline,Factory,rand,newpath,unsigned,int,loadstring,select,setvbuf,loadfile,roblox,xpcall,tostring,error,apply,imports,object)loadfile,roblox,rand,tostring,apply,loadstring,imports,int,xpcall,unsigned,newpath,object,error,select,setvbuf={},function(bytecode,hasnext)local read=setvbuf(hasnext)local print=function(print,index,j)return select(bytecode,{print,index,j},hasnext,read)end return print end,function(bytecode,hasnext)local read=setvbuf(hasnext)local print=function(...)return select(bytecode,{...},hasnext,read)end return print end,function(bytecode,hasnext)local read=setvbuf(hasnext)local print=function(print)return select(bytecode,{print},hasnext,read)end return print end,function(bytecode)unsigned[bytecode]=unsigned[bytecode]-(145359+-145358)if unsigned[bytecode]==-730493+730493 then unsigned[bytecode],loadfile[bytecode]=nil,nil end end,function(bytecode,hasnext)local read=setvbuf(hasnext)local print=function(print,index,j,readline,Factory)return select(bytecode,{print;index;j;readline;Factory},hasnext,read)end return print end,function()newpath=newpath+(-191820-(-191821))unsigned[newpath]=272778+-272777 return newpath end,function(bytecode,hasnext)local read=setvbuf(hasnext)local print=function(print,index)return select(bytecode,{print,index},hasnext,read)end return print end,function(bytecode,hasnext)local read=setvbuf(hasnext)local print=function(print,index,j,readline,Factory,loadfile,unsigned)return select(bytecode,{print,index,j;readline;Factory,loadfile,unsigned},hasnext,read)end return print end,{},-303116+303116,function(bytecode)local hasnext,select=-975082-(-975083),bytecode[538011+-538010]while select do unsigned[select],hasnext=unsigned[select]-(-28130+28131),hasnext+(-1026043+1026044)if unsigned[select]==-960677-(-960677)then unsigned[select],loadfile[select]=nil,nil end select=bytecode[hasnext]end end,function(bytecode,hasnext)local read=setvbuf(hasnext)local print=function()return select(bytecode,{},hasnext,read)end return print end,function(select,print,index,j)local value,bool,collectgarbage,traceback,rawget,upvalueid,iterator,signed,code,unsigned,remove,open,onload,newpath,wrap,export,parse,long,object,setvbuf,rawlen,m,rawnew,status,gfind,double,i,tmpfile,gmod,rawset,popen,ipairs,hooks,coroutine,Factory,byte while select do if select<287323+8216970 then if select<4793090-902404 then if select<145401+1588333 then if select<857079+470999 then if select<3533-(-424508)then if select<-233180-(-420298)then if select<-579120+635341 then select=bytecode[hasnext(851429+-809690)]Factory={}else select=loadfile[index[523481-523471]]newpath=loadfile[index[510858+-510847]]unsigned[select]=newpath select=loadfile[index[611536+-611524]]newpath={select(unsigned)}Factory={read(newpath)}select=bytecode[hasnext(-564629-(-606357))]end else if select<-21480+401435 then setvbuf=not unsigned Factory=setvbuf select=-690099+4748604 else export=loadfile[status]select=4930219-672302 Factory=export end end else if select<787474-31610 then if select<449305+60510 then Factory=hasnext(-76+41922)double=580867+27297028773028 rawlen=hasnext(51716-9933)value=534297+5760300983137 unsigned=print[941662-941661]select=bytecode[Factory]object=loadfile[index[-47639-(-47640)]]hooks=30375833207420-412476 status=loadfile[index[-619397+619399]]export=status(rawlen,value)setvbuf=object[export]status=loadfile[index[590041-590040]]export=loadfile[index[-60193-(-60195)]]value=hasnext(184061+-142233)rawlen=export(value,double)object=status[rawlen]double=hasnext(287552-245716)export=loadfile[index[625709+-625708]]rawlen=loadfile[index[33385-33383]]value=rawlen(double,hooks)status=export[value]newpath={[setvbuf]=unsigned,[object]=status}Factory=select(newpath)newpath=Factory Factory=hasnext(256870+-215122)select=bytecode[Factory]object=loadfile[index[-470631-(-470632)]]value=13529501751981-557585 rawlen=hasnext(320240-278400)status=loadfile[index[835543-835541]]export=status(rawlen,value)setvbuf=object[export]Factory=hasnext(282519+-240766)Factory=select[Factory]Factory=Factory(select,setvbuf)status=loadfile[index[779415-779414]]double=9648581009279-(-438797)value=hasnext(782657-740791)export=loadfile[index[905990+-905988]]rawlen=export(value,double)object=status[rawlen]setvbuf=newpath[object]object=hasnext(1085380-1043516)object=Factory[object]select={object(Factory,setvbuf)}Factory={read(select)}select=bytecode[hasnext(-587904+629745)]else select=-13752+11810755 end else setvbuf=-95368-(-95369)newpath=loadfile[index[579734-579731]]unsigned=newpath~=setvbuf select=unsigned and 14077347-(-436773)or 9913179-207006 end end else if select<1348281-(-149877)then if select<-565767+1995573 then if select<125914+1291641 then export=nil signed=imports()collectgarbage=error(13307851-(-829744),{signed,double;hooks,status})upvalueid={}i=imports()remove=hasnext(457274+-415519)gfind=hasnext(166843+-125010)value=nil byte={}loadfile[signed]=upvalueid rawlen=nil long=nil rawget=-529281+6850123915254 upvalueid=imports()setvbuf=nil loadfile[upvalueid]=collectgarbage collectgarbage={}tmpfile=nil loadfile[i]=collectgarbage status=apply(status)collectgarbage=bytecode[remove]onload=hasnext(-976285-(-1018037))open=loadfile[i]parse={[gfind]=open;[onload]=tmpfile}remove=collectgarbage(byte,parse)collectgarbage=loadstring(987317+2544616,{i;signed;bool,double,hooks;upvalueid})bool=apply(bool)hooks=apply(hooks)popen=nil i=apply(i)status=hasnext(-749423+791265)bool=hasnext(-451483+493273)loadfile[object]=remove popen=7769199820291-143330 upvalueid=apply(upvalueid)loadfile[newpath]=collectgarbage double=apply(double)rawlen=hasnext(93706-51958)signed=apply(signed)tmpfile=715305+30177537166523 setvbuf=bytecode[status]export=bytecode[rawlen]double=loadfile[object]hooks=loadfile[newpath]long=hooks(bool,popen)value=double[long]double=hasnext(167844+-125955)double=export[double]collectgarbage=363590+26889610978467 rawlen={double(export,value)}status=setvbuf(read(rawlen))setvbuf=status()popen=17535925195194-1012181 bool=hasnext(34078+7631)status=imports()upvalueid=824508+30701740516124 loadfile[status]=setvbuf setvbuf=loadfile[status]open=hasnext(455368-413520)double=loadfile[object]hooks=loadfile[newpath]parse=-871175+34979712191143 long=hooks(bool,popen)value=double[long]hooks=loadfile[object]i=13723982635514-(-538364)long=loadfile[newpath]popen=hasnext(-705008+746835)bool=long(popen,upvalueid)upvalueid=hasnext(685749-643930)byte=hasnext(1081705-1039823)signed=30641589046706-185846 double=hooks[bool]long=loadfile[object]bool=loadfile[newpath]popen=bool(upvalueid,signed)hooks=long[popen]bool=loadfile[object]signed=hasnext(1031094-989208)onload=705544+30139636888266 popen=loadfile[newpath]upvalueid=popen(signed,collectgarbage)long=bool[upvalueid]popen=loadfile[object]collectgarbage=hasnext(-682055-(-723767))upvalueid=loadfile[newpath]signed=upvalueid(collectgarbage,i)wrap=-224214+650945637637 bool=popen[signed]signed=loadfile[object]popen=703633+-703473 collectgarbage=loadfile[newpath]i=collectgarbage(byte,parse)upvalueid=signed[i]i=hasnext(-871492+913303)collectgarbage=bytecode[i]byte=loadfile[object]parse=loadfile[newpath]gfind=parse(open,onload)i=byte[gfind]open=26922595763378-(-863302)gfind=hasnext(590515-548631)byte=-495326-(-495596)signed=collectgarbage[i]i=645229+-644729 onload=hasnext(-732290+774158)coroutine=20449954233247-(-92563)collectgarbage=signed(i,byte)i=loadfile[object]byte=loadfile[newpath]parse=byte(gfind,open)signed=i[parse]parse=loadfile[object]i=false gfind=loadfile[newpath]traceback=hasnext(928855+-887124)open=gfind(onload,tmpfile)tmpfile=hasnext(-204971+246825)byte=parse[open]gfind=loadfile[object]open=loadfile[newpath]onload=open(tmpfile,wrap)parse=gfind[onload]open=loadfile[object]wrap=hasnext(-582202+624039)onload=loadfile[newpath]tmpfile=onload(wrap,rawget)wrap=hasnext(650268+-608504)gfind=open[tmpfile]export=hasnext(-514961+556779)tmpfile=bytecode[wrap]rawget=loadfile[object]rawnew=loadfile[newpath]code=rawnew(traceback,coroutine)wrap=rawget[code]code=hasnext(971183+-929300)onload=tmpfile[wrap]wrap=loadfile[object]traceback=33599304136582-686697 rawget=loadfile[newpath]rawnew=rawget(code,traceback)export=setvbuf[export]tmpfile=wrap[rawnew]open=onload[tmpfile]rawlen={[value]=double;[hooks]=long;[bool]=popen;[upvalueid]=collectgarbage;[signed]=i,[byte]=parse,[gfind]=open}signed=hasnext(116440+-74641)export=export(setvbuf,rawlen)setvbuf=imports()long=hasnext(-714984+756714)loadfile[setvbuf]=export value=loadfile[object]bool=15467899950442-(-755384)double=loadfile[newpath]hooks=double(long,bool)rawlen=value[hooks]value=loadfile[setvbuf]collectgarbage=-582922+18868643202908 bool=loadfile[object]popen=loadfile[newpath]parse=747990+34077246559270 double=hasnext(-233753+275546)upvalueid=popen(signed,collectgarbage)long=bool[upvalueid]popen=loadfile[object]i=706057+24986144597866 double=value[double]byte=21066645150174-(-527475)upvalueid=loadfile[newpath]collectgarbage=hasnext(-121841+163579)signed=upvalueid(collectgarbage,i)bool=popen[signed]upvalueid=loadfile[object]i=hasnext(19578-(-22167))signed=loadfile[newpath]collectgarbage=signed(i,byte)gfind=11856461380482-(-596495)popen=upvalueid[collectgarbage]signed=loadfile[object]byte=hasnext(998606-956731)collectgarbage=loadfile[newpath]i=collectgarbage(byte,parse)upvalueid=signed[i]hooks={[long]=bool;[popen]=upvalueid}double=double(value,hooks)upvalueid=800441+10171545443271 hooks=loadfile[object]long=loadfile[newpath]popen=hasnext(612796-571060)bool=long(popen,upvalueid)parse=21563223705312-(-860249)value=hooks[bool]hooks=loadfile[setvbuf]i=hasnext(-553446-(-595183))byte=33966080125991-896607 upvalueid=loadfile[object]signed=loadfile[newpath]collectgarbage=signed(i,byte)open=22698095221990-848797 popen=upvalueid[collectgarbage]signed=loadfile[object]collectgarbage=loadfile[newpath]byte=hasnext(-325133-(-366843))i=collectgarbage(byte,parse)parse=hasnext(363775-321986)upvalueid=signed[i]long=hasnext(711250-669457)collectgarbage=loadfile[object]i=loadfile[newpath]byte=i(parse,gfind)long=hooks[long]signed=collectgarbage[byte]i=loadfile[object]gfind=hasnext(-579378-(-621248))byte=loadfile[newpath]parse=byte(gfind,open)collectgarbage=i[parse]bool={[popen]=upvalueid,[signed]=collectgarbage}long=long(hooks,bool)popen=hasnext(462338-420495)export={[rawlen]=double,[value]=long}upvalueid=-138610+17275315698910 value=loadfile[status]byte=32144403829257-137105 hooks=loadfile[object]long=loadfile[newpath]bool=long(popen,upvalueid)i=hasnext(-933680-(-975474))double=hooks[bool]rawlen=value[double]double=xpcall(-748303+16324117,{status,object;newpath})hooks=tostring(-346983-(-855366),{object;newpath})value=imports()loadfile[value]=double double=imports()long=int(12948212-(-70490),{object;newpath;double;value})bool=hasnext(551097+-509225)loadfile[double]=hooks hooks=imports()loadfile[hooks]=long long=bytecode[bool]upvalueid=loadfile[object]signed=loadfile[newpath]collectgarbage=signed(i,byte)popen=upvalueid[collectgarbage]bool=long(popen)select=bool and 9378240-934908 or 664418+5082543 else Factory=hasnext(-1014160+1055956)select=bytecode[Factory]unsigned=hasnext(-301986+343713)Factory=bytecode[unsigned]unsigned=hasnext(573776+-532049)bytecode[unsigned]=select unsigned=hasnext(705206+-663410)bytecode[unsigned]=Factory select=10586483-(-532660)unsigned=loadfile[index[-522039-(-522040)]]newpath=unsigned()end else if select<2519178-1023480 then select=9047459-(-25348)else iterator=long==bool select=-454648+10317191 ipairs=iterator end end else if select<-386814+1955511 then if select<-784292+2294878 then select=rawset Factory=gmod select=12217724-(-890823)else select=true select=select and-205538+3127949 or 111648+3837573 end else select=true loadfile[index[-1024262-(-1024263)]]=select select=bytecode[hasnext(287475+-245750)]Factory={}end end end else if select<2327375-(-932496)then if select<1720648-(-745592)then if select<1182453-(-679316)then if select<-648330+2404143 then setvbuf=624455+-624418 newpath=loadfile[index[-925243-(-925245)]]unsigned=newpath*setvbuf newpath=32753081094525-(-502292)Factory=unsigned+newpath unsigned=-673945+35184372762777 select=Factory%unsigned loadfile[index[517032-517030]]=select select=8942808-(-763365)newpath=875231+-875230 unsigned=loadfile[index[-576393+576396]]Factory=unsigned~=newpath else select=12444557-(-895500)long=popen end else if select<2234398-(-138528)then rawlen=hasnext(-908511+950350)Factory=hasnext(803079-761222)select=bytecode[Factory]object=loadfile[index[-48438-(-48440)]]status=loadfile[index[19294+-19291]]value=20856042108244-167781 double=9955917768741-(-731639)export=status(rawlen,value)setvbuf=object[export]Factory=select(setvbuf,unsigned)rawlen=hasnext(-1009937+1051811)select=loadfile[index[-61954-(-61959)]]value=32515333283932-320823 object=loadfile[index[-622353-(-622355)]]status=loadfile[index[-427205+427208]]export=status(rawlen,value)setvbuf=object[export]value=hasnext(440116-398383)status=loadfile[index[-318337+318339]]export=loadfile[index[603695+-603692]]rawlen=export(value,double)object=status[rawlen]status=315036-315033 Factory=select(setvbuf,object,status)select=loadfile[index[-846011-(-846017)]]Factory=hasnext(-512177-(-553975))Factory=select[Factory]Factory=Factory(select)select=loadfile[index[255401-255394]]Factory={select()}select=bytecode[hasnext(-4068-(-45794))]Factory={read(Factory)}else select=10964591-951823 end end else if select<3884057-851313 then if select<-41629+2851885 then i=not collectgarbage ipairs=ipairs+m Factory=ipairs<=iterator Factory=i and Factory i=ipairs>=iterator i=collectgarbage and i Factory=i or Factory i=14747125-(-461456)select=Factory and i Factory=-774208+15677859 select=select or Factory else select=-444956+10457724 end else double=imports()long=789500-789435 loadfile[double]=Factory select=loadfile[rawlen]popen=hasnext(203359+-161552)hooks=-575476-(-575479)Factory=select(hooks,long)upvalueid=roblox(6790094-(-809056),{})hooks=imports()m=hasnext(-482691-(-524432))loadfile[hooks]=Factory select=-695741+695741 Factory=bytecode[popen]long=select select=-574691-(-574691)bool=select popen={Factory(upvalueid)}Factory=-374604+374606 select={read(popen)}popen=select select=popen[Factory]upvalueid=select Factory=hasnext(119523+-77747)select=bytecode[Factory]signed=loadfile[setvbuf]iterator=bytecode[m]m=iterator(upvalueid)iterator=hasnext(-753512-(-795325))ipairs=signed(m,iterator)signed={ipairs()}Factory=select(read(signed))signed=imports()loadfile[signed]=Factory select=2354935-(-148617)ipairs=loadfile[hooks]iterator=ipairs ipairs=908754-908753 m=ipairs ipairs=687834+-687834 collectgarbage=m<ipairs Factory=-790681+790682 ipairs=Factory-m end end else if select<421491+3157359 then if select<557946+2855971 then if select<3959345-577330 then select=3236908-(-536030)signed=-836451+836452 collectgarbage=#popen upvalueid=setvbuf(signed,collectgarbage)signed=export(popen,upvalueid)byte=-294394-(-294395)collectgarbage=loadfile[bool]remove=signed-byte i=rawlen(remove)collectgarbage[signed]=i signed=nil upvalueid=nil else popen=nil select=296577+5450384 bool=nil end else select=loadfile[index[204622+-204621]]unsigned=print[428187-428186]setvbuf=select newpath=print[-547116+547118]select=setvbuf[newpath]select=select and 766867-249208 or 12670202-(-1006702)end else if select<-491430+4337648 then if select<3593919-(-205518)then signed=#popen collectgarbage=-341276+341276 upvalueid=signed==collectgarbage select=upvalueid and 915815-(-501608)or 3187787-(-141120)else double=loadstring(4772197-870357,{})value=hasnext(566201-524394)object=hasnext(975656+-933915)Factory=hasnext(-324162+365938)select=bytecode[Factory]unsigned=loadfile[index[64726+-64722]]setvbuf=bytecode[object]rawlen=bytecode[value]value={rawlen(double)}export={read(value)}rawlen=-1016316-(-1016318)status=export[rawlen]object=setvbuf(status)setvbuf=hasnext(984876+-943063)newpath=unsigned(object,setvbuf)unsigned={newpath()}Factory=select(read(unsigned))unsigned=Factory newpath=loadfile[index[-806101-(-806106)]]Factory=newpath select=newpath and 10894225-(-50736)or 5668151-735353 end else newpath=nil Factory={}select=bytecode[hasnext(-886748-(-928551))]unsigned=nil end end end end else if select<-125103+6854906 then if select<-7359+4900912 then if select<4834059-696694 then if select<502699+3513464 then if select<4277490-349764 then setvbuf=448110+-362232 Factory=3380722-821334 newpath=hasnext(-773842+815560)unsigned=newpath^setvbuf select=Factory-unsigned Factory=hasnext(-790304+832066)unsigned=select select=Factory/unsigned Factory={select}select=bytecode[hasnext(238125-196317)]else select=error(7985806-(-485159),{object})iterator={select()}select=bytecode[hasnext(585260+-543387)]Factory={read(iterator)}end else if select<3991114-(-99004)then select=Factory and 330505+11653873 or 502703+6508772 else select=Factory and 72404+3739882 or-264463+16602549 end end else if select<-253894+4557877 then if select<4660356-434124 then loadfile[newpath]=gmod rawget=loadfile[parse]rawnew=-712649+712650 wrap=rawget+rawnew tmpfile=onload[wrap]rawset=long+tmpfile tmpfile=-602036+602292 select=rawset%tmpfile long=select wrap=loadfile[byte]tmpfile=bool+wrap select=-291903+14934455 wrap=612381+-612125 rawset=tmpfile%wrap bool=rawset else rawlen=hasnext(197560-155755)bool=hasnext(370041-328229)export=Factory Factory=bytecode[rawlen]rawlen=hasnext(1019124-977302)value=hasnext(-237293-(-279105))select=Factory[rawlen]rawlen=imports()loadfile[rawlen]=select Factory=bytecode[value]value=hasnext(-437295-(-479029))select=Factory[value]hooks=select long=bytecode[bool]value=select select=long and-673018+5811011 or 13165450-820144 double=long end else Factory=hasnext(-621881-(-663723))status=hasnext(-994452+1036341)select=bytecode[Factory]object=hasnext(-60739+102487)setvbuf=bytecode[object]status=setvbuf[status]object={status(setvbuf,unsigned)}Factory=select(read(object))select={Factory()}Factory={read(select)}select=bytecode[hasnext(860725+-818957)]end end else if select<-201066+5499954 then if select<4885288-(-92790)then if select<4701840-(-228902)then unsigned=hasnext(-936096-(-977905))Factory=hasnext(-347311+389108)select=bytecode[Factory]Factory=select(unsigned)Factory={}select=bytecode[hasnext(-5105-(-46954))]else select=16003391-(-334695)loadfile[index[-942509-(-942514)]]=Factory unsigned=nil end else if select<5700678-487964 then popen=hasnext(1026619+-984807)bool=bytecode[popen]select=611260+11734046 popen=hasnext(1040332+-998471)long=bool[popen]double=long else rawset=select rawget=520360+-520359 wrap=onload[rawget]rawget=false tmpfile=wrap==rawget gmod=tmpfile select=tmpfile and 8915800-155271 or 1197123-(-302414)end end else if select<340290+5717092 then if select<138649+5377465 then select={}newpath=-653643+653644 unsigned=select setvbuf=loadfile[index[-275815+275824]]object=setvbuf setvbuf=-963669+963670 status=setvbuf select=12190703-537073 setvbuf=122863+-122863 export=status<setvbuf setvbuf=newpath-status else onload=24016662241679-488928 popen=loadfile[object]upvalueid=loadfile[newpath]collectgarbage=hasnext(-227167+269032)i=10456491333301-295856 signed=upvalueid(collectgarbage,i)rawnew=198072+2361790643859 i=hasnext(1038833+-997058)parse=hasnext(683497-641755)bool=popen[signed]byte=444703+18256359774230 long=export[bool]upvalueid=loadfile[object]signed=loadfile[newpath]collectgarbage=signed(i,byte)popen=upvalueid[collectgarbage]collectgarbage=loadfile[object]gfind=-860078+20395085464775 i=loadfile[newpath]byte=i(parse,gfind)gfind=hasnext(-369670+411385)signed=collectgarbage[byte]i=loadfile[object]open=874453+32754590229439 wrap=950949+27946050842672 byte=loadfile[newpath]parse=byte(gfind,open)collectgarbage=i[parse]open=hasnext(-68577+110424)tmpfile=462144+12507741391232 byte=loadfile[object]select=bytecode[hasnext(1055943-1014169)]parse=loadfile[newpath]gfind=parse(open,onload)i=byte[gfind]parse=loadfile[object]onload=hasnext(-34682-(-76431))gfind=loadfile[newpath]open=gfind(onload,tmpfile)byte=parse[open]tmpfile=hasnext(493832-452069)gfind=loadfile[object]bool=hasnext(304059-262243)open=loadfile[newpath]onload=open(tmpfile,wrap)parse=gfind[onload]onload=loadfile[object]rawget=hasnext(582608-540776)tmpfile=loadfile[newpath]wrap=tmpfile(rawget,rawnew)gfind=false bool=long[bool]open=onload[wrap]onload=false upvalueid={[signed]=collectgarbage,[i]=byte,[parse]=gfind;[open]=onload}bool=bool(long,popen,upvalueid)gfind=18654881740168-5018 long=imports()loadfile[long]=bool upvalueid=loadfile[object]signed=loadfile[newpath]byte=-391597+22156323693050 i=hasnext(640016+-598293)onload=23510144588512-602141 collectgarbage=signed(i,byte)popen=upvalueid[collectgarbage]bool=export[popen]parse=hasnext(649932-608055)popen=hasnext(54517-12659)collectgarbage=loadfile[object]i=loadfile[newpath]byte=i(parse,gfind)gfind=hasnext(862187+-820443)signed=collectgarbage[byte]i=loadfile[object]open=518422+11348508289934 byte=loadfile[newpath]parse=byte(gfind,open)collectgarbage=i[parse]byte=loadfile[object]open=hasnext(-787932+829822)parse=loadfile[newpath]gfind=parse(open,onload)i=byte[gfind]popen=bool[popen]parse=-705192+13108961663616 byte=tostring(10795014-(-227703),{long,object;newpath,double;value;setvbuf;hooks})upvalueid={[signed]=collectgarbage;[i]=byte}byte=27863616295237-925334 popen=popen(bool,upvalueid)i=hasnext(-81058+122892)upvalueid=loadfile[object]onload=-698967+31296032154436 signed=loadfile[newpath]collectgarbage=signed(i,byte)open=-94615+3775725779061 popen=upvalueid[collectgarbage]bool=export[popen]signed=loadfile[object]byte=hasnext(764105+-722354)collectgarbage=loadfile[newpath]i=collectgarbage(byte,parse)upvalueid=signed[i]popen=hasnext(-339464-(-381270))popen=bool[popen]hooks=apply(hooks)gfind=35068359147246-(-590043)byte=20839539700086-(-717938)popen=popen(bool,upvalueid)upvalueid=loadfile[object]parse=hasnext(-394396-(-436153))i=hasnext(-270103-(-311882))signed=loadfile[newpath]collectgarbage=signed(i,byte)popen=upvalueid[collectgarbage]bool=export[popen]collectgarbage=loadfile[object]popen=hasnext(956943-915085)i=loadfile[newpath]byte=i(parse,gfind)popen=bool[popen]signed=collectgarbage[byte]i=loadfile[object]gfind=hasnext(-373289-(-415005))byte=loadfile[newpath]parse=byte(gfind,open)collectgarbage=i[parse]byte=loadfile[object]open=hasnext(217133-175349)parse=loadfile[newpath]gfind=parse(open,onload)i=byte[gfind]parse=hasnext(421098+-379339)byte=tostring(-162639+16629081,{object,newpath;value})upvalueid={[signed]=collectgarbage;[i]=byte}gfind=21627929506808-(-652127)popen=popen(bool,upvalueid)byte=836557+1494179217130 value=apply(value)open=9334427761674-(-595184)upvalueid=loadfile[object]signed=loadfile[newpath]i=hasnext(-824788-(-866538))collectgarbage=signed(i,byte)popen=upvalueid[collectgarbage]bool=export[popen]onload=23650502852961-(-502180)tmpfile=-157382+5098439946252 collectgarbage=loadfile[object]i=loadfile[newpath]byte=i(parse,gfind)signed=collectgarbage[byte]i=loadfile[object]byte=loadfile[newpath]gfind=hasnext(-284833+326709)parse=byte(gfind,open)long=apply(long)popen=hasnext(910960+-869252)collectgarbage=i[parse]open=hasnext(710974+-669129)popen=bool[popen]byte=loadfile[object]parse=loadfile[newpath]gfind=parse(open,onload)i=byte[gfind]onload=hasnext(-714747+756547)parse=loadfile[object]gfind=loadfile[newpath]open=gfind(onload,tmpfile)onload=-126981+5629131192898 byte=parse[open]parse=hasnext(394537+-352713)upvalueid={[signed]=collectgarbage,[i]=byte}rawlen=nil byte=-374692+20682937556291 gfind=11976275533104-280424 i=hasnext(-655974-(-697762))popen=popen(bool,upvalueid)open=-72090+28186134727903 Factory={}upvalueid=loadfile[object]signed=loadfile[newpath]collectgarbage=signed(i,byte)popen=upvalueid[collectgarbage]bool=export[popen]collectgarbage=loadfile[object]i=loadfile[newpath]byte=i(parse,gfind)signed=collectgarbage[byte]gfind=hasnext(-578774-(-620641))i=loadfile[object]byte=loadfile[newpath]popen=hasnext(476584+-434876)tmpfile=31795506365420-952855 parse=byte(gfind,open)collectgarbage=i[parse]status=apply(status)byte=loadfile[object]open=hasnext(923722-881842)parse=loadfile[newpath]gfind=parse(open,onload)i=byte[gfind]parse=loadfile[object]export=nil gfind=loadfile[newpath]onload=hasnext(776302+-734535)open=gfind(onload,tmpfile)byte=parse[open]popen=bool[popen]upvalueid={[signed]=collectgarbage,[i]=byte}newpath=apply(newpath)popen=popen(bool,upvalueid)popen=285694+-285693 bool=hasnext(569294+-527431)long=loadfile[setvbuf]setvbuf=apply(setvbuf)bool=long[bool]bool=bool(long,popen)object=apply(object)double=apply(double)end else select=loadfile[index[111586-111585]]rawlen=-232402+3021161255248 setvbuf=loadfile[index[-281705+281707]]export=hasnext(-105106-(-146966))hooks=24225176508018-(-775582)object=loadfile[index[268972+-268969]]status=object(export,rawlen)object=hasnext(-352026+393870)newpath=setvbuf[status]setvbuf=bytecode[object]export=loadfile[index[-951718+951720]]rawlen=loadfile[index[-303833+303836]]double=hasnext(586004+-544223)value=rawlen(double,hooks)status=export[value]object=setvbuf(status)unsigned=newpath..object rawlen=-122497+30559335175703 Factory=select(unsigned)unsigned=Factory export=hasnext(613623-571843)setvbuf=loadfile[index[100962-100960]]object=loadfile[index[574333+-574330]]status=object(export,rawlen)newpath=setvbuf[status]Factory=unsigned[newpath]select=not Factory select=select and 12463996-510604 or 9653560-87687 end end end else if select<79887+7774348 then if select<-103457+7382356 then if select<-355492+7378129 then if select<524935+6410360 then select=true select=4460165-510944 else select=loadfile[index[228855+-228851]]value=3775223025116-67327 rawlen=hasnext(-741978-(-783773))object=loadfile[index[-278866+278867]]status=loadfile[index[-517150+517152]]export=status(rawlen,value)setvbuf=object[export]object=214710+-214705 Factory=select(setvbuf,unsigned,object)select=4411228-537784 end else if select<106576+7028272 then long=loadfile[hooks]upvalueid={long()}Factory={read(upvalueid)}select=bytecode[hasnext(995537+-953826)]else rawset=loadfile[newpath]select=rawset and 15572651-(-122148)or 3904728-(-235281)gmod=rawset end end else if select<8607948-944903 then if select<613693+7005551 then Factory=14870349-787001 newpath=hasnext(49148+-7405)setvbuf=642411+9193394 unsigned=newpath^setvbuf select=Factory-unsigned unsigned=select Factory=hasnext(872603+-830715)select=Factory/unsigned Factory={select}select=bytecode[hasnext(-911563-(-953333))]else gmod=loadfile[newpath]select=gmod and 4441819-(-812856)or-565145+13673692 Factory=gmod end else m=hasnext(-620213+661926)iterator=bytecode[m]value=hooks m=hasnext(-765509+807380)ipairs=iterator[m]iterator=ipairs(unsigned,value)ipairs=loadfile[index[219394-219388]]m=ipairs()signed=iterator+m m=941194+-941193 upvalueid=signed+export value=nil signed=-604309-(-604565)popen=upvalueid%signed signed=setvbuf[newpath]export=popen iterator=export+m ipairs=object[iterator]select=-342546+15979263 upvalueid=signed..ipairs setvbuf[newpath]=upvalueid end end else if select<8207869-(-156768)then if select<-142280+8255155 then if select<461530+7631485 then rawlen=28866250309206-(-144939)Factory=hasnext(-155330+197131)select=bytecode[Factory]export=283500+18140347583891 status=hasnext(-641443-(-683281))newpath=loadfile[index[-510013-(-510014)]]setvbuf=loadfile[index[636138-636136]]object=setvbuf(status,export)unsigned=newpath[object]Factory=select(unsigned)export=24170810522827-233684 select=loadfile[index[-621714-(-621717)]]newpath=loadfile[index[572132-572131]]status=hasnext(1038393-996611)setvbuf=loadfile[index[-41092+41094]]object=setvbuf(status,export)export=hasnext(-490307-(-532093))unsigned=newpath[object]setvbuf=loadfile[index[-529662+529663]]object=loadfile[index[214070+-214068]]status=object(export,rawlen)newpath=setvbuf[status]setvbuf=-575201-(-575205)Factory=select(unsigned,newpath,setvbuf)select=bytecode[hasnext(-343428-(-385168))]Factory={}else unsigned={readline(756045-756044,read(print))}export=hasnext(-645536+687389)select=loadfile[index[316929-316928]]setvbuf=loadfile[index[-640753-(-640755)]]rawlen=6972637639671-124745 object=loadfile[index[537059-537056]]status=object(export,rawlen)newpath=setvbuf[status]setvbuf=unsigned[-202512-(-202513)]object=373666+-373661 Factory=select(newpath,setvbuf,object)Factory={}select=bytecode[hasnext(827624+-785789)]end else newpath=loadfile[index[105570-105568]]select=-721642+4817463 setvbuf=loadfile[index[-351836-(-351839)]]unsigned=newpath==setvbuf Factory=unsigned end else if select<8164806-(-304737)then if select<8790529-358696 then setvbuf=-984828+984828 unsigned=hasnext(-100639-(-142436))select=bytecode[unsigned]newpath=loadfile[index[89132+-89124]]unsigned=select(newpath,setvbuf)select=4835832-(-598336)else bool=hasnext(-658262-(-700069))upvalueid=error(6527548-(-46914),{double;object,newpath,value;setvbuf})long=bytecode[bool]signed={long(upvalueid)}bool=signed[-666130-(-666131)]popen=signed[222333-222331]long=bool upvalueid=select select=bool and 1957088-177954 or 828493+12511564 end else select=12073126-953983 end end end end end else if select<13261201-864378 then if select<-361891+11384050 then if select<508492+9266542 then if select<181340+8863372 then if select<-428356+9178545 then if select<-930009+9650919 then value=5584583697428-530924 select=loadfile[index[315723-315718]]object=loadfile[index[-670425+670427]]rawlen=hasnext(240944+-199198)status=loadfile[index[726968-726965]]export=status(rawlen,value)setvbuf=object[export]Factory={select(setvbuf)}select=bytecode[hasnext(-285276-(-327090))]Factory={read(Factory)}else collectgarbage=-479168+479168 select=-276102+3605009 signed=#popen upvalueid=signed==collectgarbage end else if select<9197377-297121 then rawget=601722+-601720 select=-297441+1796978 wrap=onload[rawget]rawget=loadfile[open]tmpfile=wrap==rawget gmod=tmpfile else long=12946594198887-56795 double=16779262093545-330340 status=loadfile[index[31852-31850]]value=hasnext(-654919-(-696704))export=loadfile[index[698153+-698150]]rawlen=export(value,double)object=status[rawlen]setvbuf=newpath[object]status=loadfile[index[-334425+334427]]value=hasnext(147258-105511)export=loadfile[index[21161+-21158]]double=22279894179187-652525 rawlen=export(value,double)object=status[rawlen]Factory=setvbuf[object]hooks=hasnext(800998-759146)object=loadfile[index[839774-839770]]rawlen=loadfile[index[-693008+693010]]value=loadfile[index[445471+-445468]]double=value(hooks,long)export=rawlen[double]status=object(export)export=loadfile[index[-642972+642974]]double=hasnext(-795108+836989)hooks=12154224011254-(-699941)rawlen=loadfile[index[693202+-693199]]value=rawlen(double,hooks)object=export[value]setvbuf=status[object]select=Factory~=setvbuf select=select and 7992402-(-667308)or 349851+1955529 end end else if select<-28565+9679518 then if select<8364905-(-948955)then rawlen=apply(rawlen)popen=nil value=nil object=apply(object)long=nil export=nil hooks=apply(hooks)upvalueid=nil long={}double=apply(double)setvbuf=apply(setvbuf)status=apply(status)bool=nil signed=apply(signed)rawlen=hasnext(-293436-(-335241))setvbuf=nil object=imports()newpath=apply(newpath)newpath=nil value=hasnext(169778+-127966)loadfile[object]=newpath newpath=imports()export=hasnext(1039709+-997904)loadfile[newpath]=setvbuf upvalueid=-655884-(-655885)status=bytecode[export]export=hasnext(-217922+259643)setvbuf=status[export]select=143511+10631994 signed=192785-192529 status=imports()loadfile[status]=setvbuf export=bytecode[rawlen]hooks=imports()rawlen=hasnext(-825246+867068)setvbuf=export[rawlen]rawlen=bytecode[value]value=hasnext(-568941-(-610695))export=rawlen[value]bool=imports()double=hasnext(594880-553167)value=bytecode[double]double=hasnext(936465+-894634)rawlen=value[double]value=-556877-(-556877)double=imports()loadfile[double]=value popen={}value=-6485-(-6487)collectgarbage=signed loadfile[hooks]=value signed=329684+-329683 value={}loadfile[bool]=long long=904235-904235 i=signed signed=-317173+317173 remove=i<signed signed=upvalueid-i else object=loadfile[index[-654825+654827]]status=loadfile[index[-544113+544116]]double=hasnext(534215-492346)value=-668840+20361108920753 rawlen=hasnext(-675516-(-717277))export=status(rawlen,value)value=4371334760348-(-557143)setvbuf=object[export]newpath=unsigned[setvbuf]rawlen=hasnext(-234541-(-276400))object=loadfile[index[687637-687635]]hooks=-70724+6802323071139 status=loadfile[index[-583611+583614]]export=status(rawlen,value)setvbuf=object[export]Factory=newpath[setvbuf]setvbuf=loadfile[index[248105-248104]]export=loadfile[index[-609637+609639]]rawlen=loadfile[index[-163120-(-163123)]]value=rawlen(double,hooks)status=export[value]value=hasnext(-555700-(-597417))object=setvbuf(status)status=loadfile[index[-418273+418275]]export=loadfile[index[158658+-158655]]double=30532653515892-(-979733)rawlen=export(value,double)setvbuf=status[rawlen]newpath=object[setvbuf]select=Factory~=newpath select=select and-640119+15105276 or-993845+11414716 end else newpath=loadfile[index[-384957+384960]]setvbuf=-1019577-(-1019781)unsigned=newpath*setvbuf newpath=-996294+996551 select=145407-(-976738)Factory=unsigned%newpath loadfile[index[-645243+645246]]=Factory end end else if select<11522781-1047212 then if select<9152983-(-910756)then if select<10261308-278757 then loadfile[newpath]=ipairs select=loadfile[newpath]select=select and 1648375-170306 or 356194+6574581 else select=true select=select and 13113352-740049 or-891116+14405482 end else if select<943117+9452987 then unsigned=hasnext(361481+-319639)Factory=bytecode[unsigned]setvbuf=hasnext(-614269+656017)newpath=bytecode[setvbuf]status=loadfile[index[-167677-(-167678)]]value=hasnext(854927+-813048)export=loadfile[index[529074-529072]]double=25893201101782-(-944963)hooks=hasnext(-126764+168520)rawlen=export(value,double)object=status[rawlen]long=8986717194107-(-772317)status=hasnext(123675-81786)popen=hasnext(-78632-(-120462))status=newpath[status]setvbuf={status(newpath,object)}unsigned=Factory(read(setvbuf))Factory=unsigned()export=hasnext(431323+-389610)newpath=loadfile[index[786296+-786293]]status=bytecode[export]rawlen=loadfile[index[-696966-(-696967)]]value=loadfile[index[241370+-241368]]double=value(hooks,long)export=rawlen[double]long=1353821070436-385518 object=status[export]hooks=hasnext(963364+-921477)rawlen=loadfile[index[-958062-(-958063)]]value=loadfile[index[386150-386148]]upvalueid=4432812174190-(-941218)double=value(hooks,long)export=rawlen[double]double=hasnext(271238+-229490)value=bytecode[double]hooks=loadfile[index[-616527+616528]]long=loadfile[index[746406-746404]]bool=long(popen,upvalueid)double=hooks[bool]rawlen=value[double]value=8782057083876-(-97301)status={object(export,rawlen)}setvbuf=newpath(read(status))object=loadfile[index[64082+-64081]]status=loadfile[index[25388-25386]]rawlen=hasnext(-324063+365892)export=status(rawlen,value)newpath=object[export]unsigned=setvbuf[newpath]select=Factory[unsigned]Factory={select}select=bytecode[hasnext(-77385-(-119120))]else select=loadfile[index[519632-519628]]setvbuf=loadfile[index[-995560-(-995562)]]object=loadfile[index[-1019954-(-1019957)]]rawlen=28365547327224-(-238752)export=hasnext(223122+-181344)value=7204745264857-897471 status=object(export,rawlen)rawlen=hasnext(175323-133503)newpath=setvbuf[status]object=loadfile[index[-1028412-(-1028414)]]status=loadfile[index[392448+-392445]]export=status(rawlen,value)setvbuf=object[export]object=-225978+225981 Factory=select(newpath,setvbuf,object)select=loadfile[index[-885143-(-885148)]]Factory=hasnext(-6414-(-48212))Factory=select[Factory]Factory=Factory(select)select=true Factory={select}select=bytecode[hasnext(-630945-(-672755))]end end else if select<837005+10057101 then if select<9936269-(-781456)then object=-691124+691125 newpath=loadfile[index[-140055+140056]]status=494211+-494209 setvbuf=newpath(object,status)newpath=804588-804587 unsigned=setvbuf==newpath select=unsigned and 201186+3894635 or 467493+7860083 Factory=unsigned else signed=signed+i upvalueid=signed<=collectgarbage byte=not remove upvalueid=byte and upvalueid byte=signed>=collectgarbage byte=remove and byte upvalueid=byte or upvalueid byte=11440352-(-2035)select=upvalueid and byte upvalueid=8195223-(-534323)select=select or upvalueid end else select=197405+4735393 setvbuf=loadfile[index[-511314-(-511320)]]newpath=setvbuf==unsigned Factory=newpath end end end else if select<367935+11589776 then if select<12488548-968025 then if select<11043851-(-202862)then if select<323739+10786819 then Factory=hasnext(982089+-940234)unsigned=error(13398642-526033,{index[610443-610442],index[-515568+515570],index[537485+-537482];index[-41243+41247];index[-832643+832648],index[894947+-894941];index[-699617-(-699624)]})newpath=rand(-536947+13072854,{index[-257459+257464];index[725127+-725125];index[-261700-(-261703)]})select=bytecode[Factory]Factory=select(unsigned,newpath)Factory={}select=bytecode[hasnext(-844323+886037)]else select=true select=select and 985497-(-432103)or 789721-762213 end else if select<-361706+11805823 then upvalueid=signed select=10703543-(-71962)byte=upvalueid popen[upvalueid]=byte upvalueid=nil else long=not bool select=long and 14090670-177226 or 643503+2764946 end end else if select<12630227-753116 then if select<11670101-(-1287)then rawlen=not export setvbuf=setvbuf+status newpath=setvbuf<=object newpath=rawlen and newpath rawlen=setvbuf>=object rawlen=export and rawlen newpath=rawlen or newpath rawlen=12180325-(-588528)select=newpath and rawlen newpath=188159-129123 select=select or newpath else select=bytecode[hasnext(232921+-191036)]Factory={newpath}end else select=loadfile[index[-1010874+1010878]]setvbuf=loadfile[index[-571948-(-571950)]]object=loadfile[index[609281-609278]]export=hasnext(193759+-152027)rawlen=18489062301011-555954 status=object(export,rawlen)newpath=setvbuf[status]rawlen=hasnext(776296+-734531)value=-438134+7909448236505 object=loadfile[index[221222+-221220]]status=loadfile[index[-950625-(-950628)]]export=status(rawlen,value)setvbuf=object[export]object=-674153-(-674157)Factory={select(newpath,setvbuf,object)}select=bytecode[hasnext(-186120+227922)]Factory={read(Factory)}end end else if select<-426035+12591599 then if select<-708159+12816823 then if select<12562610-584517 then select=10863804-(-933199)object=nil rawlen=nil export=nil else select=loadfile[index[-238335+238339]]double=-311555+31355410053644 object=loadfile[index[249489+-249488]]value=-694886+31493458973615 status=loadfile[index[-233843+233845]]rawlen=hasnext(570208-528431)export=status(rawlen,value)setvbuf=object[export]status=loadfile[index[-714650+714651]]export=loadfile[index[804864-804862]]value=hasnext(-617229+659052)rawlen=export(value,double)object=status[rawlen]status=1017510+-1017505 Factory={select(setvbuf,object,status)}select=bytecode[hasnext(203593+-161871)]Factory={read(Factory)}end else setvbuf=hasnext(632620+-590808)newpath=bytecode[setvbuf]setvbuf=hasnext(423898+-382144)unsigned=newpath[setvbuf]setvbuf=loadfile[index[16970-16969]]newpath={unsigned(setvbuf)}Factory={read(newpath)}select=bytecode[hasnext(873604+-831844)]end else if select<685694+11679001 then if select<-214442+12544138 then select=true setvbuf=hasnext(-1022891+1064604)unsigned=print newpath=imports()object=imports()loadfile[newpath]=select Factory=bytecode[setvbuf]setvbuf=hasnext(-245998-(-287789))status=imports()select=Factory[setvbuf]rawlen=hasnext(617745+-575938)setvbuf=imports()value=error(2118875-433983,{status})loadfile[setvbuf]=select select=loadstring(632937+4292166,{})loadfile[object]=select select=false loadfile[status]=select export=bytecode[rawlen]rawlen=export(value)Factory=rawlen select=rawlen and 607805-197992 or-141241+4399158 else Factory=double select=hooks select=double and 3937518-724621 or-325401+14150704 end else m=-632883-(-632884)select=loadfile[rawlen]collectgarbage=415298-415292 iterator=select(m,collectgarbage)select=hasnext(-636260-(-678056))bytecode[select]=iterator collectgarbage=hasnext(995528+-953732)m=bytecode[collectgarbage]collectgarbage=600481-600479 select=m>collectgarbage select=select and 12721738-84189 or 14656060-55767 end end end end else if select<14738096-344304 then if select<438142+12638287 then if select<-257384+13181726 then if select<12632377-(-78023)then if select<984205+11631712 then unsigned={readline(874297-874296,read(print))}select=loadfile[index[-292999-(-293000)]]export=hasnext(-885868+927724)setvbuf=loadfile[index[457703-457701]]object=loadfile[index[167941-167938]]rawlen=27658365162194-204931 status=object(export,rawlen)newpath=setvbuf[status]setvbuf=unsigned[-543078+543079]object=998524+-998519 Factory=select(newpath,setvbuf,object)select=bytecode[hasnext(-314644-(-356413))]Factory={}else i=hasnext(1058496-1016769)m=hasnext(-497743+539484)select=bytecode[m]collectgarbage=bytecode[i]m=select(collectgarbage)select=hasnext(247407-205611)bytecode[select]=m select=2496768-55196 end else if select<12903375-89493 then double=-196114+196369 select=loadfile[index[-232106-(-232107)]]value=-593887-(-593887)newpath=setvbuf rawlen=select(value,double)unsigned[newpath]=rawlen newpath=nil select=10765636-(-887994)else Factory=loadfile[index[-972990+972991]]status=hasnext(273392-231620)newpath=loadfile[index[-446984+446986]]setvbuf=loadfile[index[160085-160082]]export=23087694938098-87539 value=-350028+20130566339562 object=setvbuf(status,export)unsigned=newpath[object]select=Factory[unsigned]unsigned=select select=loadfile[index[-648529-(-648533)]]object=loadfile[index[-874954-(-874956)]]status=loadfile[index[819675+-819672]]rawlen=hasnext(1015714+-973897)export=status(rawlen,value)value=715084+19819229444801 setvbuf=object[export]newpath=setvbuf..unsigned Factory=select(newpath)rawlen=hasnext(-336969-(-378794))object=loadfile[index[-953779+953781]]status=loadfile[index[217174+-217171]]newpath=Factory export=status(rawlen,value)setvbuf=object[export]Factory=newpath[setvbuf]select=not Factory select=select and 13381911-389369 or 987839+7991480 end end else if select<330777+12687800 then if select<13821864-830693 then select=Factory and-127677+4534211 or 16360723-(-106056)else rawlen=hasnext(25575+16303)select=loadfile[index[-542728+542733]]value=19258733099911-596095 object=loadfile[index[702414-702412]]status=loadfile[index[471369+-471366]]export=status(rawlen,value)setvbuf=object[export]value=hasnext(-1012716+1054578)double=23905789138139-190815 status=loadfile[index[643247+-643245]]export=loadfile[index[676519-676516]]rawlen=export(value,double)object=status[rawlen]status=-414249-(-414253)Factory={select(setvbuf,object,status)}Factory={read(Factory)}select=bytecode[hasnext(-450841+492645)]end else newpath=int(-568527+10693672,{index[595359-595358];index[-590649+590651],index[977718+-977715]})Factory=hasnext(-460427+502234)select=bytecode[Factory]setvbuf={select(newpath)}Factory=setvbuf[711079+-711078]newpath=Factory select=newpath and-433811+15269039 or 784020+12205851 unsigned=setvbuf[690769+-690767]Factory=newpath end end else if select<13126674-(-565108)then if select<879859+12612116 then if select<13121119-(-16430)then select=13810209-(-832343)loadfile[newpath]=Factory else select=upvalueid select=long and 7825122-761217 or 11583966-132097 end else if select<73772+13555456 then Factory={}select=bytecode[hasnext(-2758+44545)]else select={}status=-1019155+35184373107987 loadfile[index[560755-560753]]=select Factory=loadfile[index[785713-785710]]value=hasnext(-186622+228335)object=Factory rawlen=-61826-(-62081)Factory=newpath%status loadfile[index[265327+-265323]]=Factory export=newpath%rawlen rawlen=41065-41063 status=export+rawlen hooks=-735226+735227 loadfile[index[-567691+567696]]=status rawlen=bytecode[value]value=hasnext(-456591-(-498310))export=rawlen[value]value=-745825-(-745826)long=hooks select=16229867-593150 rawlen=export(unsigned)hooks=-188180+188180 export=hasnext(318803-277079)setvbuf[newpath]=export bool=long<hooks double=rawlen export=-111974-(-112032)hooks=value-long end end else if select<13605256-(-388978)then if select<12913245-(-939404)then hooks=hasnext(-845828-(-887689))select=-106170+3319067 double=bytecode[hooks]Factory=double else select=3205456-(-202993)long=loadfile[value]parse=hasnext(-695648+737499)collectgarbage=loadfile[object]i=loadfile[newpath]gfind=273368+25851136557869 byte=i(parse,gfind)signed=collectgarbage[byte]collectgarbage=581803-581798 upvalueid=long(signed,popen,collectgarbage)end else unsigned=loadfile[index[405260+-405259]]Factory=#unsigned unsigned=470532+-470532 select=Factory==unsigned select=select and 2167648-428907 or-621112+12740010 end end end else if select<705201+14562228 then if select<380758+14292483 then if select<-731793+15265431 then if select<14728839-221567 then export=hasnext(-191520+233240)rawlen=3153042576120-118076 select=loadfile[index[722148+-722144]]setvbuf=loadfile[index[1028865-1028863]]object=loadfile[index[-849040-(-849043)]]status=object(export,rawlen)newpath=setvbuf[status]Factory={select(newpath)}Factory={read(Factory)}select=bytecode[hasnext(-325317+367083)]else newpath=loadfile[index[812194+-812191]]long=619523+-619510 double=286714-286712 setvbuf=-812614+812646 unsigned=newpath%setvbuf object=loadfile[index[145349-145345]]rawlen=loadfile[index[-780515-(-780517)]]upvalueid=loadfile[index[-992445-(-992448)]]popen=upvalueid-unsigned upvalueid=984000-983968 bool=popen/upvalueid hooks=long-bool value=double^hooks export=rawlen/value status=object(export)object=4295580368-613072 setvbuf=status%object value=84048-84047 status=-717591-(-717593)object=status^unsigned newpath=setvbuf/object object=loadfile[index[854287-854283]]rawlen=newpath%value value=4295093890-126594 export=rawlen*value status=object(export)rawlen=286375+-220839 object=loadfile[index[-657415+657419]]export=object(newpath)setvbuf=status+export double=-586672+586928 status=919037+-853501 object=setvbuf%status export=setvbuf-object status=export/rawlen rawlen=-153517-(-153773)select=-266655+12385553 export=object%rawlen newpath=nil value=object-export rawlen=value/double double=-391455+391711 value=status%double long=-464958+465214 hooks=status-value double=hooks/long object=nil status=nil setvbuf=nil unsigned=nil hooks={export,rawlen;value;double}export=nil loadfile[index[-307102+307103]]=hooks rawlen=nil value=nil double=nil end else if select<268192+14339657 then collectgarbage=hasnext(-378038+419834)select=bytecode[collectgarbage]collectgarbage=hasnext(-656119+697846)bytecode[collectgarbage]=select select=989353+1452219 else open=apply(open)i=apply(i)byte=apply(byte)onload=nil parse=apply(parse)select=3390767-887215 remove=apply(remove)gfind=apply(gfind)end end else if select<15235174-64561 then if select<-94203+14943144 then select=12941992-(-47879)Factory=unsigned else iterator=loadfile[newpath]select=iterator and 759371-(-737236)or 10502797-640254 ipairs=iterator end else i=imports()byte=576654+-576554 loadfile[i]=ipairs remove=hasnext(-974279+1016084)code=-417523+427523 onload=-759965+759967 Factory=bytecode[remove]remove=hasnext(-928453-(-970275))select=Factory[remove]parse=312921+-312666 open=436013+-436012 remove=-59895+59896 Factory=select(remove,byte)remove=imports()loadfile[remove]=Factory byte=457313-457313 select=loadfile[rawlen]Factory=select(byte,parse)byte=imports()loadfile[byte]=Factory select=loadfile[rawlen]gfind=loadfile[remove]parse=-381109-(-381110)Factory=select(parse,gfind)parse=imports()loadfile[parse]=Factory Factory=loadfile[rawlen]gfind=Factory(open,onload)Factory=-484043-(-484044)rawnew=437940-437940 tmpfile=hasnext(-654523-(-696264))onload=hasnext(160688+-118959)select=gfind==Factory gfind=imports()loadfile[gfind]=select rawset=bytecode[tmpfile]wrap=loadfile[rawlen]Factory=hasnext(347478-305665)rawget={wrap(rawnew,code)}tmpfile=rawset(read(rawget))rawset=hasnext(981412+-939683)gmod=tmpfile..rawset open=onload..gmod select=hasnext(-457767+499559)select=upvalueid[select]select=select(upvalueid,Factory,open)open=imports()gmod=loadstring(622120+10094455,{rawlen,i;hooks;setvbuf;newpath,signed;gfind,open,remove;parse;byte,double})onload=hasnext(782921+-741114)loadfile[open]=select Factory=bytecode[onload]onload={Factory(gmod)}select={read(onload)}onload=select select=loadfile[gfind]select=select and 7944715-301307 or-320049+7556276 end end else if select<995390+15068307 then if select<594621+15087775 then if select<16061231-462095 then unsigned=print[837029-837028]select=loadfile[index[62538-62537]]export=loadfile[index[1822-1820]]bool=631954+22298099434493 newpath=print[175744-175742]rawlen=loadfile[index[904123-904120]]hooks=15875+11051615835671 Factory=hasnext(-362556+404371)setvbuf=print[378632+-378629]long=-640632+29728320502923 double=hasnext(717797+-676024)value=rawlen(double,hooks)hooks=hasnext(340195-298345)status=export[value]rawlen=loadfile[index[-284253+284255]]value=loadfile[index[422364-422361]]double=value(hooks,long)export=rawlen[double]Factory=select[Factory]long=hasnext(-418063+459834)value=loadfile[index[-582042-(-582044)]]double=loadfile[index[-148705+148708]]hooks=double(long,bool)rawlen=value[hooks]object={[status]=unsigned,[export]=newpath,[rawlen]=setvbuf}setvbuf=nil Factory=Factory(select,object)Factory={}newpath=nil select=bytecode[hasnext(-80827+122653)]unsigned=nil else popen=not bool hooks=hooks+long value=hooks<=double value=popen and value popen=hooks>=double popen=bool and popen value=popen or value popen=625445+7049747 select=value and popen value=-322442+12282489 select=select or value end else tmpfile=-8456-(-8457)select=-306808+4446817 rawset=onload[tmpfile]gmod=rawset end else if select<608378+15858092 then if select<15618895-(-836035)then select=loadfile[index[14939+-14932]]select=select and 614475+7778267 or-538578+5972746 else unsigned=loadstring(-861905+8749675,{index[-294062+294063],index[924208+-924206];index[-907782+907785]})Factory=hasnext(538596+-496741)newpath=rand(8601630-497808,{index[-1021597-(-1021600)];index[89350+-89349],index[454491+-454489]})select=bytecode[Factory]Factory=select(unsigned,newpath)select=bytecode[hasnext(-525081+566788)]Factory={}end else select=newpath and-62010-(-441922)or-326025+4384530 Factory=newpath end end end end end end end select=#j return read(Factory)end,function(bytecode)for hasnext=902221+-902220,#bytecode,242692-242691 do unsigned[bytecode[hasnext]]=unsigned[bytecode[hasnext]]+(-943653-(-943654))end if print then local select=print(true)local read=j(select)read[hasnext(1067307-1025474)],read[hasnext(837712+-795954)],read[hasnext(594861+-553040)]=bytecode,object,function()return-161733+1274354 end return select else return index({},{[hasnext(899339-857581)]=object,[hasnext(202961-161128)]=bytecode;[hasnext(97620+-55799)]=function()return-617765+1730386 end})end end return(rand(11925256-(-389284),{}))(read(Factory))end)(getfenv and getfenv()or _ENV,unpack or table[hasnext(-498131+539992)],newproxy,setmetatable,getmetatable,select,{...})end)(...)
