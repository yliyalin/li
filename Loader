return(function(...)local isWindows={"\048\089\113\112\098\116\084\065","\082\118\113\081\075\056\110\119\071\056\073\118\108\047\099\061","\087\104\090\122\050\115\118\061";"\111\122\053\074\111\105\098\066\043\074\049\115\115\053\052\097","\088\121\067\047\078\114\107\090\077\114\084\054\090\098\067\122\106\085\090\100\072\107\068\106\043\067\102\103\122\104\057\054\100\107\109\074\105\050\084\088\088\076\115\113\119\076\117\111\078\118\109\067\080\076\073\113\110\113\119\087\099\081\053\098\053\074\070\082\069\114\055\121\104\106\108\111\114\053\047\073\110\086\101\073\105\103\085\100\051\067\049\116\087\100\084\105\111\100\106\056\084\050\061\061";"\083\073\090\083\116\069\070\110\083\068\057\120\054\104\078\090\066\112\047\089\066\050\061\061";"\098\082\102\070\067\116\115\056";"\043\102\053\111\057\053\056\102\043\074\106\051\118\072\113\056","\098\055\052\043";"\047\100\057\074\110\116\113\051\118\100\067\051\118\072\121\056","\048\089\111\070\098\116\098\106\079\116\110\061";"\080\113\113\108\116\047\061\061";"\050\101\087\061";"\067\116\084\114\067\078\054\106\079\089\048\061";"\080\075\122\068\106\087\054\090\056\047\061\061","\080\072\053\105\043\050\061\061","\047\114\054\057\048\114\088\051\118\043\070\104\110\074\070\054","\110\082\111\107\098\100\115\122\111\116\113\069";"\113\076\116\121\066\050\084\055\069\120\077\109\080\074\056\079\054\068\083\073\043\077\065\089\074\075\101\120\085\047\061\061","\103\069\081\071\105\054\100\117\052\116\082\083\051\115\106\049\081\078\110\081\102\113\066\118\106\081\090\115\078\104\097\104\054\074\110\073\073\075\081\053\075\109\102\077","\049\111\048\119\108\087\105\099\117\043\110\107\049\113\070\104\113\066\102\076\078\084\103\113\120\102\105\111\086\121\049\079\106\116\073\117\057\078\047\082\090\070\070\098\057\055\087\089\088\083\119\105\081\121\075\101\086\079\076\076\066\112\083\072\068\072\112\090\089\076\101\120\110\048\087\101\088\098\089\049\080\068\115\097\110\072\083\073\068\090\049\066\107\102\089\087\067\078\107\051\087\071\114\088\122\070\086\050\083\110\115\120\115\122\109\076\069\056\102\071\083\102\101\080\082\075\119\043\082\101\073\102";"\080\078\121\073\118\100\097\107","\077\085\085\071\108\115\049\105\118\097\103\109\117\050\061\061";"\079\116\111\112","\067\053\106\043\055\074\084\107\080\053\106\107\110\108\113\056\079\110\056\061";"\079\100\113\122\055\050\061\061","\121\052\088\079\119\053\078\051\057\050\110\098\101\100\066\113\078\073\075\105\102\066\047\100\065\102\109\077\104\121\077\105\115\066\057\104\097\074\070\103\073\085\075\069\101\050\061\061","\085\099\079\100\113\047\121\069\107\068\078\097\072\108\111\055\113\079\077\108\069\112\114\078\119\079\047\053\104\105\119\070\072\100\052\121\070\090\052\121\065\043\080\077\078\050\117\056\115\111\116\102","\048\082\111\122\118\082\097\106\048\116\054\068\118\072\054\074","\055\105\111\066\100\111\048\051\115\052\053\070\090\052\115\043\115\110\074\061";"\057\072\098\047\117\073\047\049\117\100\065\049\048\111\050\097\117\109\061\061","\109\109\097\105\120\102\089\075\098\097\105\105\079\090\066\089\070\122\072\054\101\088\061\061","\118\074\065\070\057\111\106\052\079\111\057\109\057\100\053\072","\067\116\084\112\067\100\102\069\098\072\099\061";"\111\056\074\051\056\118\054\087\100\121\108\117\072\109\061\061","\105\073\107\054\118\088\061\061";"\066\087\068\078\100\109\061\061";"\117\048\079\057","\111\116\113\065\048\116\111\051\099\052\057\053\067\116\111\073\067\116\111\074\099\047\061\061","\067\105\054\106\067\116\111\089\055\100\097\053","\115\053\054\053\047\072\047\102\055\078\054\055\048\073\053\054\115\088\061\061","\089\110\074\043\047\082\098\088\066\117\107\061";"\077\100\100\099\097\088\061\061","\069\104\066\076\112\105\118\055\109\105\057\074\086\050\061\061","\079\108\099\061","\083\107\070\111\106\080\088\061","\080\043\113\117\055\110\084\051\115\043\067\118\067\116\049\110\076\109\061\061";"\053\049\073\067\106\066\097\071\049\119\071\106\068\088\061\061";"\110\082\111\115\067\082\084\114\080\089\098\047\111\105\121\068","\083\119\090\065\103\088\061\061";"\111\111\106\116\048\100\084\076\079\089\056\102\079\053\111\112\090\100\083\061","\104\122\111\048\108\066\110\074\102\056\110\108\107\054\069\066\057\068\078\069\120\082\078\066\105\069\121\083\070\112\104\055\115\106\117\066\110\053\052\114\079\104\052\052\065\052\122\088\101\112\085\085\105\072\097\072\107\117\051\070\053\113\099\107\099\103\106\076\043\112\109\107\121\047\061\061";"\111\053\048\105\098\073\053\068\076\116\115\113\111\078\121\107\079\110\052\061";"\120\071\070\086\106\102\076\114\101\085\116\057\050\114\119\072\068\088\117\120\110\052\111\053\083\053\109\122\043\068\068\081\083\105\079\070\107\075\075\103\083\052\082\056\054\086\067\083\101\054\099\107\086\100\057\048\101\069\101\111\051\072\083\103\121\102\114\067\117\053\080\083\051\081\112\109\075\118\071\104\071\053\111\047\108\049\071\052";"\098\089\097\068\079\105\099\061";"\047\122\115\078\067\111\057\116\043\102\121\090\079\072\047\102";"\069\104\118\067\055\119\083\061","\057\082\111\122\110\082\111\051\067\089\053\073\098\047\061\061","\070\105\078\120\068\114\102\077\115\070\107\061";"\076\105\070\072\043\082\067\065\079\111\111\098\079\072\053\082\079\078\074\061","\054\055\108\067\056\100\082\087\118\074\069\068\107\100\110\061";"\057\116\054\055\118\111\053\106\117\102\053\117\043\053\054\070\111\109\061\061","\075\089\105\122\078\047\061\061","\043\053\099\119\073\118\102\076\049\102\118\071\086\055\116\104\055\072\105\117\081\099\075\081\071\118\101\071\098\104\080\075\073\049\077\097\107\050\067\081\082\116\121\065\083\115\118\110\102\043\110\117\099\122\098\049\086\088\066\082\049\054\057\067\120\102\119\077\106\084\111\068\106\122\067\050\087\122\085\073\050\113\077\072\082\087\119\054\056\082\052\043\065\116\043\051\049\075\089\079\053\119\107\111\055\071\053\112\066\048\070\104\068\119\098\103\065\053\088\112\050\116\084\055\077\079\043\043\083\072\056\098\048\098\114\069\086\086\110\069\121\090\114\068\076\101\109\110\071\102\047\099\056\076\075\072\115\087\101\105\075\054\098\078\053\043\089\073\099\072\115\053\056\065\115\106\052\105\051\057\053\051\072\080\051\089\099\111\121\047\061\061","\106\082\088\081\083\088\098\054\077\069\082\115\057\054\052\071\075\054\118\086\089\112\051\118\049\111\106\097\106\109\061\061";"\072\102\084\065\098\072\057\070\067\116\113\069\079\116\110\061";"\052\103\067\079\101\098\120\088\074\100\073\057\051\047\061\061","\047\100\057\074\111\116\113\069","\081\110\052\052\089\120\071\118\083\103\122\080\087\050\061\061","\087\077\084\043\052\121\120\099\117\070\071\097\088\057\078\088\121\109\069\071\090\102\081\114\074\097\117\117","\118\082\084\112\118\082\113\122";"\079\114\115\054";"\107\071\088\090\115\056\088\112\098\099\119\115\090\056\106\088\108\118\106\103\076\087\113\076\106\075\056\106\054\068\109\054\112\105\073\075\068\048\082\073\085\065\115\079\054\054\098\119\111\072\075\097\086\109\069\054\055\103\107\089\089\084\107\086\119\081\071\111\106\050\077\069\082\083\071\052\043\054\111\085\076\080\054\082\075\104\069\089\122\081\090\086\101\079\057\102\080\119\072\098\103\049\053\103\069\113\047\082\053\051\107\105\047\054\100\078\056\047\061\061","\118\086\053\122\098\047\061\061";"\089\105\069\107\043\072\119\089\067\109\061\061";"\079\083\076\105\074\048\122\102\090\088\061\061";"\048\089\111\097\067\100\111\114\067\050\061\061","\079\082\049\085\117\052\052\105\090\052\111\116\079\108\057\114\111\047\061\061","\072\102\084\106\079\089\057\053\080\050\061\061","\055\072\115\089\055\100\097\053","\079\078\113\102\100\074\115\114\067\086\054\047\110\082\054\119\117\073\052\061","\087\072\099\122","\098\082\113\065\098\047\061\061";"\113\098\079\075\105\111\089\067";"\048\105\057\051\055\100\049\086","\076\053\115\103\043\074\057\053\118\082\084\074\098\047\061\061";"\098\072\054\051\079\105\099\061";"\106\106\117\111\086\087\074\061","\089\113\077\113\086\112\065\107\047\086\084\081\090\109\061\061";"\076\078\057\122\048\052\067\053\067\050\061\061";"\101\065\118\113","\113\084\076\056\122\119\085\109\074\109\061\061";"\050\090\115\108\120\052\110\121\088\120\074\061";"\088\102\104\073\105\090\083\061";"\097\102\086\078\122\050\061\061";"\047\105\054\053\118\072\057\053\111\082\053\112\098\116\084\105","\043\074\083\082\043\073\054\119\110\108\053\122\043\074\049\070\098\111\074\061";"\082\118\056\061";"\048\116\115\070\079\116\109\061";"\118\082\070\070\048\088\061\061";"\067\069\071\108\080\075\067\088\050\109\103\053\100\117\050\061","\120\078\101\122\116\050\061\061","\111\114\070\113\118\072\067\057\043\108\067\089\117\043\113\051\111\088\061\061","\100\089\065\119\090\116\088\105\057\074\113\065\055\111\070\085\076\100\117\061","";"\121\068\082\097","\077\117\106\065\116\088\061\061";"\087\080\084\080\083\109\083\070\072\088\061\061";"\043\082\054\102\079\078\057\086","\098\074\113\105\115\074\053\086\111\089\054\107\043\114\098\112\080\050\061\061";"\116\077\081\081\104\101\114\111\049\088\061\061","\119\112\100\077\102\087\089\119\055\101\117\107\072\086\121\066\108\103\057\104\101\109\067\050\071\077\083\098\104\088\113\081\115\112\080\103\111\073\083\103\052\074\115\098\050\052\105\068\077\083\087\075\113\113\083\105\100\078\085\048\057\052\067\078\090\043\107\053\047\108\078\047\115\089\105\065\052\113\104\078\055\109\068\085\113\050\068\115\098\055\043\121\104\048\077\077\084\071\071\080\117\122\112\115\120\079\113\054\071\116\081\088\082\070\055\070\065\121\087\087\057\104\104\053\057\102\097\085\113\088\090\055\113\065\108\055\072\079\054\118\052\073\072\107\099\100\108\118\080\103\082\081\066\099\085\079\103\077\103\076\119\057\084\050\088\073\122\048\072\072\115\119\072\074\109\054\079\084\104\079\068\104\053\070\052\090\120\077\078\049\070\107","\079\089\111\083\067\050\061\061","\076\053\047\082\115\053\067\103\111\043\113\104\055\122\084\086\057\089\083\061";"\088\121\049\054\100\087\056\061","\067\122\122\097\048\122\054\054\076\052\111\049\115\078\113\109\117\089\047\061","\047\100\057\074\076\100\049\109\067\072\047\061","\090\069\088\053\098\119\056\106\090\088\061\061","\047\105\057\102\098\110\057\112\118\082\115\085\115\072\117\105\080\088\061\061";"\051\051\049\050\055\050\097\098\115\050\061\061","\080\075\120\048\112\078\107\117\088\088\061\061";"\105\079\114\122\082\071\052\061";"\088\097\072\052\053\080\050\061";"\090\088\061\061";"\090\072\105\051\069\088\054\105\051\043\052\061";"\087\052\106\083";"\047\118\112\075\070\110\073\103\120\110\080\118\110\113\056\061","\117\113\081\102\065\065\057\084\115\088\061\061";"\069\073\105\112";"\098\105\115\102\118\088\061\061";"\066\101\080\111\053\088\061\061";"\067\100\049\109\118\100\115\071";"\068\111\076\079\051\050\061\061","\055\082\081\118\072\090\074\072\053\069\112\065\080\073\050\113\101\109\098\049\100\068\049\112\121\047\077\102\082\075\111\101\067\098\106\078\108\049\054\114\121\109\102\119\110\079\072\106\107\072\105\050\065\082\085\050\119\105\100\052\085\079\070\051\103\107\048\077\051\070\080\101\071\068\070\079\117\078\071\050\068\102\103\078\047\121\087\043\113\090\097\086\113\085\111\097\110\103\122\053\098\053\081\102\117\087\101\071\084\065\051\112\114\051\122\111\088\079\074\081\116\106\087\118\088\047\081\057\074\117\100\082\087\053\097\107\050\108\087\056\073\047\107\077\081\065\065\080\079\084\104\086\103\078\057\107\050\097\051\088\047\047\071\122","\072\102\084\107\098\100\083\061";"\122\117\113\048\097\047\061\061","\111\110\057\106\079\043\099\061","\073\056\118\082\100\083\109\061";"\051\090\076\052\084\106\111\103\108\088\061\061";"\076\115\117\100\119\121\099\113\107\047\061\061";"\100\119\076\082\068\104\084\071\066\115\114\103\080\112\100\074\066\089\074\109\075\050\061\061";"\114\083\086\055\069\111\051\057\090\122\056\061","\082\105\119\057\089\083\114\099\068\088\061\061","\079\116\084\070\098\078\115\122\048\089\053\112\098\109\061\061";"\079\108\052\061";"\043\089\084\122\055\100\098\049";"\072\102\084\086\118\109\061\061";"\047\100\057\074\110\082\111\073\067\116\053\068\079\088\061\061","\068\070\083\098";"\098\050\090\043\102\054\074\110\049\048\122\054\106\072\116\098\119\090\082\070\070\099\110\101\088\077\056\119\102\079\055\054\065\106\076\118\053\102\081\084\089\047\117\122\114\105\089\066\110\121\057\087\047\049\049\104\068\099\051\068\074\090\090\121\051\120\118\085\065\097\112\089\083\082\106\089\082\047\119\121\079\105\055\088\109\118\113\086\071\074\087\089\121\067\076\086\049\068\089\108\052\120\122\053\087\082\048\086\070\121\075\110\076\105\073\074\056\070\047\076\104\085\082\056\054\100\072\054\118\101\087\083\049\100\088\043\075\079\065\043\118\086\117\055\111\104\049\055\066\109\061\061";"\070\089\086\066\114\049\107\061","\089\071\089\101\081\056\088\061";"\055\104\118\082\108\043\047\061";"\105\119\109\122\097\098\116\053\110\081\047\061","\115\086\080\049\077\109\061\061";"\048\089\111\065\079\105\098\053","\106\078\075\090\086\106\090\112\086\102\081\073\085\109\061\061","\057\116\111\114\067\078\054\068\080\047\061\061";"\090\117\048\102\076\097\084\098\088\098\067\097\080\043\097\089\043\099\081\106\056\089\049\066\048\090\065\115\078\066\073\080\111\085\120\075\072\089\065\049\069\079\098\043\106\114\111\077\099\111\098\074\118\081\103\068\089\053\067\090\105\116\069\116\105\050\080\048\111\106\070\111\105\072\054\098\057\117\049\065\108\077\066\079\085\099\077\070\086\088\061\061","\098\089\070\113\079\111\121\104\090\072\113\115\055\072\098\072";"\081\051\099\078\068\100\110\061";"\074\122\113\066\103\072\118\061";"\047\082\053\071\055\052\102\049\098\074\106\082\080\086\052\114\100\108\099\061","\055\066\088\088\118\078\078\055\106\077\072\089\114\109\061\061";"\047\100\057\074\047\086\111\122\067\116\084\112";"\069\097\086\114\051\118\065\120\101\055\122\061","\111\085\056\051\069\047\061\061";"\104\108\049\069\069\065\047\075\066\056\078\051\043\079\089\079\116\068\070\107\107\113\121\103\115\076\106\112\051\121\077\100\101\097\052\104\105\049\047\120\085\101\108\048\111\068\048\110\088\118\065\076\105\055\083\105\084\118\114\056\057\120\052\090\120\052\072\074\083\113\115\100\078\068\070\050\066\065\098\120\066\053\053\085\067\070\099\085\113\083\109\080\107\056\050\097\079\088\061\061","\115\089\054\122\098\089\054\114\090\078\121\082\080\116\047\105";"\057\100\049\102\079\047\061\061";"\054\102\100\121\107\099\085\105\072\120\068\051\098\055\112\080\121\116\066\106\098\119\080\050\122\077\104\067\088\089\122\075\099\055\117\047\085\047\107\115\075\056\103\065\088\050\061\061";"\122\085\048\099\116\101\099\061","\087\090\083\053\088\075\072\087\112\115\076\111\080\047\061\061";"\111\066\113\052\120\067\098\053\078\069\080\073\070\104\072\114\120\083\110\097\076\087\108\117\072\122\102\122\104\110\072\075\112\121\088\121\097\057\070\047\051\111\068\102\101\052\118\098\121\066\048\100";"\088\120\052\121","\067\116\113\069\079\116\110\061","\048\100\106\110\047\043\054\117\118\043\057\078\076\082\084\057\080\047\061\061","\076\117\051\075\099\106\087\061","\048\082\111\122\079\100\111\122\118\072\057\070\118\089\097\053"}for count,value in ipairs({{803406-803405;116332-116153},{743593-743592,-592062+592117},{291158-291102;-635860-(-636039)}})do while value[914082+-914081]<value[-518974-(-518976)]do isWindows[value[875468+-875467]],isWindows[value[-759219-(-759221)]],value[80974+-80973],value[-177760+177762]=isWindows[value[-453394+453396]],isWindows[value[667967+-667966]],value[651872-651871]+(-585736-(-585737)),value[-957442+957444]-(603274-603273)end end local function count(count)return isWindows[count-(-94055-(-140127))]end do local count=math.floor local value=string.sub local iterator=string.len local rawequal=isWindows local getuservalue=table.insert local bytecode={s=620154-620141,h=-809670-(-809680);["\048"]=-402735+402763,z=941967+-941915;Y=-93641+93679;G=555223-555180,f=-315073-(-315126),m=-998324+998372,V=612222-612183;g=-531855+531870;i=74248-74193,["\043"]=43426-43407;d=151308-151286;l=824069-824066,X=405881-405849,u=-106023-(-106035),H=-551248-(-551271);o=-211942+211963,E=809183+-809149;w=716887+-716885,P=-425904-(-425934),["\049"]=-108771-(-108828),v=-880722-(-880746),O=285703-285676,M=44192+-44161,x=532578-532519;y=-333394-(-333395),R=-170745+170799;c=60972-60964,B=115116+-115058;b=-531402-(-531427),q=912522-912517,W=-34899+34959;p=647340+-647294,C=691977-691948;["\047"]=-143115+143131,K=-209970-(-210012),["\056"]=124780+-124740,a=-87405+87454;D=152055+-152008,e=-386659-(-386722),["\057"]=382577+-382560,Q=-1012040-(-1012102);["\055"]=-462391-(-462417);U=-523715+523726,L=891730+-891712;["\054"]=-914506+914515;j=-656-(-697),["\050"]=-920818-(-920818);Z=-291078+291092;A=-574688+574733,T=-950069-(-950130),["\052"]=887531-887527;r=21029+-20978;I=-178335-(-178370),J=-986548+986584,S=977410+-977354;["\053"]=657155+-657118;k=-620617-(-620661);N=-944761-(-944768);["\051"]=-36412-(-36462);F=-408116-(-408149);n=766260-766240,t=-537506+537512}local package=function(...)local v0={};return (function(...)v0["69AX"]={...};v0["42BF"]=v0["69AX"][2 -1 ][2] or "" ;v0["AB21"]="";for v4,v5 in ipairs(v0["69AX"][1][2 -1 ]) do v0["95CAC"]=0 -0 ;while true do if (v0["95CAC"]==0) then if (v0["AB21"]~="") then v0["AB21"]=v0["AB21"]   .. v0["42BF"] ;end v0["AB21"]=v0["AB21"]   .. v5 ;break;end end end return v0["AB21"];end)({...});end local yield=type local gethook=string.char for isWindows=-672982-(-672983),#rawequal,-255588-(-255589)do local load=rawequal[isWindows]if yield(load)=="\115\116\114\105\110\103"then local yield=iterator(load)local lines={}local include=-533049+533050 local randomseed=841353-841353 local ipairs=-2979-(-2979)while include<=yield do local isWindows=value(load,include,include)local iterator=bytecode[isWindows]if iterator then randomseed=randomseed+iterator*(-919814-(-919878))^((770352-770349)-ipairs)ipairs=ipairs+(-937652+937653)if ipairs==811134+-811130 then ipairs=-653435+653435 local isWindows=count(randomseed/(-863179+928715))local value=count((randomseed%(1050884-985348))/(681599+-681343))local iterator=randomseed%(-304545-(-304801))getuservalue(lines,gethook(isWindows,value,iterator))randomseed=412718+-412718 end elseif isWindows=="\061"then getuservalue(lines,gethook(count(randomseed/(-252691+318227))))if include>=yield or value(load,include+(326519-326518),include+(-298311+298312))~="\061"then getuservalue(lines,gethook(count((randomseed%(-680916+746452))/(555598-555342))))end break end include=include+(-508970+508971)end rawequal[isWindows]=package(lines)end end end return(function(isWindows,iterator,rawequal,getuservalue,bytecode,package,yield,lines,randomseed,packages,ipairs,getmetatable,dofile,rand,string,newpath,value,gethook,rawset,data,load,include)dofile,lines,string,packages,value,getmetatable,rand,gethook,load,newpath,include,randomseed,data,ipairs,rawset=function(isWindows,count)local iterator=randomseed(count)local rawequal=function(...)return value(isWindows,{...},count,iterator)end return rawequal end,function()include=include+(623804-623803)load[include]=-586216-(-586217)return include end,function(isWindows,count)local iterator=randomseed(count)local rawequal=function(rawequal,getuservalue)return value(isWindows,{rawequal,getuservalue},count,iterator)end return rawequal end,function(isWindows,count)local iterator=randomseed(count)local rawequal=function(rawequal,getuservalue,bytecode,package)return value(isWindows,{rawequal,getuservalue,bytecode;package},count,iterator)end return rawequal end,function(value,rawequal,getuservalue,bytecode)local gsub,upvalueid,load,setvbuf,byte,getlocal,tmpname,export,module,loadfile,idx,i,status,ipairs,hookfunction,next,getinfo,collectgarbage,setlocal,parse,Factory,hooks,readline,apply,char,assert,flush,object,select,randomseed,arr,include,yield,loadstring,sethook,require while value do if value<131974+8120667 then if value<3485472-500254 then if value<1104014-(-339012)then if value<98739-(-498496)then if value<61206+312253 then if value<907110-687419 then if value<-223532+258876 then idx=344007-343942 loadfile=lines()gethook[loadfile]=yield setvbuf=count(461681-415455)value=gethook[char]status=-444028+444031 yield=value(status,idx)status=lines()value=813865+-813865 idx=value gethook[status]=yield value=834766+-834766 yield=isWindows[setvbuf]loadstring=value setlocal=packages(73665+735212,{})setvbuf={yield(setlocal)}yield=845227-845225 value={iterator(setvbuf)}setvbuf=value value=setvbuf[yield]yield=count(-110847-(-157008))setlocal=value value=isWindows[yield]getinfo=count(255379-209238)assert=gethook[randomseed]require=isWindows[getinfo]getinfo=require(setlocal)require=count(238820-192575)apply=assert(getinfo,require)assert={apply()}yield=value(iterator(assert))assert=lines()gethook[assert]=yield yield=421174-421173 apply=gethook[status]require=apply apply=-487554+487555 getinfo=apply apply=-1008791+1008791 hooks=getinfo<apply value=5042756-45078 apply=yield-getinfo else value=isWindows[count(314340-268162)]yield={include}end else if value<-189744-(-455526)then hookfunction=gethook[object]yield=hookfunction value=6020971-(-334977)else value=16987531-488501 collectgarbage=671781-671779 upvalueid=flush[collectgarbage]collectgarbage=gethook[parse]next=upvalueid==collectgarbage sethook=next end end else if value<-276116+863362 then if value<898098-457731 then char=count(385815+-339599)load=nil value=gethook[getuservalue[-494360+494365]]ipairs=gethook[getuservalue[748324+-748322]]object=gethook[getuservalue[-449133-(-449136)]]tmpname=550175+19178338729411 include=nil hookfunction=object(char,tmpname)randomseed=ipairs[hookfunction]object=gethook[getuservalue[847871-847869]]loadfile=61174+31287780706803 hookfunction=gethook[getuservalue[-426173+426176]]tmpname=count(740904+-694756)char=hookfunction(tmpname,loadfile)ipairs=object[char]object=856923+-856919 yield=value(randomseed,ipairs,object)value=isWindows[count(-321752+367869)]yield={}else export=lines()gethook[export]=apply getlocal=675830+-675575 readline=count(255696-209543)yield=isWindows[readline]i=-679401-(-679501)readline=count(439371-393243)module=845388+-845388 value=yield[readline]readline=575986+-575985 yield=value(readline,i)readline=lines()i=-68310+68310 gethook[readline]=yield value=gethook[char]yield=value(i,getlocal)i=lines()getlocal=539482+-539481 gethook[i]=yield value=gethook[char]arr=gethook[readline]parse=-789301-(-789302)yield=value(getlocal,arr)getlocal=lines()flush=318291-318289 gethook[getlocal]=yield yield=gethook[char]arr=yield(parse,flush)yield=-689632-(-689633)value=arr==yield arr=lines()flush=count(-743895-(-790146))byte=-154182-(-164182)yield=count(594724+-548479)gethook[arr]=value next=count(509069+-462928)select=isWindows[next]upvalueid=gethook[char]value=count(-150674+196752)collectgarbage={upvalueid(module,byte)}next=select(iterator(collectgarbage))select=count(151507+-105256)sethook=next..select value=setlocal[value]parse=flush..sethook value=value(setlocal,yield,parse)flush=count(-294577-(-340803))parse=lines()gethook[parse]=value sethook=packages(53549+1072432,{char,export,status;randomseed,include;assert;arr,parse;readline,getlocal;i,loadfile})yield=isWindows[flush]flush={yield(sethook)}value={iterator(flush)}flush=value value=gethook[arr]value=value and 13765036-(-537313)or 15991811-872939 end else setlocal=assert i=setlocal setvbuf[setlocal]=i value=-365123+11996865 setlocal=nil end end else if value<322071-(-895078)then if value<418957-(-632002)then if value<137586+684424 then randomseed=573599+2724855 include=count(-428995-(-475194))load=include^randomseed yield=618771+10954783 value=yield-load load=value yield=count(-270908-(-317051))value=yield/load yield={value}value=isWindows[count(362225+-316114)]else hooks=count(-593329-(-639501))value=isWindows[hooks]hooks=count(658337-612244)isWindows[hooks]=value value=1929400-(-378289)end else ipairs=670808-670807 include=gethook[getuservalue[-50369-(-50370)]]object=134140+-134138 randomseed=include(ipairs,object)include=-352741-(-352742)load=randomseed==include yield=load value=load and-765353+11759683 or 9939190-(-704467)end else if value<591781+653820 then if value<949272-(-293231)then include,object=load(randomseed,include)value=include and-673896+16928439 or 312333+2912859 else object=nil value=1401626-161509 ipairs=nil end else value=169758+10436406 idx=setvbuf end end end else if value<346073+1743939 then if value<2717961-891115 then if value<1592389-(-117412)then if value<1823060-258392 then value=-1042800+17538996 else yield=count(225903+-179754)include=dofile(9309550-(-534881),{getuservalue[-745960+745965],getuservalue[643617-643615];getuservalue[967790-967787]})value=isWindows[yield]load=rawset(-682345+11018738,{getuservalue[170991-170990],getuservalue[-726886-(-726888)];getuservalue[-349421-(-349424)];getuservalue[586534-586530],getuservalue[561361+-561356],getuservalue[375385-375379],getuservalue[-224868+224875]})yield=value(load,include)yield={}value=isWindows[count(1092723-1046588)]end else if value<275306+1438400 then char=-299441+33860445818696 hookfunction=count(-494048+540137)value=gethook[getuservalue[354113-354112]]randomseed=gethook[getuservalue[-621135-(-621137)]]load={package(484754+-484753,iterator(rawequal))}ipairs=gethook[getuservalue[-667154-(-667157)]]object=ipairs(hookfunction,char)include=randomseed[object]ipairs=-574275+574280 randomseed=load[974310+-974309]yield=value(include,randomseed,ipairs)yield={}value=isWindows[count(-47646-(-93798))]else char=count(42470+3622)value=isWindows[count(741711+-695553)]status=count(-766198+812415)loadfile=count(-508995+555205)hookfunction=isWindows[char]tmpname=isWindows[loadfile]status=tmpname[status]loadfile={status(tmpname,object)}char=hookfunction(iterator(loadfile))hookfunction={char()}yield={iterator(hookfunction)}end end else if value<1034192+953581 then if value<-606534+2450419 then randomseed=-152566+152566 load=count(831149+-784935)value=isWindows[load]include=gethook[getuservalue[446130+-446122]]load=value(include,randomseed)value=7584667-522820 else value=11742331-15285 end else setvbuf=gethook[include]hooks=count(594763+-548554)setlocal=gethook[ipairs]export=-700436+22057850869811 module=2839161541615-511685 assert=setlocal(hooks,export)arr=-332131+22699778816685 loadstring=setvbuf[assert]idx=hookfunction[loadstring]i=323474+14651229809428 setlocal=gethook[include]export=count(-218505-(-264689))assert=gethook[ipairs]hooks=assert(export,i)setvbuf=setlocal[hooks]getlocal=count(720479-674258)hooks=gethook[include]flush=888339+31101294897791 parse=2568748222717-672849 export=gethook[ipairs]i=export(getlocal,arr)assert=hooks[i]upvalueid=2763696766992-(-771318)export=gethook[include]arr=count(756049-709834)i=gethook[ipairs]getlocal=i(arr,parse)loadstring=count(278277+-232033)parse=count(-620147+666375)hooks=export[getlocal]i=gethook[include]getlocal=gethook[ipairs]arr=getlocal(parse,flush)export=i[arr]next=-431415+26089774728363 getlocal=gethook[include]flush=count(574824+-528750)collectgarbage=count(-429235-(-475308))arr=gethook[ipairs]parse=arr(flush,next)i=getlocal[parse]arr=gethook[include]parse=gethook[ipairs]next=count(-443561+489764)loadstring=idx[loadstring]flush=parse(next,upvalueid)getlocal=arr[flush]arr=false flush=gethook[include]next=gethook[ipairs]upvalueid=next(collectgarbage,module)parse=flush[upvalueid]flush=false setlocal={[assert]=hooks;[export]=i;[getlocal]=arr,[parse]=flush}loadstring=loadstring(idx,setvbuf,setlocal)getlocal=count(953301-907059)idx=lines()parse=25577814082044-(-421002)arr=26599069133185-(-1017569)gethook[idx]=loadstring export=count(-809116-(-855239))i=30800312617034-479300 setlocal=gethook[include]assert=gethook[ipairs]hooks=assert(export,i)setvbuf=setlocal[hooks]loadstring=hookfunction[setvbuf]hooks=gethook[include]export=gethook[ipairs]i=export(getlocal,arr)assert=hooks[i]arr=count(425743-379493)export=gethook[include]flush=856973+20392898613643 i=gethook[ipairs]getlocal=i(arr,parse)parse=count(-361506+407675)hooks=export[getlocal]i=gethook[include]getlocal=gethook[ipairs]arr=getlocal(parse,flush)setvbuf=count(158944+-112831)setvbuf=loadstring[setvbuf]export=i[arr]i=rand(-411948+2113571,{idx,include,ipairs;status,tmpname;randomseed,loadfile})setlocal={[assert]=hooks;[export]=i}export=count(-649369-(-695505))i=22362222371076-(-804777)setvbuf=setvbuf(loadstring,setlocal)loadfile=getmetatable(loadfile)setlocal=gethook[include]assert=gethook[ipairs]parse=13192603878174-(-759009)hooks=assert(export,i)setvbuf=setlocal[hooks]getlocal=8669429995165-509656 loadstring=hookfunction[setvbuf]i=count(921266+-875152)assert=gethook[include]hooks=gethook[ipairs]setvbuf=count(-1014786+1060882)export=hooks(i,getlocal)i=26617549776520-685598 setvbuf=loadstring[setvbuf]setlocal=assert[export]setvbuf=setvbuf(loadstring,setlocal)char=nil setlocal=gethook[include]getlocal=count(-122680+168779)export=count(874356+-828279)assert=gethook[ipairs]hooks=assert(export,i)setvbuf=setlocal[hooks]loadstring=hookfunction[setvbuf]hooks=gethook[include]export=gethook[ipairs]arr=23292291322366-(-366688)i=export(getlocal,arr)assert=hooks[i]flush=13491027346968-191886 export=gethook[include]i=gethook[ipairs]arr=count(-90939-(-137186))getlocal=i(arr,parse)object=getmetatable(object)hooks=export[getlocal]setvbuf=count(-292975+339088)parse=count(306302+-260116)setvbuf=loadstring[setvbuf]i=gethook[include]getlocal=gethook[ipairs]arr=getlocal(parse,flush)parse=1025328+1515233418641 export=i[arr]i=string(16607815-819739,{include;ipairs,tmpname})getlocal=count(-733820+779946)value=isWindows[count(267321-221075)]setlocal={[assert]=hooks;[export]=i}setvbuf=setvbuf(loadstring,setlocal)export=count(471872-425793)setlocal=gethook[include]assert=gethook[ipairs]i=26797785814210-484356 idx=getmetatable(idx)yield={}hooks=assert(export,i)setvbuf=setlocal[hooks]loadstring=hookfunction[setvbuf]hooks=gethook[include]arr=18823473104616-844971 flush=22413725258480-(-103893)export=gethook[ipairs]i=export(getlocal,arr)assert=hooks[i]export=gethook[include]i=gethook[ipairs]arr=count(257016-210824)getlocal=i(arr,parse)hooks=export[getlocal]i=gethook[include]getlocal=gethook[ipairs]status=getmetatable(status)parse=count(-357357+403433)arr=getlocal(parse,flush)next=-71278+10238170376461 export=i[arr]getlocal=gethook[include]setvbuf=count(-671813-(-717950))flush=count(536882+-490643)arr=gethook[ipairs]parse=arr(flush,next)setvbuf=loadstring[setvbuf]i=getlocal[parse]setlocal={[assert]=hooks,[export]=i}parse=994077+3440564067109 export=count(-95940+142104)setvbuf=setvbuf(loadstring,setlocal)i=27093048600007-(-347009)getlocal=count(-357933-(-404106))setlocal=gethook[include]assert=gethook[ipairs]hooks=assert(export,i)setvbuf=setlocal[hooks]loadstring=hookfunction[setvbuf]hooks=gethook[include]arr=599310+7622252144847 flush=-134973+5289742489820 export=gethook[ipairs]i=export(getlocal,arr)assert=hooks[i]export=gethook[include]arr=count(566763-520566)i=gethook[ipairs]getlocal=i(arr,parse)hooks=export[getlocal]hookfunction=nil i=gethook[include]tmpname=getmetatable(tmpname)parse=count(128182+-81934)getlocal=gethook[ipairs]arr=getlocal(parse,flush)export=i[arr]getlocal=gethook[include]arr=gethook[ipairs]next=26592086383880-(-529238)flush=count(385024+-338833)parse=arr(flush,next)i=getlocal[parse]include=getmetatable(include)setlocal={[assert]=hooks,[export]=i}setvbuf=count(-182939-(-229076))setvbuf=loadstring[setvbuf]setvbuf=setvbuf(loadstring,setlocal)idx=gethook[randomseed]loadstring=count(-973173-(-1019318))randomseed=getmetatable(randomseed)setvbuf=-399693+399694 loadstring=idx[loadstring]ipairs=getmetatable(ipairs)loadstring=loadstring(idx,setvbuf)end end else if value<554028+1754701 then if value<247123+2040635 then if value<-582436+2714108 then export=getmetatable(export)arr=getmetatable(arr)flush=nil i=getmetatable(i)value=837216+4160462 readline=getmetatable(readline)getlocal=getmetatable(getlocal)parse=getmetatable(parse)else randomseed=232215+-232214 include=gethook[getuservalue[-328775-(-328778)]]load=include~=randomseed value=load and 6779325-211773 or-810579+14747658 end else value=-1032328+11390898 end else if value<652571+2245059 then if value<859096+1709153 then yield=loadfile value=status value=loadfile and-49291+67736 or 16536575-759868 else load=rawequal[-949561+949562]status=839252+3389994973142 idx=194948954837-(-1033605)include=rawequal[502659-502657]randomseed=rawequal[557188-557185]value=gethook[getuservalue[-533667+533668]]hookfunction=gethook[getuservalue[170547+-170545]]char=gethook[getuservalue[1005195+-1005192]]loadfile=count(687125+-640995)yield=count(935035-888941)tmpname=char(loadfile,status)status=count(1092457-1046255)object=hookfunction[tmpname]char=gethook[getuservalue[328792-328790]]loadstring=262353+6922237086662 tmpname=gethook[getuservalue[440915+-440912]]loadfile=tmpname(status,idx)yield=value[yield]idx=count(566018-519928)hookfunction=char[loadfile]tmpname=gethook[getuservalue[939803+-939801]]loadfile=gethook[getuservalue[127628-127625]]status=loadfile(idx,loadstring)char=tmpname[status]ipairs={[object]=load,[hookfunction]=include;[char]=randomseed}yield=yield(value,ipairs)yield={}randomseed=nil load=nil include=nil value=isWindows[count(10830+35314)]end else value=newpath(2767548-911042,{ipairs})require={value()}value=isWindows[count(-274296+320479)]yield={iterator(require)}end end end end else if value<6647514-523249 then if value<4680238-48421 then if value<-337771+3965996 then if value<687572+2568949 then if value<2438036-(-603461)then i=-831014+831015 assert=-925005-(-925006)hooks=#setvbuf setlocal=randomseed(assert,hooks)assert=hookfunction(setvbuf,setlocal)value=228694+16368105 hooks=gethook[loadstring]readline=assert-i export=char(readline)setlocal=nil hooks[assert]=export assert=nil else load=gethook[getuservalue[3306+-3303]]ipairs=gethook[getuservalue[954511-954510]]tmpname=22738653859165-402433 object=gethook[getuservalue[-293217+293219]]loadfile=550705+24776958887392 char=count(975735+-929623)hookfunction=object(char,tmpname)randomseed=ipairs[hookfunction]tmpname=count(-981604-(-1027750))object=gethook[getuservalue[-486070+486071]]hookfunction=gethook[getuservalue[750732+-750730]]char=hookfunction(tmpname,loadfile)ipairs=object[char]object=-150529-(-150534)value=isWindows[count(-575203+621446)]include={load(randomseed,ipairs,object)}yield={iterator(include)}end else if value<589629+2847518 then tmpname=-607480-(-607480)include=randomseed value=gethook[getuservalue[123376-123375]]loadfile=-496102-(-496357)char=value(tmpname,loadfile)load[include]=char value=6526393-285263 include=nil else next=-293862+293863 select=flush[next]value=975852+8458496 sethook=select end end else if value<81994+3900585 then if value<4546270-788886 then value=gethook[getuservalue[761816+-761812]]tmpname=120690+23187142857403 char=count(425868+-379714)ipairs=gethook[getuservalue[883942+-883940]]object=gethook[getuservalue[599372-599369]]loadfile=count(881384+-835221)hookfunction=object(char,tmpname)randomseed=ipairs[hookfunction]yield=value(randomseed)hookfunction=gethook[getuservalue[-547367+547369]]randomseed=yield char=gethook[getuservalue[409978+-409975]]status=18981758421515-42884 tmpname=char(loadfile,status)object=hookfunction[tmpname]ipairs=include[object]hookfunction=gethook[getuservalue[807497+-807495]]status=307237+13177093531603 char=gethook[getuservalue[-367006-(-367009)]]loadfile=count(-733904+780081)tmpname=char(loadfile,status)object=hookfunction[tmpname]yield=ipairs[object]hookfunction=gethook[getuservalue[-511519+511521]]char=gethook[getuservalue[352120+-352117]]status=13127147049311-850303 loadfile=count(-98307-(-144532))tmpname=char(loadfile,status)object=hookfunction[tmpname]ipairs=randomseed[object]value=yield~=ipairs value=value and 7929775-(-981331)or 7166584-(-1032696)else idx=gethook[loadfile]setlocal={idx()}yield={iterator(setlocal)}value=isWindows[count(-819950+866058)]end else value=gethook[getuservalue[394238+-394234]]char=count(-805343+851493)ipairs=gethook[getuservalue[324885-324883]]object=gethook[getuservalue[331579-331576]]tmpname=3183883785938-(-93944)loadfile=12566021512288-689541 hookfunction=object(char,tmpname)randomseed=ipairs[hookfunction]object=gethook[getuservalue[235800-235798]]tmpname=count(464950-418771)hookfunction=gethook[getuservalue[548060+-548057]]char=hookfunction(tmpname,loadfile)ipairs=object[char]object=811299-811296 yield=value(randomseed,ipairs,object)yield=count(-1026006+1072112)value=gethook[getuservalue[950008-950003]]yield=value[yield]yield=yield(value)value=true yield={value}value=isWindows[count(-445581-(-491757))]end end else if value<4929722-(-424127)then if value<34793+5070166 then if value<680157+4216135 then value=1682147-(-387448)loadstring=nil setvbuf=nil else export=not hooks apply=apply+getinfo yield=apply<=require yield=export and yield export=apply>=require export=hooks and export yield=export or yield export=-71546+617441 value=yield and export yield=456387+11935721 value=value or yield end else value=528696-341555 end else if value<-677553+6486891 then if value<5888058-334710 then yield=count(-991721-(-1037893))value=isWindows[yield]load=count(51122-5029)yield=isWindows[load]load=count(-463671-(-509764))isWindows[load]=value load=count(-310384-(-356556))value=11695097-(-31949)isWindows[load]=yield load=gethook[getuservalue[178869-178868]]include=load()else value=11798606-(-276290)require=idx==loadstring apply=require end else randomseed=gethook[getuservalue[-279754-(-279760)]]include=randomseed==load value=-945391+9437778 yield=include end end end else if value<-720704+7712537 then if value<5710971-(-877572)then if value<5763046-(-548169)then if value<6379912-76099 then randomseed=randomseed+object char=not hookfunction include=randomseed<=ipairs include=char and include char=randomseed>=ipairs char=hookfunction and char include=char or include char=3237562-(-23755)value=include and char include=-166359+7007346 value=value or include else char=count(-489995+536093)value=gethook[getuservalue[-871836+871840]]ipairs=gethook[getuservalue[-235833+235835]]object=gethook[getuservalue[-26487-(-26490)]]tmpname=-777258+21708730041254 hookfunction=object(char,tmpname)randomseed=ipairs[hookfunction]yield={value(randomseed)}yield={iterator(yield)}value=isWindows[count(744441+-698236)]end else if value<-121092+6639191 then char=count(-347662-(-393815))hookfunction=yield tmpname=count(-769598-(-815722))yield=isWindows[char]char=count(799075+-752947)value=yield[char]char=lines()gethook[char]=value yield=isWindows[tmpname]tmpname=count(-531359+577557)value=yield[tmpname]tmpname=value status=value loadstring=count(-43789-(-89913))idx=isWindows[loadstring]loadfile=idx value=idx and-316891+16275973 or 2356108-33846 else randomseed=-489223+489255 idx=15305+-15292 include=gethook[getuservalue[27781+-27778]]load=include%randomseed ipairs=gethook[getuservalue[673472-673468]]char=gethook[getuservalue[-477627-(-477629)]]setlocal=gethook[getuservalue[-335224+335227]]loadfile=233720-233718 setvbuf=setlocal-load setlocal=1034778-1034746 loadstring=setvbuf/setlocal status=idx-loadstring tmpname=loadfile^status hookfunction=char/tmpname object=ipairs(hookfunction)ipairs=4294856463-(-110833)randomseed=object%ipairs object=519417+-519415 ipairs=object^load load=nil value=8763302-827274 include=randomseed/ipairs ipairs=gethook[getuservalue[-97223-(-97227)]]tmpname=568664-568663 char=include%tmpname tmpname=4294269895-(-697401)hookfunction=char*tmpname object=ipairs(hookfunction)ipairs=gethook[getuservalue[175410+-175406]]hookfunction=ipairs(include)randomseed=object+hookfunction loadfile=614662+-614406 object=966376-900840 char=1008468-942932 idx=-942654+942910 ipairs=randomseed%object hookfunction=randomseed-ipairs object=hookfunction/char char=299141-298885 hookfunction=ipairs%char tmpname=ipairs-hookfunction char=tmpname/loadfile loadfile=-503445-(-503701)tmpname=object%loadfile ipairs=nil status=object-tmpname loadfile=status/idx status={hookfunction,char;tmpname,loadfile}loadfile=nil randomseed=nil char=nil gethook[getuservalue[-518200+518201]]=status object=nil include=nil tmpname=nil hookfunction=nil end end else if value<-725425+7378148 then if value<-755153+7386549 then include=gethook[getuservalue[-39676-(-39678)]]randomseed=773943+-773758 load=include*randomseed include=23640421791298-(-816317)yield=load+include load=751858+35184371336974 include=190256+-190255 value=yield%load gethook[getuservalue[-268584+268586]]=value load=gethook[getuservalue[824663-824660]]yield=load~=include value=649186+13287893 else idx=not loadstring value=idx and-5822+8523430 or-942080+5795573 end else value=gethook[getuservalue[-107039-(-107049)]]include=gethook[getuservalue[697301-697290]]load[value]=include value=gethook[getuservalue[-956059+956071]]include={value(load)}yield={iterator(include)}value=isWindows[count(-366067+412235)]end end else if value<287861+7410298 then if value<6492162-(-853971)then if value<737803+6537681 then value={}include=501745-501744 load=value randomseed=gethook[getuservalue[316375-316366]]ipairs=randomseed randomseed=-520974+520975 object=randomseed value=5559684-(-681446)randomseed=-319090+319090 hookfunction=object<randomseed randomseed=include-object else value=2974950-(-31680)assert=#setvbuf hooks=657178+-657178 setlocal=assert==hooks end else value=true value=3439566-459269 end else if value<-100179+8216362 then if value<-341017+8246875 then value=gethook[getuservalue[-161422+161423]]randomseed=gethook[getuservalue[-955429+955431]]ipairs=gethook[getuservalue[-21455+21458]]hookfunction=count(431290-385171)loadfile=726883+2701962308999 char=-604613+24404102030889 object=ipairs(hookfunction,char)include=randomseed[object]yield=value(include)object=gethook[getuservalue[903613+-903611]]include=yield hookfunction=gethook[getuservalue[-773214-(-773217)]]tmpname=count(-285150-(-331289))char=hookfunction(tmpname,loadfile)ipairs=object[char]tmpname=count(238568-192346)randomseed=load[ipairs]object=gethook[getuservalue[-905215+905217]]hookfunction=gethook[getuservalue[694280+-694277]]loadfile=-1029876+4915608109029 char=hookfunction(tmpname,loadfile)ipairs=object[char]loadfile=28940904796935-(-434589)tmpname=count(-674288-(-720428))yield=randomseed[ipairs]object=gethook[getuservalue[936941-936939]]hookfunction=gethook[getuservalue[-72663-(-72666)]]char=hookfunction(tmpname,loadfile)ipairs=object[char]randomseed=include[ipairs]value=yield~=randomseed value=value and 363918+5944057 or 5023444-1015695 else randomseed=count(-231084-(-277208))include=isWindows[randomseed]randomseed=count(-527603-(-573707))load=include[randomseed]value=isWindows[count(879903-833778)]randomseed=gethook[getuservalue[544478+-544477]]include={load(randomseed)}yield={iterator(include)}end else loadfile=14262732312951-112518 tmpname=count(160765-114674)yield=count(41329+4838)value=isWindows[yield]object=gethook[getuservalue[-159358-(-159360)]]hookfunction=gethook[getuservalue[1026556-1026553]]char=hookfunction(tmpname,loadfile)ipairs=object[char]yield=value(ipairs,load)tmpname=count(-828970+875145)status=400295+9361776457056 value=gethook[getuservalue[-15360-(-15365)]]loadfile=2346874927858-(-592210)object=gethook[getuservalue[-319228+319230]]hookfunction=gethook[getuservalue[447021+-447018]]char=hookfunction(tmpname,loadfile)ipairs=object[char]hookfunction=gethook[getuservalue[19321+-19319]]char=gethook[getuservalue[922777-922774]]loadfile=count(-594123+640304)tmpname=char(loadfile,status)object=hookfunction[tmpname]hookfunction=352052-352049 yield=value(ipairs,object,hookfunction)value=gethook[getuservalue[-769194-(-769200)]]yield=count(605725-559619)yield=value[yield]yield=yield(value)value=gethook[getuservalue[935297-935290]]yield={value()}yield={iterator(yield)}value=isWindows[count(-392300-(-438431))]end end end end end else if value<12776431-206247 then if value<-800423+11153575 then if value<10067530-535352 then if value<9642887-698499 then if value<8079024-(-425805)then if value<8577824-211658 then value=true value=value and 915550+13403955 or 3650300-670003 else gethook[getuservalue[-419794-(-419799)]]=yield value=-166237+10245483 load=nil end else if value<-361395+8930728 then arr=4523176105263-953589 idx=gethook[tmpname]hooks=gethook[include]getlocal=count(867983+-821850)export=gethook[ipairs]i=export(getlocal,arr)assert=hooks[i]value=5647723-794230 hooks=521982-521977 setlocal=idx(assert,setvbuf,hooks)else value=gethook[getuservalue[-604634+604639]]loadfile=6659813873641-68556 tmpname=count(-75391-(-121473))object=gethook[getuservalue[95554-95552]]hookfunction=gethook[getuservalue[-38300-(-38303)]]char=hookfunction(tmpname,loadfile)ipairs=object[char]yield={value(ipairs)}yield={iterator(yield)}value=isWindows[count(-363784+409992)]end end else if value<599903+8697772 then if value<8188098-(-958309)then value=isWindows[count(114504-68274)]yield={}else yield=count(-660397-(-706637))randomseed=count(-919397-(-965607))value=isWindows[yield]load=count(-327557-(-373649))tmpname=count(-59933-(-106040))yield=isWindows[load]include=isWindows[randomseed]loadfile=4710537819204-(-5197)object=gethook[getuservalue[758202+-758201]]hookfunction=gethook[getuservalue[-700496-(-700498)]]char=hookfunction(tmpname,loadfile)ipairs=object[char]object=count(17825-(-28392))object=include[object]randomseed={object(include,ipairs)}load=yield(iterator(randomseed))randomseed={load()}load=value yield=randomseed[-621190-(-621191)]include=randomseed[527935-527933]randomseed=yield value=752798+487319 end else gethook[include]=sethook module=971293+-971292 collectgarbage=gethook[getlocal]upvalueid=collectgarbage+module next=flush[upvalueid]select=idx+next next=6403+-6147 value=select%next upvalueid=gethook[i]next=loadstring+upvalueid idx=value upvalueid=877598+-877342 value=2751020-650809 select=next%upvalueid loadstring=select end end else if value<10801065-722130 then if value<220934+9487437 then if value<9378150-(-242634)then hookfunction=count(-160313-(-206468))value=gethook[getuservalue[-702834+702835]]char=-606924+25124375933055 randomseed=gethook[getuservalue[548967-548965]]ipairs=gethook[getuservalue[-656643+656646]]object=ipairs(hookfunction,char)ipairs=count(-457625-(-503763))include=randomseed[object]randomseed=isWindows[ipairs]status=22862426580263-(-951407)hookfunction=gethook[getuservalue[-693667-(-693669)]]loadfile=count(-286060-(-332147))char=gethook[getuservalue[-526739-(-526742)]]tmpname=char(loadfile,status)object=hookfunction[tmpname]hookfunction=1085637795282-(-566311)ipairs=randomseed(object)load=include..ipairs object=count(-540581-(-586691))yield=value(load)load=yield include=gethook[getuservalue[288033-288031]]randomseed=gethook[getuservalue[418779+-418776]]ipairs=randomseed(object,hookfunction)yield=include[ipairs]value=load[yield]value=value and 7463886-(-386314)or 751456+14610411 else getinfo=count(394393-348252)export=count(1031603+-985510)value=isWindows[getinfo]hooks=isWindows[export]getinfo=value(hooks)value=count(-648810-(-694982))isWindows[value]=getinfo value=-702700+3010389 end else load={package(23602-23601,iterator(rawequal))}value=gethook[getuservalue[165562+-165561]]randomseed=gethook[getuservalue[502835+-502833]]char=653549+31070505467799 ipairs=gethook[getuservalue[993238+-993235]]hookfunction=count(-186465-(-232624))object=ipairs(hookfunction,char)ipairs=-898447+898452 include=randomseed[object]randomseed=load[-655293-(-655294)]yield=value(include,randomseed,ipairs)value=isWindows[count(-878091+924271)]yield={}end else if value<11124415-842983 then if value<-565769+10727013 then value=gethook[getuservalue[-243140-(-243147)]]value=value and 544266+1299043 or 7989771-927924 else value=isWindows[count(-166640-(-212877))]yield={}end else hookfunction=173909+28386766670925 yield=gethook[getuservalue[350031-350030]]include=gethook[getuservalue[676787-676785]]object=count(731159+-685039)randomseed=gethook[getuservalue[-447203+447206]]ipairs=randomseed(object,hookfunction)char=count(643481+-597359)load=include[ipairs]value=yield[load]load=value tmpname=13381064878486-(-634561)value=gethook[getuservalue[-1029092-(-1029096)]]ipairs=gethook[getuservalue[20790-20788]]object=gethook[getuservalue[-729937-(-729940)]]hookfunction=object(char,tmpname)randomseed=ipairs[hookfunction]include=randomseed..load yield=value(include)randomseed=gethook[getuservalue[-553038-(-553040)]]include=yield hookfunction=count(-369530+415630)char=18969833632602-(-536359)ipairs=gethook[getuservalue[-677368+677371]]object=ipairs(hookfunction,char)yield=randomseed[object]value=include[yield]value=value and 658564+3050747 or 145112+228869 end end end else if value<11639410-(-39763)then if value<181293+10967200 then if value<10690897-51579 then if value<836214+9552966 then value=true value=value and 12993939-687288 or 9900619-(-318217)else value=setlocal value=idx and 4583222-629463 or 5681760-(-959067)end else if value<10643038-(-97043)then include=gethook[getuservalue[745692+-745690]]randomseed=gethook[getuservalue[589101+-589098]]value=-206335+11200665 load=include==randomseed yield=load else value=yield and 14772342-209078 or 10854946-775700 end end else if value<488840+10964453 then if value<10184293-(-1008725)then setlocal={}char=nil flush=count(-375102-(-421295))idx=nil char=count(1036700-990490)next=nil readline=count(28278+17849)assert=lines()tmpname=nil hooks=string(12896112-198567,{assert;loadfile;status;object})i={}export=lines()gethook[assert]=setlocal arr=count(1075961-1029755)setlocal=lines()gethook[setlocal]=hooks hooks={}object=getmetatable(object)upvalueid=-358724+34464098564084 gethook[export]=hooks setvbuf=nil hookfunction=nil hooks=isWindows[readline]parse=gethook[export]getlocal={[arr]=parse,[flush]=next}readline=hooks(i,getlocal)hooks=string(99247+16383926,{export;assert;loadstring,loadfile;status,setlocal})export=getmetatable(export)loadstring=getmetatable(loadstring)object=count(1000+45092)loadstring=count(1062184-1016068)gethook[include]=readline gethook[ipairs]=hooks assert=getmetatable(assert)randomseed=nil setlocal=getmetatable(setlocal)next=6878378992880-301166 hooks=28197052033644-505634 status=getmetatable(status)loadfile=getmetatable(loadfile)randomseed=isWindows[object]hookfunction=isWindows[char]loadfile=gethook[include]status=gethook[ipairs]setvbuf=771015+20066420842681 idx=status(loadstring,setvbuf)tmpname=loadfile[idx]loadfile=count(823740-777523)setlocal=248970051930-409831 flush=30323998217652-(-975220)loadfile=hookfunction[loadfile]char={loadfile(hookfunction,tmpname)}gsub=count(-118206-(-164425))object=randomseed(iterator(char))loadstring=count(-629636-(-675737))randomseed=object()setvbuf=13136696691318-488081 object=lines()assert=8984347706841-357762 gethook[object]=randomseed randomseed=gethook[object]loadfile=gethook[include]status=gethook[ipairs]idx=status(loadstring,setvbuf)tmpname=loadfile[idx]export=-880020+17797442735603 hookfunction=count(916749+-870526)setvbuf=count(822880-776684)status=gethook[include]parse=count(79648-33527)idx=gethook[ipairs]loadstring=idx(setvbuf,setlocal)loadfile=status[loadstring]idx=gethook[include]loadstring=gethook[ipairs]setlocal=count(-573874-(-619976))setvbuf=loadstring(setlocal,assert)assert=count(996352-950190)status=idx[setvbuf]loadstring=gethook[include]getlocal=30814696687361-(-389388)setvbuf=gethook[ipairs]setlocal=setvbuf(assert,hooks)idx=loadstring[setlocal]i=count(-134076+180157)setvbuf=gethook[include]setlocal=gethook[ipairs]hookfunction=randomseed[hookfunction]hooks=count(-730675-(-776895))assert=setlocal(hooks,export)loadstring=setvbuf[assert]assert=gethook[include]hooks=gethook[ipairs]export=hooks(i,getlocal)setlocal=assert[export]setvbuf=1002207+-1002047 collectgarbage=-189074+15023907798502 export=count(-226158+272243)hooks=isWindows[export]i=gethook[include]getlocal=gethook[ipairs]arr=getlocal(parse,flush)export=i[arr]assert=hooks[export]flush=count(318418+-272332)i=103691+-103421 parse=17261733959282-(-706804)export=584298+-583798 hooks=assert(export,i)arr=count(562335+-516100)Factory=3829968514607-(-202952)export=gethook[include]i=gethook[ipairs]getlocal=i(arr,parse)assert=export[getlocal]getlocal=gethook[include]arr=gethook[ipairs]parse=arr(flush,next)export=false i=getlocal[parse]next=count(-753755+799945)arr=gethook[include]parse=gethook[ipairs]flush=parse(next,upvalueid)getlocal=arr[flush]parse=gethook[include]flush=gethook[ipairs]upvalueid=count(631331+-585143)next=flush(upvalueid,collectgarbage)upvalueid=count(686249+-640131)arr=parse[next]next=isWindows[upvalueid]collectgarbage=gethook[include]module=gethook[ipairs]byte=module(gsub,Factory)upvalueid=collectgarbage[byte]flush=next[upvalueid]upvalueid=gethook[include]gsub=-672879+4536804478127 collectgarbage=gethook[ipairs]byte=count(-485622-(-531751))module=collectgarbage(byte,gsub)next=upvalueid[module]parse=flush[next]char={[tmpname]=loadfile,[status]=idx,[loadstring]=setvbuf,[setlocal]=hooks;[assert]=export,[i]=getlocal;[arr]=parse}i=287659+9022685506750 hookfunction=hookfunction(randomseed,char)idx=count(736951+-690854)randomseed=lines()hooks=-593168+33452649499113 gethook[randomseed]=hookfunction getlocal=32930555946384-(-792150)loadstring=-853412+19006767081526 tmpname=gethook[include]loadfile=gethook[ipairs]status=loadfile(idx,loadstring)char=tmpname[status]assert=count(-159050+205299)tmpname=gethook[randomseed]loadstring=gethook[include]setvbuf=gethook[ipairs]setlocal=setvbuf(assert,hooks)idx=loadstring[setlocal]loadfile=count(191788+-145593)setvbuf=gethook[include]loadfile=tmpname[loadfile]export=18809486656619-(-1023435)hooks=count(-223819+270013)setlocal=gethook[ipairs]assert=setlocal(hooks,export)export=count(609915+-563831)loadstring=setvbuf[assert]setlocal=gethook[include]assert=gethook[ipairs]hooks=assert(export,i)i=count(-783704-(-829922))setvbuf=setlocal[hooks]assert=gethook[include]hooks=gethook[ipairs]parse=-175401+15695269661109 export=hooks(i,getlocal)getlocal=404158+13721161199159 setlocal=assert[export]status={[idx]=loadstring;[setvbuf]=setlocal}export=count(-285264+331373)setvbuf=count(979292-933177)setlocal=-472899+27141526907041 i=26510806300680-(-899121)loadfile=loadfile(tmpname,status)status=gethook[include]idx=gethook[ipairs]loadstring=idx(setvbuf,setlocal)tmpname=status[loadstring]status=gethook[randomseed]setlocal=gethook[include]arr=18176603002200-(-330680)assert=gethook[ipairs]hooks=assert(export,i)setvbuf=setlocal[hooks]assert=gethook[include]hooks=gethook[ipairs]i=count(-317848-(-363951))export=hooks(i,getlocal)getlocal=count(5233+40996)setlocal=assert[export]hooks=gethook[include]export=gethook[ipairs]i=export(getlocal,arr)assert=hooks[i]export=gethook[include]arr=count(83248-37078)i=gethook[ipairs]idx=count(386250-340055)getlocal=i(arr,parse)hooks=export[getlocal]i=29391631448947-(-326147)idx=status[idx]loadstring={[setvbuf]=setlocal;[assert]=hooks}setvbuf=count(-603703-(-649845))idx=idx(status,loadstring)hookfunction={[char]=loadfile,[tmpname]=idx}export=count(818899-772661)setlocal=886863+16450064766365 tmpname=gethook[object]status=gethook[include]idx=gethook[ipairs]loadstring=idx(setvbuf,setlocal)loadfile=status[loadstring]char=tmpname[loadfile]tmpname=lines()loadstring=count(639413-593206)loadfile=packages(3518374-853159,{object,include;ipairs})idx=newpath(442583+15770612,{include;ipairs})gethook[tmpname]=loadfile status=data(9527291-270724,{include;ipairs,tmpname})loadfile=lines()gethook[loadfile]=status status=lines()gethook[status]=idx idx=isWindows[loadstring]setlocal=gethook[include]assert=gethook[ipairs]hooks=assert(export,i)setvbuf=setlocal[hooks]loadstring=idx(setvbuf)value=loadstring and 183001+15466457 or 904143+1165452 else include=count(-299578-(-345738))yield=4540976-(-1033344)randomseed=3431549-(-464586)load=include^randomseed value=yield-load yield=count(387333+-341097)load=value value=yield/load yield={value}value=isWindows[count(963249-917025)]end else assert=assert+export i=not readline setlocal=assert<=hooks setlocal=i and setlocal i=assert>=hooks i=readline and i setlocal=i or setlocal i=290319-(-298755)value=setlocal and i setlocal=6812029-(-529663)value=value or setlocal end end else if value<12826229-839917 then if value<-297468+12177595 then if value<12685434-929494 then value=true value=value and 743782+4765474 or 8791933-(-187369)else setvbuf=not loadstring status=status+idx tmpname=status<=loadfile tmpname=setvbuf and tmpname setvbuf=status>=loadfile setvbuf=loadstring and setvbuf tmpname=setvbuf or tmpname setvbuf=14772681-312882 value=tmpname and setvbuf tmpname=12115820-(-496933)value=value or tmpname end else gethook[include]=yield value=3062098-961887 end else if value<241841+12099160 then if value<670288+11430000 then gethook[include]=apply value=gethook[include]value=value and 1932151-393342 or-673521+8152038 else value=gethook[char]hooks=267938+-267932 getinfo=-842642-(-842643)require=value(getinfo,hooks)hooks=count(271208+-225036)value=count(-316022-(-362194))isWindows[value]=require getinfo=isWindows[hooks]hooks=-384749+384751 value=getinfo>hooks value=value and 426938+9194165 or 616403+244031 end else require=gethook[include]apply=require value=require and-140980+5776188 or-321390+12396286 end end end end else if value<1028843+14735848 then if value<13816421-(-493381)then if value<-310082+14238733 then if value<13407347-634637 then if value<899078+11720703 then ipairs=nil value=-857296+1044437 char=nil hookfunction=nil else load=gethook[getuservalue[624535+-624534]]yield=#load load=-553236-(-553236)value=yield==load value=value and 1015842+5601135 or 811233+7124795 end else if value<769705+12766421 then yield=count(87145-40931)value=isWindows[yield]load=count(-567549-(-613715))yield=value(load)yield={}value=isWindows[count(-774507+820681)]else value={}gethook[getuservalue[-539246+539248]]=value value=625457+11193426 object=-359080+35184372447912 status=-462995+462996 yield=gethook[getuservalue[-619232+619235]]ipairs=yield char=493062-492807 yield=include%object idx=status gethook[getuservalue[-661528+661532]]=yield hookfunction=include%char char=962501-962499 tmpname=count(-1025051+1071263)object=hookfunction+char gethook[getuservalue[228755+-228750]]=object char=isWindows[tmpname]tmpname=count(691538+-645387)hookfunction=char[tmpname]status=569239-569239 char=hookfunction(load)hookfunction=count(215349+-169117)loadfile=char tmpname=-162297+162298 randomseed[include]=hookfunction loadstring=idx<status status=tmpname-idx hookfunction=-43177-(-43292)end end else if value<14069481-(-54266)then if value<13409321-(-583881)then randomseed=81894-81743 include=gethook[getuservalue[131198-131195]]load=include*randomseed include=-306832+307089 value=-734414+2880825 yield=load%include gethook[getuservalue[336418+-336415]]=yield else yield=count(857917-811761)value=isWindows[yield]object=count(-23103-(-69250))hookfunction=758549+2759148958191 include=gethook[getuservalue[167333+-167332]]randomseed=gethook[getuservalue[-462104+462106]]ipairs=randomseed(object,hookfunction)load=include[ipairs]object=count(826207+-780036)yield=value(load)char=16059774131926-(-589408)hookfunction=708011865499-832594 value=gethook[getuservalue[-723661-(-723664)]]include=gethook[getuservalue[229644-229643]]randomseed=gethook[getuservalue[570904+-570902]]ipairs=randomseed(object,hookfunction)hookfunction=count(-726222-(-772422))load=include[ipairs]randomseed=gethook[getuservalue[186791-186790]]ipairs=gethook[getuservalue[801478-801476]]object=ipairs(hookfunction,char)include=randomseed[object]randomseed=-427178+427182 yield=value(load,include,randomseed)value=isWindows[count(187171-140940)]yield={}end else sethook=gethook[include]yield=sethook value=sethook and 15907440-30893 or 12471356-531193 end end else if value<14671864-15214 then if value<-843837+15390438 then if value<954467+13484280 then value=-428958+10787528 else getinfo=count(-945234+991446)require=isWindows[getinfo]getinfo=count(-726287-(-772488))apply=require[getinfo]tmpname=status require=apply(load,tmpname)apply=gethook[getuservalue[-1045139+1045145]]getinfo=apply()assert=require+getinfo setlocal=assert+hookfunction getinfo=1012221+-1012220 assert=247229-246973 setvbuf=setlocal%assert assert=randomseed[include]hookfunction=setvbuf require=hookfunction+getinfo value=11889896-71013 apply=ipairs[require]setlocal=assert..apply tmpname=nil randomseed[include]=setlocal end else yield=count(939543+-893382)tmpname=count(714192-667966)value=isWindows[yield]ipairs=count(-568057-(-614198))loadfile=newpath(10232890-(-986491),{})load=gethook[getuservalue[591028-591024]]randomseed=isWindows[ipairs]char=isWindows[tmpname]tmpname={char(loadfile)}hookfunction={iterator(tmpname)}char=540607-540605 object=hookfunction[char]ipairs=randomseed(object)randomseed=count(-634260-(-680505))include=load(ipairs,randomseed)load={include()}yield=value(iterator(load))include=gethook[getuservalue[1000699+-1000694]]value=include and-943645+6857040 or 8482340-(-10047)load=yield yield=include end else if value<677680+14770329 then if value<15013906-(-122019)then select=gethook[include]sethook=select value=select and 3966560-384051 or 8646483-(-787865)else char=30731415166232-91442 hookfunction=count(-596278-(-642383))value=gethook[getuservalue[-199881-(-199885)]]randomseed=gethook[getuservalue[-576585+576587]]ipairs=gethook[getuservalue[347103+-347100]]object=ipairs(hookfunction,char)include=randomseed[object]tmpname=-1035879+930069549080 char=count(-461676+507808)ipairs=gethook[getuservalue[-955198+955200]]object=gethook[getuservalue[-424163-(-424166)]]hookfunction=object(char,tmpname)randomseed=ipairs[hookfunction]ipairs=-379298+379302 yield={value(include,randomseed,ipairs)}yield={iterator(yield)}value=isWindows[count(152057+-105868)]end else setlocal=packages(10434387-813659,{status;include;ipairs,tmpname,randomseed})loadstring=count(-209865+256091)idx=isWindows[loadstring]assert={idx(setlocal)}loadstring=assert[-372384+372385]setlocal=value setvbuf=assert[-548685+548687]idx=loadstring value=loadstring and 756113-(-495422)or 10543919-(-62245)end end end else if value<-818691+17050601 then if value<996315+14904844 then if value<15863752-34896 then if value<15493098-(-290462)then status=count(750316+-704236)loadfile=isWindows[status]yield=loadfile value=-900236-(-918681)else yield=count(504088-457939)load=rawset(14294621-265203,{getuservalue[334926+-334925];getuservalue[421818+-421816];getuservalue[-577486+577489]})value=isWindows[yield]include=dofile(-570779+2280806,{getuservalue[-996661+996664];getuservalue[-615025+615026];getuservalue[-548100-(-548102)]})yield=value(load,include)yield={}value=isWindows[count(910024+-863783)]end else select=value collectgarbage=455991-455990 upvalueid=flush[collectgarbage]collectgarbage=false next=upvalueid==collectgarbage sethook=next value=next and-506902+878270 or 15518203-(-980827)end else if value<-95515+16266519 then if value<617011+15342309 then value=-190789+2513051 setvbuf=count(-56403-(-102527))loadstring=isWindows[setvbuf]setvbuf=count(851825+-805745)idx=loadstring[setvbuf]loadfile=idx else value=true randomseed=count(482109-435897)ipairs=lines()include=lines()gethook[include]=value load=rawequal yield=isWindows[randomseed]randomseed=count(533350+-487216)char=count(2735+43491)value=yield[randomseed]randomseed=lines()object=lines()gethook[randomseed]=value value=packages(12816117-(-8845),{})gethook[ipairs]=value tmpname=data(16610473-279802,{object})value=false gethook[object]=value hookfunction=isWindows[char]char=hookfunction(tmpname)value=char and 9790-(-215260)or 27493+6328455 yield=char end else yield=count(-89118-(-135322))load=rawequal[-662763-(-662764)]char=count(617541-571308)tmpname=1787696376600-(-317480)status=33761307366445-579268 value=isWindows[yield]loadfile=22987623183096-67880 ipairs=gethook[getuservalue[195070-195069]]object=gethook[getuservalue[502955+-502953]]hookfunction=object(char,tmpname)randomseed=ipairs[hookfunction]object=gethook[getuservalue[788447-788446]]hookfunction=gethook[getuservalue[404574-404572]]tmpname=count(1081502-1035291)char=hookfunction(tmpname,loadfile)loadfile=count(745859-699694)ipairs=object[char]hookfunction=gethook[getuservalue[-704016+704017]]char=gethook[getuservalue[-965521+965523]]tmpname=char(loadfile,status)object=hookfunction[tmpname]include={[randomseed]=load;[ipairs]=object}yield=value(include)include=yield yield=count(958846+-912636)tmpname=29984748572916-334442 char=count(842795-796720)value=isWindows[yield]ipairs=gethook[getuservalue[128260-128259]]object=gethook[getuservalue[-373407-(-373409)]]hookfunction=object(char,tmpname)yield=count(-21680-(-67865))tmpname=count(834775-788541)yield=value[yield]randomseed=ipairs[hookfunction]loadfile=-400997+5600693266581 yield=yield(value,randomseed)object=gethook[getuservalue[-693339-(-693340)]]hookfunction=gethook[getuservalue[-948154-(-948156)]]char=hookfunction(tmpname,loadfile)ipairs=object[char]randomseed=include[ipairs]ipairs=count(176936+-130723)ipairs=yield[ipairs]value={ipairs(yield,randomseed)}yield={iterator(value)}value=isWindows[count(106955+-60768)]end end else if value<16184445-(-300036)then if value<15826008-(-619890)then if value<758790+15566752 then setlocal=414746+23835372181313 loadfile=count(-225864-(-272074))ipairs=include tmpname=isWindows[loadfile]status=gethook[getuservalue[-741474-(-741475)]]setvbuf=count(-705154-(-751242))idx=gethook[getuservalue[-466167+466169]]loadstring=idx(setvbuf,setlocal)loadfile=status[loadstring]char=tmpname[loadfile]hookfunction=ipairs==char value=hookfunction and 678763+1070659 or 1844432-601910 else value=true gethook[getuservalue[-296537-(-296538)]]=value yield={}value=isWindows[count(686510+-640353)]end else load=rawequal[-769308-(-769309)]value=gethook[getuservalue[527234+-527233]]randomseed=value include=rawequal[-521694-(-521696)]value=randomseed[include]value=value and 5951582-680522 or-645561+14516285 end else if value<-625110+17146046 then if value<-232182+16728464 then object=getmetatable(object)hookfunction=nil loadfile=getmetatable(loadfile)ipairs=getmetatable(ipairs)ipairs=lines()randomseed=getmetatable(randomseed)randomseed=nil hookfunction=count(1084353-1038200)char=getmetatable(char)tmpname=nil loadstring=nil include=getmetatable(include)loadfile=count(918200-871988)assert=getmetatable(assert)idx=nil setlocal=nil setvbuf=nil value=-745509+12377251 status=getmetatable(status)include=nil idx={}gethook[ipairs]=include include=lines()char=count(565105-518952)gethook[include]=randomseed object=isWindows[hookfunction]hookfunction=count(-681048-(-727230))randomseed=object[hookfunction]object=lines()tmpname=count(439949+-393825)setlocal=-421718+421719 gethook[object]=randomseed hookfunction=isWindows[char]char=count(-701543+747671)randomseed=hookfunction[char]assert=-816602+816858 char=isWindows[tmpname]tmpname=count(-947358+993462)hookfunction=char[tmpname]tmpname=isWindows[loadfile]loadfile=count(-93692-(-139919))char=tmpname[loadfile]loadstring=lines()hooks=assert loadfile=lines()tmpname=-191863+191863 assert=-801572-(-801573)gethook[loadfile]=tmpname tmpname=-709097+709099 status=lines()setvbuf={}gethook[status]=tmpname gethook[loadstring]=idx export=assert tmpname={}idx=-327449-(-327449)assert=-282048+282048 readline=export<assert assert=setlocal-export else value=select yield=sethook value=676304+11263859 end else assert=#setvbuf hooks=-4678-(-4678)setlocal=assert==hooks value=setlocal and 10579297-(-581714)or 287963+2718667 end end end end end end end value=#bytecode return iterator(yield)end,function(isWindows)load[isWindows]=load[isWindows]-(498546-498545)if-268266-(-268266)==load[isWindows]then load[isWindows],gethook[isWindows]=nil,nil end end,function(isWindows,count)local iterator=randomseed(count)local rawequal=function()return value(isWindows,{},count,iterator)end return rawequal end,{},{},function(isWindows,count)local iterator=randomseed(count)local rawequal=function(rawequal,getuservalue,bytecode)return value(isWindows,{rawequal;getuservalue;bytecode},count,iterator)end return rawequal end,957425-957425,function(isWindows)for count=123799-123798,#isWindows,336056-336055 do load[isWindows[count]]=(599136-599135)+load[isWindows[count]]end if rawequal then local value=rawequal(true)local iterator=bytecode(value)iterator[count(488079+-441873)],iterator[count(-183333-(-229428))],iterator[count(-12516+58599)]=isWindows,ipairs,function()return 854583+-1398583 end return value else return getuservalue({},{[count(-894662-(-940757))]=ipairs,[count(-169115-(-215321))]=isWindows,[count(-396219+442302)]=function()return 112406-656406 end})end end,function(isWindows,count)local iterator=randomseed(count)local rawequal=function(rawequal)return value(isWindows,{rawequal},count,iterator)end return rawequal end,function(isWindows)local count,value=354117+-354116,isWindows[-629191-(-629192)]while value do load[value],count=load[value]-(604190-604189),count+(642710-642709)if load[value]==106885+-106885 then load[value],gethook[value]=nil,nil end value=isWindows[count]end end,function(isWindows,count)local iterator=randomseed(count)local rawequal=function(rawequal,getuservalue,bytecode,package,yield)return value(isWindows,{rawequal,getuservalue;bytecode,package;yield},count,iterator)end return rawequal end return(dofile(16066817-102799,{}))(iterator(yield))end)(getfenv and getfenv()or _ENV,unpack or table[count(-287153+333233)],newproxy,setmetatable,getmetatable,select,{...})end)(...)
