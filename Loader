return(function(...)local call={"\067\048\088\082\108\110\083\055\079\113\103\084\110\088\090\072\116\109\119\061","\102\079\080\118\115\122\082\052\113\119\061\061";"\054\112\104\117\117\097\122\061";"\106\053\107\106\083\111\102\106\054\109\084\098\043\119\061\061";"\068\049\102\098\103\067\102\109\103\066\061\061";"\083\097\116\047\079\085\061\061","\086\055\082\085\052\047\110\120\108\069\110\066\106\107\097\116\065\098\075\066\098\071\047\120\072\114\090\098\043\083\074\120\066\110\071\043\109\049\087\082\118\085\061\061","\068\100\057\047\076\114\116\115\079\067\080\051\067\100\122\087\067\067\118\061","\098\120\068\066\111\071\065\084\099\057\066\116\073\119\061\061","\122\077\069\099\102\111\071\109\115\066\075\090\082\105\119\047\115\053\050\109\101\052\068\098\100\115\099\098\079\122\081\117\081\102\080\048\118\053\066\068\048\068\115\043\097\081\069\074\110\097\120\113\089\086\051\110\071\051\107\052\090\083\047\052\119\070\119\066\115\099\048\066\049\077\119\043\085\083\108\053\111\067\122\078\068\107\115\049\057\105\079\110\103\104\109\051\106\078\050\088\077\099\049\117\085\116\048\109\066\050\072\107\117\114\069\089\106\122\061\061";"\075\057\120\067\081\119\061\061";"\081\076\055\108\106\073\087\061";"\102\067\098\114\106\048\102\050\068\047\118\109\052\109\071\105\054\119\061\061";"\114\110\050\098";"\106\111\054\087\068\071\103\088\103\066\061\061","\086\070\079\113\088\052\066\061";"\112\110\102\049\110\049\087\105\103\071\101\114\119\102\090\047\116\119\061\061","\097\114\068\047\088\122\065\056\097\077\071\111\069\068\111\087\049\088\065\072\107\073\102\116\109\097\079\110\082\122\053\078\088\104\078\079\120\121\067\053\109\110\107\118\070\073\108\083\086\072\068\102\119\090\081\109\054\104\085\047\090\066\065\078\100\117\055\121\102\054\117\079\067\117\105\115\105\065\100\071\075\070\101\066\071\065\120\065\108\070\103\055\102\099\122\061","\102\100\075\089\116\043\102\108\112\081\118\047","\043\086\116\097\112\122\061\061","\119\067\054\100\119\113\102\087\103\114\057\099";"\112\073\084\116\121\079\087\114\054\104\111\051\104\054\113\100\055\099\112\097\121\117\112\113\068\098\077\117\055\055\080\083\053\084\078\108\073\053\110\070\076\047\051\067\121\122\061\061","\098\050\120\054\047\072\115\103\089\070\081\076\070\079\087\061";"\043\049\057\087\108\067\083\075","\120\072\048\114\086\098\097\050\086\098\114\050\074\047\107\057\122\097\082\069\084\050\072\080\102\076\116\087\085\103\081\087\085\057\084\065\101\109\052\112\048\068\048\077\066\055\120\050\113\090\048\049\089\085\082\072\122\080\097\109\117\068\072\086\080\106\048\110\112\052\088\083\103\075\118\112\121\105\110\047\069\048\047\116\109\065\052\097\048\089\055\078\116\088\077\080\108\075\116\109\117\065\078\088\048\053\043\087\113\055\082\071\085\048\085\104\049\097\055\077\072\067\075\088\082\114\110\107\086\056\079\098\071\111\097\070\067\071\087\073\110\056\097\072\103\056\087\082\069\085\061\061","\097\083\069\100\086\068\105\061","\108\097\080\098\043\049\078\088\108\043\103\075\112\071\079\105\108\066\061\061","\120\104\072\068\115\109\099\077\110\116\056\090\110\102\078\056\054\086\115\103\070\103\084\071\068\117\085\080\047\114\104\089\102\073\106\101\111\120\071\079\117\067\074\100\119\120\087\110\075\084\107\077\065\048\100\119\078\113\119\050\071\083\122\074\115\102\115\068\078\111\056\099\106\119\061\061","\081\090\114\105\105\120\117\122\106\071\082\115\050\114\111\070\067\068\089\082\087\097\054\098\105\050\069\074\043\055\120\073\107\114\076\056\068\088\112\067\065\085\051\109\087\066\061\061";"\121\050\083\069\054\055\069\071\112\066\079\061";"\075\078\048\081\104\067\055\079\052\118\102\066\069\116\108\066\098\097\106\057\079\074\086\051\053\074\100\054\078\066\061\061";"\069\053\085\053\054\066\061\061","\048\111\115\117\065\114\087\100\100\106\106\112\104\113\119\074\083\054\090\113\119\115\055\107\121\117\050\071\117\082\074\106\054\078\072\082\097\057\072\101\118\114\100\084\099\073\048\068\112\111\053\081\101\112\074\076\083\057\118\071\077\071\048\056\101\099\101\081\115\099\066\112\120\083\101\084\043\114\048\086\066\077\072\052\103\075\074\088\043\113\071\047\085\049\121\112\047\087\083\116\119\077\079\089\097\115\104\103\066\056\120\115\087\106\115\089\043\066\109\071\122\079\056\098\108\056\119\076\051\082\069\053\111\074\069\056\103\103\057\117\112\066\088\097\068\113\113\100\101\103\074\098\071\050\049\071\104\066\068\070\111\089\051\066";"\098\047\116\108\071\109\081\081\100\122\061\061","\050\084\050\047\112\088\102\113\043\043\054\078\102\111\084\075";"\103\088\104\105\116\048\101\083\103\113\116\118\103\110\104\071\076\119\061\061";"\074\108\110\061";"\098\051\100\056\065\065\055\076\121\043\099\047\081\088\120\102\114\099\083\049\122\109\113\111\087\105\089\097\070\057\106\102\087\078\073\106\097\099\071\100\052\099\051\052\100\056\099\077\112\067\098\114\085\122\086\111\083\057\116\057\116\082\050\075\097\118\116\116\084\119\102\074\116\052\073\081\073\106\082\106\076\049\114\105\054\076\053\116\114\117\075\052\105\083\078\074\097\103\105\120\078\066\119\121\109\057\089\087\076\112\087\113\048\108\078\067\070\072\082\103\115\105\122\101\077\088\069\066\078\085\078\089\043\053\102\098\065\070\100\089\067\051\068\114\114\090\074\067\086\111\085\090\107\119\061\061","\068\049\102\078\052\097\083\088";"\076\117\085\088\083\055\080\101\076\085\061\061";"\073\043\081\110\076\066\061\061";"\081\080\069\061";"\103\097\090\101\103\114\102\049\108\067\098\088","\043\109\103\105\054\113\090\073\108\100\047\114\043\047\083\073";"\068\056\102\087\052\067\102\087\079\048\054\104\079\049\098\088";"\072\085\115\085";"\049\110\087\049\051\089\072\043\121\066\061\061","\085\107\052\104\105\102\073\085\054\067\048\076\108\122\061\061";"\119\050\056\084\117\089\108\057\066\070\071\061","\079\067\083\121\043\109\054\104\083\111\080\105";"\068\097\054\051\108\067\075\113","\079\109\054\055\068\056\119\056\110\084\107\048\083\102\083\118\110\122\061\061";"\081\111\052\105\106\080\051\105\079\067\074\073\116\047\067\049\070\067\074\112\100\112\081\111\122\103\078\112\077\085\085\117\084\083\070\118\068\078\055\066\105\105\089\114\122\119\053\049\053\054\097\102\106\097\051\043\105\100\106\098\090\103\112\082\114\106\115\057\070\055\076\055\049\067\079\074\079\066\083\049\074\120\083\085\080\100\085\108\117\089\065\076\104\122\105\050\106\114\075\117\106\112\053\110\121\075\049\050\112\120\050\076\104\119\122\100\083\118\116\078\114\110\101\075\083\082\075\078\080\070\053\113","\079\069\105\073\077\065\105\113\122\122\061\061","\108\048\116\049\108\067\098\088","\083\069\083\104\050\067\113\116\069\055\107\083\069\119\061\061","\112\081\107\115\119\102\083\047\052\048\102\102\108\084\088\111\112\113\066\061","\081\080\108\122\066\050\113\082\067\119\061\061","\043\099\071\119\076\106\079\115\085\069\067\053\057\084\069\098\076\055\085\043\099\119\061\061";"\065\116\101\069\109\108\102\053\088\068\112\097\077\082\069\061","\115\051\075\099\054\086\079\047\106\109\108\072\087\043\080\081\112\047\081\048\116\051\083\099\073\115\112\111\075\082\114\053\055\076\084\110\056\077\053\097\050\053\120\080\066\101\069\112\051\053\099\119\054\112\115\075\119\085\055\086\100\069\104\098\097\069\057\117\075\113\056\072\049\099\114\103\109\098\052\087\110\073\056\079\105\107\097\077\098\056\112\087\088\089\048\119\056\099\085\065\057\119\061\061";"\122\066\073\090\056\104\043\050\088\074\122\061","\116\043\110\056\043\097\054\117\043\048\101\082\079\113\083\102\110\049\119\061","\110\081\111\053\078\066\061\061";"\085\054\120\075\056\080\057\101\100\066\061\061";"\087\104\084\065\116\110\080\061","\052\081\071\061","\108\087\088\101\102\047\107\043\052\049\104\055\043\100\075\073\052\043\071\061","\119\067\054\100\106\067\075\122\103\048\119\061","\076\067\110\056\068\100\080\109\043\087\116\097\106\114\047\076\068\088\071\061","\050\055\115\119\078\049\106\119\083\101\119\050\078\066\061\061","\048\047\057\101\052\049\054\088\112\066\061\061","\043\100\078\047\067\100\102\120\052\102\103\109\110\087\088\111";"\085\120\110\073\104\103\050\061";"\068\049\084\099\083\114\057\078";"\079\056\104\104\068\085\061\061";"\112\111\107\053\079\067\098\115","\106\088\116\121\043\100\054\088\079\056\057\100\083\119\061\061","\119\097\090\088\079\048\054\088\102\056\088\099\083\114\057\097","\073\069\119\083\047\054\074\109\099\067\080\097\052\085\114\109\053\055\069\090\120\077\082\049\067\088\073\069\103\098\086\074\082\110\108\105\097\051\055\074\070\086\111\101\071\112\080\068\117\098\120\111\077\121\077\097\070\102\089\108\057\110\054\107\066\119\108\120\112\068\115\089\120\084\076\069\043\087\075\114\099\051\088\066\066\116\099\084\066\097\053\078\054\116\066\057\102\066\061\061";"\083\048\090\051\052\097\118\061";"\084\098\057\057\101\106\098\072\109\055\118\051\049\057\079\090\111\088\113\113\080\122\061\061","\052\114\102\099";"\050\084\101\048\118\085\061\061";"\118\121\048\081\108\121\105\061","\068\056\102\087\079\056\098\101\068\114\090\082\079\048\090\100";"\085\076\098\048\089\043\084\118\112\085\061\061","\076\080\111\117\066\101\067\102\078\050\076\050\075\057\105\061";"\054\114\102\109\103\111\090\082\112\119\061\061","\119\067\054\100\102\114\084\117";"\110\056\102\115\083\067\116\087\102\114\084\117";"\087\110\116\122\114\081\118\061","\106\111\116\056\108\043\054\072\054\088\083\110\050\114\054\084\108\066\061\061";"\086\056\114\098\069\053\110\061","\117\108\080\053\089\073\065\119\067\075\057\122\099\119\061\061";"\083\049\098\082\052\097\118\061";"\080\104\051\084","\077\090\117\101\088\043\068\077\053\085\061\061","\106\074\047\117\119\079\052\087\100\070\071\061";"\052\081\118\061";"\085\071\114\076\111\069\109\066\086\098\075\078\103\119\061\061","\052\114\057\104\083\111\116\087\068\049\088\099\083\122\061\061";"\103\114\084\117\052\114\110\061","\117\070\049\112\043\085\061\061","\103\114\057\109\103\111\090\101\052\049\068\061","\119\067\054\100\110\056\102\053\103\114\088\082\052\085\061\061","\079\113\107\050\116\049\101\055\119\087\080\051\116\048\103\116\106\085\061\061";"\118\105\056\087\111\086\085\061";"\087\065\049\077\115\119\061\061","\084\055\067\098\052\085\061\061";"\068\082\087\052\078\117\083\116\049\122\061\061","\112\088\083\089\083\111\102\117\043\056\083\075\052\100\078\111","\053\073\066\108\057\049\104\082\081\102\118\057\116\121\119\061","\102\110\054\101\052\043\118\061","\085\105\109\088\098\071\112\104\050\100\074\116\105\122\061\061";"\102\067\071\056\043\087\057\047\102\100\090\121\043\097\116\048\050\056\071\061";"\048\047\057\115\083\067\105\061","\052\122\067\081\082\066\061\061","\079\056\057\099\079\056\084\087";"\048\047\057\113\079\122\061\061";"\079\053\104\108\119\067\101\072\102\110\090\084";"\069\074\047\050\051\122\061\061","\102\114\084\078\068\114\102\051\118\071\054\088\103\114\102\053\103\114\102\100\118\119\061\061";"\054\067\075\047\052\119\061\061";"\104\056\073\073\086\106\118\061";"\101\105\112\069";"\047\105\090\043\118\049\081\118\105\122\061\061","\054\056\049\073\108\085\061\061";"\119\071\114\086\113\078\053\117\043\052\083\049\081\082\113\049\110\121\122\117\079\066\061\061";"\043\114\075\090\076\048\116\115\106\111\090\049\106\053\050\047\102\066\061\061","\054\056\102\087\110\056\102\051\103\049\088\053\083\119\061\061";"";"\079\081\115\049";"\055\065\098\051\051\088\068\061","\072\086\070\110\105\112\052\077\053\099\119\110\079\101\084\118\054\118\116\088\074\050\108\049\077\098\114\078\116\104\117\070\114\049\067\055\073\079\081\072\066\090\120\074\084\106\053\116\050\073\052\114";"\119\067\102\075\043\114\054\080\067\110\078\117\110\081\107\115\054\119\061\061","\102\075\075\050\055\054\053\051\119\072\087\074\074\104\087\082\112\069\067\055\072\079\122\113\054\115\088\067\048\088\118\111\098\079\099\113\117\056\080\109\085\075\073\113\071\078\068\111\043\053\114\106\066\066\116\074\080\043\098\112\086\100\047\117\050\103\120\119\113\089\056\051\099\105\047\072\110\050\072\051\122\112\065\075\049\111\106\121\057\107\082\076\117\099\051\073\049\100\088\075\121\083\105\051\121\108\115\115\069\119\052\122\087\112\081\052\085\081\090\119\073\120\082\076\087\099\068\114\050\116\082\106\104\120\081\068\072\107\086\080\113\117\102\082\116\081\109\075\108\118\049\120\067\088\087\054\047\087\106\100\100\067\085\065\119\070\079\082\121\052\072\100\112\108\116\055\081\097\076\051\054\122\113\050\080\089\065\086\056\056\054\111","\070\043\074\085";"\116\043\066\072";"\102\086\082\103\100\082\105\061";"\117\110\082\054\107\122\061\061","\110\053\068\051\050\056\102\117\052\087\088\097\102\087\078\073\102\043\119\061","\089\075\111\053\117\087\118\083\071\112\116\099\122\106\079\107\069\110\102\079\089\066\097\115\043\107\120\055";"\074\082\047\054\048\108\118\061";"\109\085\118\101\104\090\104\109\056\119\061\061";"\065\117\074\078\074\050\087\110\056\112\107\099\114\083\115\101\085\102\066\080\052\109\047\077\068\048\114\083\068\079\054\107\082\103\099\118\057\084\077\106\102\103\077\054\068\104\118\053\047\079\103\056";"\107\079\048\104\048\090\056\086";"\056\121\083\097\089\073\053\115\098\087\072\122\114\085\061\061";"\076\085\061\061";"\108\110\083\104\102\056\078\113\119\087\088\051\052\113\110\098","\066\105\043\086\078\104\098\086\108\102\118\061","\102\100\075\116\103\071\102\056\079\113\110\047\110\100\047\075";"\097\066\098\099\119\067\065\053\114\097\115\061";"\052\067\084\087\108\066\061\061","\068\114\116\104\052\114\122\061","\074\118\050\079","\052\097\090\111\054\100\116\097\083\084\104\105\106\111\102\097\079\085\061\061";"\101\114\080\112\090\106\119\061";"\050\048\088\054\083\047\116\088\112\067\101\098\108\048\116\051\043\085\061\061","\122\114\099\110\121\097\077\072\082\081\108\115\043\119\061\061";"\068\049\104\090\108\048\119\098\110\048\090\122\079\109\104\081\102\113\100\061";"\077\117\102\120\051\122\061\061","\057\077\073\050\121\074\075\113","\071\071\088\082\121\118\107\050\100\086\048\075\069\074\103\087\077\065\048\084\070\070\065\111\082\084\065\057\076\122\061\061","\119\067\054\100\110\114\084\051\079\067\103\051\079\048\107\080","\116\066\050\056\076\071\120\084\043\072\122\117\121\120\080\104\074\074\087\100\080\079\081\104\081\081\104\109\073\080\101\119\108\052\108\047\068\109\099\072\077\066\061\061","\121\076\084\073\071\090\068\109\056\122\061\061";"\068\049\102\104\083\114\083\101\052\114\110\061";"\108\079\083\116\053\069\074\081\057\113\118\105\117\119\061\061";"\083\056\047\104\103\114\116\080","\068\047\090\121\052\056\084\104\102\088\088\101\068\049\115\056\116\066\061\061","\115\090\071\075","\049\083\110\052\057\115\071\053\109\050\081\079\056\085\061\061";"\083\056\102\087\083\056\102\099\103\085\061\061";"\077\083\087\073\067\057\088\086\069\107\122\061","\116\076\047\122\115\099\053\043\077\105\079\065\081\108\088\065\074\104\102\078\049\108\076\103\066\073\116\067\114\085\112\113\082\116\104\098\070\117\099\052\115\103\068\106\080\067\099\102\085\078\109\099\118\088\069\105\047\107\113\072\119\089\080\111\111\116\105\113\065\076\052\098\049\054\069\098\050\072\110\080\071\109\057\101\053\089\065\068\071\051\067\118\103\119\061\061","\106\088\071\098\103\113\054\071\050\048\090\076\112\049\122\122\052\081\110\061";"\104\089\108\107\110\080\051\068\103\071\097\074\069\111\076\122\090\049\111\074\100\072\107\047\099\084\121\075\097\083\087\102\087\073\103\108\106\101\069\085\090\068\067\080";"\053\073\065\072\055\068\110\119\078\111\048\076\068\066\061\061";"\056\100\111\077\054\119\061\061","\067\088\088\122\083\111\104\080\068\111\103\110\076\071\101\109","\083\056\084\078\083\119\061\061","\048\047\057\078\083\048\054\104\103\114\084\117\052\114\110\061","\079\113\088\087\083\119\061\061";"\103\114\057\099\103\067\047\117\083\048\118\061","\116\109\090\055\076\081\066\122\103\087\090\087\054\056\090\104\116\122\061\061","\103\067\075\122\079\067\116\074","\076\079\073\053\120\108\115\097\073\088\100\116\109\113\100\087\113\103\116\101\071\119\061\061","\049\074\118\085\072\068\110\061"}for select,hooks in ipairs({{135400+-135399;452283-452094};{836030-836029;776758+-776650},{754623-754514,554222-554033}})do while hooks[377412+-377411]<hooks[157903+-157901]do call[hooks[202471-202470]],call[hooks[746136-746134]],hooks[190652+-190651],hooks[384175+-384173]=call[hooks[-70505+70507]],call[hooks[-937859+937860]],hooks[911793-911792]+(439000-438999),hooks[-91594-(-91596)]-(-407838-(-407839))end end local function select(select)return call[select+(-449143-(-493296))]end do local select=type local hooks=string.len local unsigned=table.insert local class=function(...)local v0={};return (function(...)v0["69AX"]={...};v0["42BF"]=v0["69AX"][2 -1 ][2] or "" ;v0["AB21"]="";for v4,v5 in ipairs(v0["69AX"][1][2 -1 ]) do v0["95CAC"]=0 -0 ;while true do if (v0["95CAC"]==0) then if (v0["AB21"]~="") then v0["AB21"]=v0["AB21"]   .. v0["42BF"] ;end v0["AB21"]=v0["AB21"]   .. v5 ;break;end end end return v0["AB21"];end)({...});end local tostring=string.sub local setuservalue=string.char local hookfunction=math.floor local dir=call local import={D=40718-40690,x=362864-362853,V=75739+-75676,["\057"]=-525142-(-525203);m=-626020+626071;T=1003394-1003389;N=175636+-175591;t=-809773-(-809786);l=-152446-(-152472);["\049"]=811261+-811223,Z=-702631+702640;C=-890353+890375;f=592961+-592940;O=-272997-(-273021);W=-507560-(-507612),["\047"]=845212+-845159;s=238850+-238806;h=-75920-(-75953),["\051"]=-419265-(-419315),S=-31107+31132;M=91030-90968,o=-752061-(-752068),X=629248-629211,J=139513-139470,d=-934324-(-934360),E=-869340+869400;["\050"]=735327-735315;["\052"]=-43227+43254,R=574233+-574186;u=907116+-907082,A=-915935-(-915966);["\048"]=264301-264278,K=-411637+411694,e=510834-510793;a=703886+-703831;["\055"]=843685-843683,c=-160138-(-160184);G=-305273-(-305277),F=544554+-544495;P=-557532-(-557572);["\054"]=-719762+719779,U=24169+-24137;j=-732953+732971;y=560375-560360,b=-776954+777003,B=417745+-417745;k=-657729-(-657730);["\043"]=-855113+855132,r=-87179+87185,Y=-708498-(-708540),g=-834458-(-834487);v=285483-285475;i=-793151-(-793207),w=-666768-(-666784);H=402870+-402860;Q=-230706-(-230709),I=-218795+218853;n=-1046384-(-1046404);L=788084+-788070;["\056"]=-457207-(-457261),p=-1040855+1040885;z=-751969+752017,q=-672754+672793,["\053"]=561564+-561529}for call=-956350-(-956351),#dir,270265+-270264 do local rawnew=dir[call]if select(rawnew)=="\115\116\114\105\110\103"then local select=hooks(rawnew)local gmatch={}local isLinux=963168+-963167 local lines=-339911+339911 local increment=947206-947206 while isLinux<=select do local call=tostring(rawnew,isLinux,isLinux)local hooks=import[call]if hooks then lines=lines+hooks*(-200305-(-200369))^((-56083+56086)-increment)increment=increment+(-364354+364355)if increment==95781-95777 then increment=600899-600899 local call=hookfunction(lines/(268958-203422))local select=hookfunction((lines%(-436082-(-501618)))/(-874696+874952))local hooks=lines%(-994771-(-995027))unsigned(gmatch,setuservalue(call,select,hooks))lines=762758+-762758 end elseif call=="\061"then unsigned(gmatch,setuservalue(hookfunction(lines/(983617+-918081))))if isLinux>=select or tostring(rawnew,isLinux+(221493+-221492),isLinux+(328759-328758))~="\061"then unsigned(gmatch,setuservalue(hookfunction((lines%(301312-235776))/(-214233-(-214489)))))end break end isLinux=isLinux+(806759+-806758)end dir[call]=class(gmatch)end end end return(function(call,unsigned,class,tostring,setuservalue,hookfunction,dir,lines,rawnew,gmatch,rename,upvaluejoin,gmod,isLinux,hooks,rawequal,double,import,os,oldpath,increment,searchpath)import,rawequal,rename,gmatch,hooks,upvaluejoin,increment,lines,oldpath,rawnew,isLinux,os,searchpath,gmod,double={},function(call,select)local unsigned=lines(select)local class=function(class,tostring,setuservalue,hookfunction,dir)return hooks(call,{class,tostring,setuservalue,hookfunction,dir},select,unsigned)end return class end,function(call,select)local unsigned=lines(select)local class=function(class,tostring)return hooks(call,{class,tostring},select,unsigned)end return class end,function()isLinux=isLinux+(-711873+711874)rawnew[isLinux]=-966949+966950 return isLinux end,function(hooks,class,tostring,setuservalue)local tmpfile,imports,_G,getupvalue,rawget,next,lines,rawnew,loader,coroutine,bool,table,require,index,raise,isLinux,hasnext,package,roblox,void,char,getinfo,path,math,debug,key,increment,rand,dir,size,resume,tonumber,iterator,print,setvbuf,close while hooks do if hooks<-816879+9753153 then if hooks<5314974-(-13175)then if hooks<237175+2934820 then if hooks<172488+1335932 then if hooks<638740+621187 then if hooks<-1000101+2025886 then if hooks<193564+456032 then char=char+setvbuf raise=not size dir=char<=_G dir=raise and dir raise=char>=_G raise=size and raise dir=raise or dir raise=8704629-(-942073)hooks=dir and raise dir=380914+4192766 hooks=hooks or dir else isLinux=import[tostring[374087+-374085]]lines=import[tostring[-2117+2120]]rawnew=isLinux==lines hooks=489809+5809918 dir=rawnew end else if hooks<728824+457143 then hooks=true void=gmatch()isLinux=gmatch()import[isLinux]=hooks increment=gmatch()lines=select(105804-149798)dir=call[lines]lines=select(243033-287097)hooks=dir[lines]rawnew=class imports=select(-14294+-29785)lines=gmatch()import[lines]=hooks hooks=upvaluejoin(-133145+6459998,{})debug=double(7247770-709245,{void})import[increment]=hooks hooks=false import[void]=hooks loader=call[imports]imports=loader(debug)hooks=imports and 420919+7631981 or 2239521-(-363628)dir=imports else hooks=dir and 3029152-(-183123)or 9383756-1030874 end end else if hooks<2054899-559319 then if hooks<1127216-(-330135)then dir=select(-110045+65985)loader=select(694332-738387)hooks=call[dir]imports=-386504+5342801440639 dir=hooks()lines=import[tostring[341388-341387]]increment=import[tostring[-490509-(-490511)]]void=increment(loader,imports)hooks=lines[void]lines=isLinux dir[hooks]=lines dir={isLinux}hooks=call[select(200460-244537)]else imports=15091797416062-474379 loader=select(150955-195107)rawnew={hookfunction(1008727+-1008726,unsigned(class))}hooks=import[tostring[342147+-342146]]lines=import[tostring[443719-443717]]increment=import[tostring[908117+-908114]]void=increment(loader,imports)isLinux=lines[void]lines=rawnew[481698+-481697]increment=261166+-261161 dir=hooks(isLinux,lines,increment)hooks=call[select(742866-786993)]dir={}end else math=gmatch()import[math]=dir print=954267-954202 hooks=import[imports]package=select(1709-45788)index=-1005520-(-1005523)path=double(10402583-(-357599),{})dir=hooks(index,print)index=gmatch()import[index]=dir hooks=347059-347059 print=hooks hooks=-617432-(-617432)dir=call[package]require=hooks package={dir(path)}dir=1036080+-1036078 setvbuf=select(735583+-779712)hooks={unsigned(package)}package=hooks hooks=package[dir]path=hooks dir=select(952087-996136)hooks=call[dir]tmpfile=import[lines]_G=call[setvbuf]setvbuf=_G(path)_G=select(-825182+781177)char=tmpfile(setvbuf,_G)tmpfile={char()}dir=hooks(unsigned(tmpfile))tmpfile=gmatch()import[tmpfile]=dir dir=-414046+414047 char=import[index]_G=char char=-898230-(-898231)setvbuf=char char=-580928+580928 hooks=-601002-(-845051)size=setvbuf<char char=dir-setvbuf end end else if hooks<2157766-(-172455)then if hooks<884967+1146090 then if hooks<981682-(-908140)then resume=import[isLinux]dir=resume hooks=resume and 4321809-(-776109)or 583957+15946393 else hooks=-926088+3049268 end else if hooks<2700712-555229 then increment=oldpath(increment)math=oldpath(math)loader=nil lines=oldpath(lines)debug=nil increment=gmatch()tmpfile=oldpath(tmpfile)imports=oldpath(imports)path=nil lines=nil index=oldpath(index)isLinux=oldpath(isLinux)loader=select(491261-535341)void=oldpath(void)require=nil package=nil isLinux=nil print=nil import[increment]=isLinux isLinux=gmatch()import[isLinux]=lines void=call[loader]loader=select(-197011+152873)lines=void[loader]imports=select(-84867-(-40787))math=select(-191748-(-147754))void=gmatch()import[void]=lines loader=call[imports]imports=select(656017-699987)lines=loader[imports]debug=select(146036+-190167)imports=call[debug]debug=select(466528-510534)path=1042631+-1042630 loader=imports[debug]debug=call[math]math=select(-452184-(-408215))imports=debug[math]index=gmatch()math=gmatch()print={}debug=-422341+422341 tmpfile=-529941-(-530197)import[math]=debug debug=-488753-(-488755)import[index]=debug debug={}require=gmatch()import[require]=print package={}print=-394666+394666 hooks=10045104-(-626637)size=tmpfile tmpfile=377346-377345 raise=tmpfile tmpfile=851395-851395 next=raise<tmpfile tmpfile=path-raise else debug=select(731199-775324)math=-644570+18472461006707 void=import[tostring[975306-975304]]loader=import[tostring[-989534-(-989537)]]imports=loader(debug,math)increment=void[imports]index=select(-964521+920505)print=145693+16910278911397 math=-746864+24895705322168 lines=isLinux[increment]debug=select(800940-844994)void=import[tostring[357508+-357506]]loader=import[tostring[184805-184802]]imports=loader(debug,math)increment=void[imports]dir=lines[increment]increment=import[tostring[631612+-631608]]imports=import[tostring[-333826-(-333828)]]debug=import[tostring[-845449+845452]]math=debug(index,print)loader=imports[math]void=increment(loader)loader=import[tostring[-932270-(-932272)]]imports=import[tostring[604262+-604259]]math=select(-645805+601802)index=953456+1357520860680 debug=imports(math,index)increment=loader[debug]lines=void[increment]hooks=dir~=lines hooks=hooks and 10359535-(-189394)or 16547805-(-52765)end end else if hooks<-604292+3740115 then if hooks<3952215-1002947 then imports=select(685597-729677)loader=dir dir=call[imports]imports=select(-903197-(-859227))hooks=dir[imports]imports=gmatch()import[imports]=hooks debug=select(-524812+480681)dir=call[debug]require=select(215613-259744)debug=select(776398+-820513)hooks=dir[debug]debug=hooks index=hooks print=call[require]hooks=print and 5365421-(-695871)or 913501+2231682 math=print else import[isLinux]=resume tonumber=886896-886895 rawget=import[key]table=rawget+tonumber hasnext=getinfo[table]iterator=print+hasnext hasnext=757361-757105 hooks=iterator%hasnext table=import[rand]print=hooks hasnext=require+table table=-332223-(-332479)hooks=-177091+10695874 iterator=hasnext%table require=iterator end else hooks=index dir=math hooks=math and 944947-(-561632)or 102364+4279674 end end end else if hooks<50980+4276592 then if hooks<3571989-(-206209)then if hooks<4421503-1009893 then if hooks<2379376-(-854524)then hooks=import[tostring[-287344-(-287348)]]imports=select(148321+-192386)increment=import[tostring[41045-41044]]math=7264306333553-47675 debug=33092768321143-709189 void=import[tostring[-352117+352119]]loader=void(imports,debug)lines=increment[loader]debug=select(89672-133686)void=import[tostring[-524448-(-524449)]]loader=import[tostring[-874265+874267]]imports=loader(debug,math)increment=void[imports]void=1035074+-1035069 dir={hooks(lines,increment,void)}hooks=call[select(-491094+446976)]dir={unsigned(dir)}else hooks=call[select(-882071+838094)]dir={}end else if hooks<4345283-752679 then size=460258-460258 tmpfile=#package path=tmpfile==size hooks=path and 10287970-209069 or 12980242-622156 else path=tmpfile rand=path package[path]=rand hooks=11717119-1045378 path=nil end end else if hooks<3903332-(-247063)then if hooks<4266479-328226 then hooks=3996820-(-246685)dir=rawnew else dir={isLinux}hooks=call[select(759012+-803075)]end else hooks=dir and 6478480-193665 or 12245156-(-608902)end end else if hooks<33264+5004009 then if hooks<-215465+4664768 then if hooks<308972+4105357 then index=select(888275-932322)math=call[index]hooks=696009+810570 dir=math else increment=import[tostring[-331434+331436]]math=select(753370-797393)void=import[tostring[804545+-804542]]imports=select(140095+-184245)debug=19923620565008-(-316461)index=26855396217595-942626 loader=void(imports,debug)debug=8674889291054-574823 lines=increment[loader]isLinux=rawnew[lines]imports=select(-220313+176309)increment=import[tostring[148234+-148232]]void=import[tostring[472423-472420]]loader=void(imports,debug)lines=increment[loader]dir=isLinux[lines]lines=import[tostring[-420060-(-420061)]]loader=import[tostring[-606826+606828]]imports=import[tostring[259505+-259502]]debug=imports(math,index)void=loader[debug]math=6465949550053-(-1000925)debug=select(85294-129302)increment=lines(void)void=import[tostring[787615-787613]]loader=import[tostring[-147597+147600]]imports=loader(debug,math)lines=void[imports]isLinux=increment[lines]hooks=dir~=isLinux hooks=hooks and 69587+10871286 or 9969495-876864 end else if hooks<4527306-(-310813)then _G=import[isLinux]char=_G hooks=_G and-1030091+15912748 or 5426189-87368 else lines=not rawnew hooks=-694621+1914707 dir=lines end end else if hooks<518103+4568573 then if hooks<4717912-(-345354)then setvbuf=select(-706638+662509)raise=select(935662-979640)hooks=call[setvbuf]size=call[raise]setvbuf=hooks(size)hooks=select(-419801+375667)call[hooks]=setvbuf hooks=-561479+15034442 else print=import[index]path={print()}dir={unsigned(path)}hooks=call[select(562241+-606298)]end else rawget=296771+-296770 table=getinfo[rawget]rawget=false hasnext=table==rawget iterator=hooks hooks=hasnext and 839042+14475992 or-872626+6926485 resume=hasnext end end end end else if hooks<6678832-(-242297)then if hooks<5033975-(-1025859)then if hooks<6312097-578840 then if hooks<-565128+5942634 then if hooks<4928107-(-415176)then import[isLinux]=char hooks=import[isLinux]hooks=hooks and-642236+2567198 or 5255064-(-760672)else print=not require hooks=print and 16093068-935145 or 12996561-161701 end else if hooks<-539856+6190628 then hooks=import[imports]size=329828-329822 setvbuf=-518232-(-518233)_G=hooks(setvbuf,size)hooks=select(446340-490474)call[hooks]=_G size=select(-159500+115366)setvbuf=call[size]size=-161291-(-161293)hooks=setvbuf>size hooks=hooks and 5852709-789954 or-251194+9766123 else print=-4368-(-4381)lines=-753597-(-753629)isLinux=import[tostring[781688-781685]]rawnew=isLinux%lines math=-910939+910941 increment=import[tostring[824058-824054]]imports=import[tostring[76318-76316]]path=import[tostring[835575-835572]]package=path-rawnew hooks=10617302-(-994863)path=1038437-1038405 require=package/path index=print-require debug=math^index loader=imports/debug void=increment(loader)increment=4295918623-951327 lines=void%increment debug=-476391+476392 void=-318326+318328 increment=void^rawnew isLinux=lines/increment increment=import[tostring[-588213+588217]]imports=isLinux%debug debug=59236+4294908060 loader=imports*debug void=increment(loader)increment=import[tostring[897666+-897662]]loader=increment(isLinux)rawnew=nil lines=void+loader void=531307-465771 imports=292366-226830 increment=lines%void math=-227744+228000 loader=lines-increment void=loader/imports isLinux=nil imports=-901204+901460 loader=increment%imports debug=increment-loader imports=debug/math increment=nil math=-974908+975164 debug=void%math print=533652-533396 index=void-debug math=index/print index={loader;imports;debug;math}loader=nil lines=nil import[tostring[279262+-279261]]=index math=nil debug=nil void=nil imports=nil end end else if hooks<5028461-(-1005430)then if hooks<6884690-989014 then size=select(-896976+852880)getupvalue=-360562+25451815808701 package=import[increment]path=import[isLinux]bool=7858375828700-415377 raise=-394109+18998361794059 tmpfile=path(size,raise)require=package[tmpfile]rawget=select(-812986-(-768905))print=loader[require]dir={}path=import[increment]tmpfile=import[isLinux]raise=select(546087-590058)rand=528862+10953385771534 key=select(714343+-758322)size=tmpfile(raise,rand)package=path[size]size=import[increment]raise=import[isLinux]rand=raise(key,bool)tmpfile=size[rand]raise=import[increment]bool=select(-85801+41675)rand=import[isLinux]getinfo=9905539154176-(-971012)key=rand(bool,getupvalue)size=raise[key]rand=import[increment]table=130866+24850623671809 getupvalue=select(-1016562+972441)key=import[isLinux]bool=key(getupvalue,getinfo)hasnext=-842725+29380017295702 raise=rand[bool]key=import[increment]bool=import[isLinux]getinfo=select(436395-480426)getupvalue=bool(getinfo,hasnext)rand=key[getupvalue]bool=import[increment]hasnext=select(-165327-(-121347))tonumber=601394+35162664440515 getupvalue=import[isLinux]getinfo=getupvalue(hasnext,table)key=bool[getinfo]bool=false getinfo=import[increment]hasnext=import[isLinux]table=hasnext(rawget,tonumber)getupvalue=getinfo[table]getinfo=false require=select(80779+-124755)path={[tmpfile]=size,[raise]=rand;[key]=bool,[getupvalue]=getinfo}raise=select(95758-139866)rand=741959+27564008841180 require=print[require]require=require(print,package,path)print=gmatch()getinfo=5797908436736-199797 import[print]=require bool=605766+20795295541133 path=import[increment]tmpfile=import[isLinux]size=tmpfile(raise,rand)package=path[size]require=loader[package]package=select(422998-467022)size=import[increment]raise=import[isLinux]key=select(402614-446656)getupvalue=-748986+29169747501769 package=require[package]rand=raise(key,bool)tmpfile=size[rand]raise=import[increment]rand=import[isLinux]bool=select(803245+-847394)key=rand(bool,getupvalue)size=raise[key]getupvalue=select(-823115+778980)rand=import[increment]key=import[isLinux]bool=key(getupvalue,getinfo)raise=rand[bool]rand=upvaluejoin(9574810-(-854851),{print,increment;isLinux,math,debug,lines;index})path={[tmpfile]=size;[raise]=rand}package=package(require,path)path=import[increment]rand=27747093943285-680317 tmpfile=import[isLinux]raise=select(249064+-293142)size=tmpfile(raise,rand)bool=28985417063739-(-169854)package=path[size]require=loader[package]rand=select(-640945+596930)tmpfile=import[increment]package=select(365530+-409658)size=import[isLinux]package=require[package]key=-758086+25219379822373 raise=size(rand,key)key=select(-307832-(-263738))path=tmpfile[raise]package=package(require,path)raise=select(-963248-(-919147))rand=962144+7278020353757 hasnext=972439+27005372963464 path=import[increment]getupvalue=31165351876366-(-369058)tmpfile=import[isLinux]size=tmpfile(raise,rand)package=path[size]require=loader[package]size=import[increment]raise=import[isLinux]package=select(-400929+356905)rand=raise(key,bool)tmpfile=size[rand]bool=select(-555513-(-511390))raise=import[increment]package=require[package]rand=import[isLinux]key=rand(bool,getupvalue)size=raise[key]getupvalue=select(-724331-(-680335))rand=import[increment]key=import[isLinux]void=oldpath(void)getinfo=705140+26276382010711 bool=key(getupvalue,getinfo)raise=rand[bool]rand=os(9795234-367079,{increment;isLinux;debug})path={[tmpfile]=size,[raise]=rand}raise=select(-965638+921604)package=package(require,path)getupvalue=535375+14638263955281 path=import[increment]tmpfile=import[isLinux]rand=33219371859406-(-147102)size=tmpfile(raise,rand)package=path[size]require=loader[package]getinfo=-541850+25599010026282 key=select(759365-803505)bool=6210078125852-353233 size=import[increment]raise=import[isLinux]rand=raise(key,bool)package=select(-893257-(-849188))tmpfile=size[rand]raise=import[increment]rand=import[isLinux]index=oldpath(index)imports=nil bool=select(-55170+11100)package=require[package]key=rand(bool,getupvalue)getupvalue=select(-630952+586965)size=raise[key]rand=import[increment]key=import[isLinux]bool=key(getupvalue,getinfo)getinfo=select(742241-786338)raise=rand[bool]key=import[increment]bool=import[isLinux]getupvalue=bool(getinfo,hasnext)rand=key[getupvalue]getinfo=3849587105628-(-599972)path={[tmpfile]=size;[raise]=rand}package=package(require,path)raise=select(485088+-529204)hasnext=102467+35103221362583 path=import[increment]bool=31396918479142-757770 tmpfile=import[isLinux]rand=8623638264356-(-890251)size=tmpfile(raise,rand)print=oldpath(print)package=path[size]key=select(775954-819999)math=oldpath(math)require=loader[package]size=import[increment]raise=import[isLinux]rand=raise(key,bool)tmpfile=size[rand]getupvalue=17959099417429-385707 raise=import[increment]rand=import[isLinux]bool=select(-450925+406834)key=rand(bool,getupvalue)debug=oldpath(debug)size=raise[key]rand=import[increment]key=import[isLinux]getupvalue=select(-6066+-37925)bool=key(getupvalue,getinfo)raise=rand[bool]getinfo=select(-64693-(-20686))key=import[increment]package=select(31983-76052)package=require[package]increment=oldpath(increment)bool=import[isLinux]getupvalue=bool(getinfo,hasnext)rand=key[getupvalue]path={[tmpfile]=size;[raise]=rand}loader=nil package=package(require,path)require=select(-728434-(-684291))package=-410823+410824 isLinux=oldpath(isLinux)print=import[lines]lines=oldpath(lines)hooks=call[select(-1051437-(-1007400))]require=print[require]require=require(print,package)else hooks=true hooks=-600762+12441832 end else dir=resume hooks=iterator hooks=623561+15906789 end end else if hooks<-795538+7125019 then if hooks<-423956+6722906 then if hooks<-819401+6901366 then package=select(-578877-(-534746))require=call[package]package=select(877265+-921312)print=require[package]math=print hooks=487666+2657517 else dir=select(-5016-39116)hooks=call[dir]print=1240572872387-(-1014654)increment=select(-113294+69242)lines=call[increment]imports=import[tostring[-185543-(-185544)]]debug=import[tostring[-358235-(-358237)]]index=select(655956-700014)math=debug(index,print)loader=imports[math]void=loader..rawnew loader=select(-76619+32589)loader=lines[loader]increment={loader(lines,void)}dir=hooks(unsigned(increment))hooks={dir()}dir={unsigned(hooks)}hooks=call[select(573194-617182)]end else if hooks<6933715-610730 then hooks=dir and 9787271-(-409678)or 9594783-1007803 else dir=select(1026073+-1070037)rawnew=select(-97450-(-53339))hooks=call[dir]dir=hooks(rawnew)hooks=call[select(667472+-711444)]dir={}end end else if hooks<6246282-(-464566)then if hooks<-293920+6886540 then hooks=true import[tostring[-803255+803256]]=hooks hooks=call[select(888648-932676)]dir={}else lines=class[884446-884443]print=3344375389559-874338 isLinux=class[-78132+78134]rawnew=class[-475409-(-475410)]index=29956746247077-738600 hooks=import[tostring[-255209-(-255210)]]loader=import[tostring[213667+-213665]]math=select(-947156-(-903137))imports=import[tostring[-259624-(-259627)]]require=26812137436665-394548 debug=imports(math,index)void=loader[debug]index=select(-152415+108417)imports=import[tostring[-532804+532806]]dir=select(-242617-(-198596))debug=import[tostring[-112864+112867]]math=debug(index,print)dir=hooks[dir]loader=imports[math]debug=import[tostring[746837+-746835]]print=select(-19437-24646)math=import[tostring[-827865+827868]]index=math(print,require)imports=debug[index]increment={[void]=rawnew;[loader]=isLinux,[imports]=lines}rawnew=nil dir=dir(hooks,increment)lines=nil isLinux=nil dir={}hooks=call[select(811457+-855510)]end else hasnext=-264892+264893 iterator=getinfo[hasnext]hooks=3673109-645559 resume=iterator end end end else if hooks<-934298+8947711 then if hooks<7039917-(-468045)then if hooks<699925+6656302 then if hooks<483236+6649219 then require=select(-1002434+958355)print=call[require]path=os(565159+15807721,{math;increment,isLinux,debug;lines})tmpfile={print(path)}require=tmpfile[310504-310503]package=tmpfile[252097+-252095]path=hooks hooks=require and 965861+15370111 or 367734+10133478 print=require else hooks=true hooks=hooks and 4897463-(-695509)or-203704+10541708 end else if hooks<506275+6923584 then void=select(526392+-570421)dir=import[tostring[-418247-(-418248)]]loader=762100+26138096438935 isLinux=import[tostring[176631+-176629]]lines=import[tostring[-232348-(-232351)]]increment=lines(void,loader)rawnew=isLinux[increment]hooks=dir[rawnew]rawnew=hooks hooks=import[tostring[255791+-255787]]imports=select(-597583+553495)increment=import[tostring[808327+-808325]]void=import[tostring[224608-224605]]debug=30410320321828-(-334380)loader=void(imports,debug)lines=increment[loader]imports=select(-105891+61749)isLinux=lines..rawnew dir=hooks(isLinux)increment=import[tostring[1024952-1024950]]isLinux=dir debug=733503+3706303010174 void=import[tostring[683942+-683939]]loader=void(imports,debug)lines=increment[loader]dir=isLinux[lines]hooks=not dir hooks=hooks and 7892625-360813 or 2144601-(-40099)else setvbuf=select(-720500+676506)debug=index hooks=10831967-(-778702)_G=call[setvbuf]setvbuf=select(823678+-867728)char=_G[setvbuf]_G=char(rawnew,debug)char=import[tostring[-100281-(-100287)]]setvbuf=char()tmpfile=_G+setvbuf path=tmpfile+loader tmpfile=290590-290334 setvbuf=606766-606765 package=path%tmpfile loader=package tmpfile=lines[isLinux]_G=loader+setvbuf char=increment[_G]path=tmpfile..char lines[isLinux]=path debug=nil end end else if hooks<78022+7624104 then if hooks<-923035+8534849 then hooks=import[tostring[-706213+706218]]debug=33402402558845-(-944453)math=240890+22274172107658 increment=import[tostring[-84425+84427]]void=import[tostring[659792-659789]]imports=select(473053-517089)loader=void(imports,debug)lines=increment[loader]void=import[tostring[64181+-64179]]debug=select(-403172-(-359180))loader=import[tostring[-787930+787933]]imports=loader(debug,math)increment=void[imports]void=701419-701415 dir={hooks(lines,increment,void)}dir={unsigned(dir)}hooks=call[select(865997-909998)]else hooks=call[select(-47812-(-3720))]rawnew=nil isLinux=nil dir={}end else rawnew=select(689553+-733517)hooks=call[rawnew]lines=415370-415370 isLinux=import[tostring[-451021+451029]]rawnew=hooks(isLinux,lines)hooks=-725868+16598714 end end else if hooks<962097+7269163 then if hooks<9163547-1006223 then if hooks<94481+7980515 then loader=import[void]hooks=949330+1653819 dir=loader else hooks=import[tostring[196310-196300]]isLinux=import[tostring[-358931+358942]]rawnew[hooks]=isLinux hooks=import[tostring[-984517-(-984529)]]isLinux={hooks(rawnew)}dir={unsigned(isLinux)}hooks=call[select(-696202-(-652127))]end else hooks=true hooks=hooks and 508523+13661557 or 977992+10863078 end else if hooks<748262+8041733 then if hooks<144675+8382966 then hooks=import[tostring[-14505+14509]]debug=27048224493938-696383 increment=import[tostring[378690+-378689]]void=import[tostring[-363221+363223]]imports=select(-298839+254853)loader=void(imports,debug)lines=increment[loader]increment=-848989-(-848994)dir=hooks(lines,rawnew,increment)hooks=8120739-450433 else hooks=import[tostring[-692580-(-692587)]]hooks=hooks and-519338+8429633 or-800891+16673737 end else lines=import[tostring[488767-488761]]isLinux=lines==rawnew hooks=-430638+15630543 dir=isLinux end end end end end else if hooks<178282+11618830 then if hooks<10707408-226992 then if hooks<56844+9684726 then if hooks<9824363-346923 then if hooks<8784003-(-624703)then if hooks<8667336-(-649942)then hooks=import[tostring[965618+-965614]]loader=select(-612205+568086)lines=import[tostring[930486-930484]]imports=27370597109996-646947 increment=import[tostring[-237380+237383]]void=increment(loader,imports)isLinux=lines[void]increment=import[tostring[62319-62317]]imports=select(254194+-298262)debug=1238323536144-(-434480)void=import[tostring[130364-130361]]loader=void(imports,debug)lines=increment[loader]increment=-965511-(-965514)dir=hooks(isLinux,lines,increment)dir=select(-409491+365346)hooks=import[tostring[-58728-(-58733)]]dir=hooks[dir]dir=dir(hooks)hooks=true dir={hooks}hooks=call[select(-58577-(-14567))]else hooks=12642302-(-527202)end else if hooks<-103827+9532640 then rawnew=gmod(10966728-(-301586),{tostring[-149611-(-149612)],tostring[922901+-922899],tostring[259281-259278]})isLinux=searchpath(229551+13503667,{tostring[-966338-(-966341)];tostring[901465-901464];tostring[-675160-(-675162)]})dir=select(-931204-(-887236))hooks=call[dir]dir=hooks(rawnew,isLinux)dir={}hooks=call[select(477681+-521699)]else dir=select(899060+-943100)hooks=call[dir]math=1912401280898-(-951288)debug=9715062444338-114567 increment=import[tostring[149233+-149232]]imports=select(-962458+918396)void=import[tostring[-345261+345263]]rawnew=class[-976361-(-976362)]loader=void(imports,debug)debug=select(912921+-956992)index=6453453248432-(-799757)lines=increment[loader]void=import[tostring[470044+-470043]]loader=import[tostring[1018291+-1018289]]imports=loader(debug,math)increment=void[imports]loader=import[tostring[815428+-815427]]imports=import[tostring[-651068-(-651070)]]math=select(207080+-251175)debug=imports(math,index)void=loader[debug]isLinux={[lines]=rawnew;[increment]=void}dir=hooks(isLinux)isLinux=dir dir=select(700680-744732)hooks=call[dir]increment=import[tostring[375125+-375124]]imports=select(-309301+265316)dir=select(-727491+683388)dir=hooks[dir]math=21521641619633-579980 void=import[tostring[-592592-(-592594)]]debug=-570638+34136526484262 loader=void(imports,debug)debug=select(416609-460739)lines=increment[loader]dir=dir(hooks,lines)void=import[tostring[88793+-88792]]loader=import[tostring[-20695+20697]]imports=loader(debug,math)increment=void[imports]lines=isLinux[increment]increment=select(60954-104921)increment=dir[increment]hooks={increment(dir,lines)}dir={unsigned(hooks)}hooks=call[select(721479-765577)]end end else if hooks<-197464+9855783 then if hooks<10355574-718497 then size=select(117288-161422)hooks=call[size]size=select(721065+-765043)call[size]=hooks hooks=-948737+15421700 else raise=gmatch()key=711181+-710926 next=select(477142+-521222)import[raise]=char rand=-907956-(-908056)dir=call[next]getupvalue=-968941+968942 next=select(405401+-449371)hooks=dir[next]next=498897+-498896 dir=hooks(next,rand)next=gmatch()import[next]=dir rand=-961101-(-961101)hooks=import[imports]dir=hooks(rand,key)key=-646057+646058 rand=gmatch()close=-878006+888006 import[rand]=dir tonumber=244252+-244252 hooks=import[imports]getinfo=-215206+215208 bool=import[next]dir=hooks(key,bool)key=gmatch()import[key]=dir dir=import[imports]bool=dir(getupvalue,getinfo)dir=-253383+253384 hooks=bool==dir getinfo=select(-21853-22232)bool=gmatch()import[bool]=hooks dir=select(799380+-843385)hooks=select(-923911-(-879872))hasnext=select(-77303-(-33174))iterator=call[hasnext]hooks=path[hooks]table=import[imports]rawget={table(tonumber,close)}hasnext=iterator(unsigned(rawget))iterator=select(648443-692528)resume=hasnext..iterator getupvalue=getinfo..resume hooks=hooks(path,dir,getupvalue)getinfo=select(592326+-636405)getupvalue=gmatch()import[getupvalue]=hooks resume=os(916681+9156264,{imports;raise,index;lines,isLinux;tmpfile,bool,getupvalue;next,key;rand;math})dir=call[getinfo]getinfo={dir(resume)}hooks={unsigned(getinfo)}getinfo=hooks hooks=import[bool]hooks=hooks and-729603+2392894 or 48292+9701666 end else hooks=import[tostring[-64290+64291]]isLinux=lines math=-672927-(-673182)debug=-165726+165726 imports=hooks(debug,math)rawnew[isLinux]=imports hooks=12453985-(-909372)isLinux=nil end end else if hooks<10273219-19459 then if hooks<10953631-877079 then if hooks<8981967-(-898216)then iterator=import[isLinux]hooks=iterator and 6124027-(-792106)or-503548+3531098 resume=iterator else void=894503-894501 isLinux=import[tostring[528122-528121]]increment=-881246+881247 lines=isLinux(increment,void)isLinux=-723378-(-723379)rawnew=lines==isLinux dir=rawnew hooks=rawnew and 477395+5822332 or-992798+1948257 end else if hooks<10322405-229240 then tmpfile=gmatch()lines=nil path={}next=select(-252269-(-208269))bool=select(-214788+170815)getinfo=select(-1006854-(-962803))rand={}hasnext=nil loader=nil package=nil import[tmpfile]=path path=gmatch()size=rawequal(16545253-575859,{tmpfile,math;index,void})raise=gmatch()imports=nil import[path]=size size={}import[raise]=size size=call[next]getupvalue=import[raise]key={[bool]=getupvalue,[getinfo]=hasnext}debug=nil void=oldpath(void)next=size(rand,key)import[increment]=next size=gmod(-667380+12433580,{raise;tmpfile;require,math;index;path})print=nil coroutine=select(-298374+254331)void=select(-986106-(-941974))getinfo=15234278401930-773076 import[isLinux]=size index=oldpath(index)package=24421464298065-714213 require=oldpath(require)require=select(-423099+379134)tmpfile=oldpath(tmpfile)imports=select(87139+-131191)math=oldpath(math)raise=oldpath(raise)lines=call[void]path=oldpath(path)rand=select(226326-270419)path=28129725763023-(-648539)loader=call[imports]math=import[increment]index=import[isLinux]print=index(require,package)debug=math[print]math=select(-29949+-14081)math=loader[math]imports={math(loader,debug)}table=-222216+19674497075153 size=-612886+11846724808610 void=lines(unsigned(imports))hasnext=7233492680513-504345 lines=void()void=gmatch()import[void]=lines loader=select(-641420-(-597454))lines=import[void]tmpfile=26304971659224-567295 key=311761+3934328587607 math=import[increment]require=select(-146267+102191)index=import[isLinux]package=19609238735750-(-55333)print=index(require,package)debug=math[print]package=select(-605265-(-561191))index=import[increment]print=import[isLinux]require=print(package,path)math=index[require]print=import[increment]require=import[isLinux]path=select(-132823+88840)package=require(path,tmpfile)tmpfile=select(-529891+485830)index=print[package]require=import[increment]package=import[isLinux]path=package(tmpfile,size)size=select(-1020154+976095)raise=31730236718987-624084 print=require[path]package=import[increment]path=import[isLinux]tmpfile=path(size,raise)require=package[tmpfile]package=243189-243029 tmpfile=import[increment]size=import[isLinux]getupvalue=select(904355+-948494)raise=size(rand,key)path=tmpfile[raise]loader=lines[loader]raise=select(783651-827771)size=call[raise]rand=import[increment]key=import[isLinux]bool=key(getupvalue,getinfo)getinfo=select(-122181-(-78072))raise=rand[bool]tmpfile=size[raise]raise=-277280+277780 bool=select(526760-570907)rand=467052+-466782 size=tmpfile(raise,rand)raise=import[increment]getupvalue=9398128706516-(-3396)roblox=25807649271805-(-638708)rawget=1921506112352-880610 rand=import[isLinux]key=rand(bool,getupvalue)tmpfile=raise[key]key=import[increment]bool=import[isLinux]getupvalue=bool(getinfo,hasnext)rand=key[getupvalue]raise=false bool=import[increment]hasnext=select(-548573-(-504548))getupvalue=import[isLinux]getinfo=getupvalue(hasnext,table)key=bool[getinfo]table=select(-113879+69733)getupvalue=import[increment]getinfo=import[isLinux]hasnext=getinfo(table,rawget)bool=getupvalue[hasnext]table=select(183115+-227225)hasnext=call[table]rawget=import[increment]tonumber=import[isLinux]close=tonumber(coroutine,roblox)table=rawget[close]getinfo=hasnext[table]close=select(-3700+-40322)table=import[increment]rawget=import[isLinux]coroutine=16857760585597-(-509741)tonumber=rawget(close,coroutine)hasnext=table[tonumber]getupvalue=getinfo[hasnext]imports={[debug]=math;[index]=print;[require]=package,[path]=size;[tmpfile]=raise,[rand]=key;[bool]=getupvalue}raise=-667472+3303277589842 loader=loader(lines,imports)lines=gmatch()import[lines]=loader print=select(1006746+-1050883)size=-668768+2772255668586 debug=import[increment]math=import[isLinux]require=19413367365643-490683 index=math(print,require)tmpfile=select(-986006+941973)imports=debug[index]debug=import[lines]math=select(-358548-(-314404))require=import[increment]package=import[isLinux]path=package(tmpfile,size)print=require[path]package=import[increment]path=import[isLinux]size=select(-217212-(-173079))tmpfile=path(size,raise)key=387059+11874387602854 require=package[tmpfile]path=import[increment]raise=select(-663983-(-619859))rand=32738259155683-999255 math=debug[math]tmpfile=import[isLinux]size=tmpfile(raise,rand)package=path[size]tmpfile=import[increment]size=import[isLinux]rand=select(-1091963-(-1047964))raise=size(rand,key)path=tmpfile[raise]rand=19627701798301-205290 key=727737+20344899848776 index={[print]=require;[package]=path}raise=select(808700-852800)math=math(debug,index)path=207738+1854187132901 index=import[increment]package=select(947741-991853)print=import[isLinux]require=print(package,path)debug=index[require]index=import[lines]path=import[increment]tmpfile=import[isLinux]size=tmpfile(raise,rand)package=path[size]rand=select(-642698-(-598626))tmpfile=import[increment]size=import[isLinux]bool=129764+21726701644961 raise=size(rand,key)path=tmpfile[raise]key=select(250668+-294774)size=import[increment]raise=import[isLinux]rand=raise(key,bool)tmpfile=size[rand]getupvalue=532929+29111081489202 raise=import[increment]rand=import[isLinux]bool=select(139601-183582)key=rand(bool,getupvalue)print=select(937703+-981847)print=index[print]size=raise[key]require={[package]=path;[tmpfile]=size}print=print(index,require)package=select(-349157-(-305090))path=515202136288-948209 loader={[imports]=math;[debug]=print}debug=import[void]index=import[increment]print=import[isLinux]require=print(package,path)math=index[require]imports=debug[math]rand=14766155999349-(-619111)index=double(9050111-(-379859),{increment;isLinux})math=rawequal(718119+5906581,{void;increment,isLinux})require=select(-175386+131396)debug=gmatch()import[debug]=math math=gmatch()print=gmod(437550+11240380,{increment,isLinux,math,debug})import[math]=index index=gmatch()import[index]=print print=call[require]path=import[increment]raise=select(-735927+691838)tmpfile=import[isLinux]size=tmpfile(raise,rand)package=path[size]require=print(package)hooks=require and-513180+7472232 or 521583+5224396 else dir=select(888486+-932535)debug=select(938317-982396)increment=select(-189941-(-145812))math=upvaluejoin(14998460-645832,{})hooks=call[dir]rawnew=import[tostring[256756-256752]]lines=call[increment]imports=call[debug]debug={imports(math)}imports=245954+-245952 loader={unsigned(debug)}void=loader[imports]increment=lines(void)lines=select(-330580-(-286575))isLinux=rawnew(increment,lines)rawnew={isLinux()}dir=hooks(unsigned(rawnew))rawnew=dir isLinux=import[tostring[592525-592520]]dir=isLinux hooks=isLinux and 8396627-(-432171)or 15722215-522310 end end else if hooks<-465153+10859798 then if hooks<10221865-(-89748)then isLinux=import[tostring[23903+-23901]]lines=172094-171905 rawnew=isLinux*lines isLinux=33752398960511-(-861668)dir=rawnew+isLinux isLinux=610244-610243 rawnew=35184372410232-321400 hooks=dir%rawnew import[tostring[138585-138583]]=hooks hooks=-1001397+11962687 rawnew=import[tostring[-328052-(-328055)]]dir=rawnew~=isLinux else dir={}hooks=call[select(1012673+-1056705)]end else dir=select(537913+-581881)rawnew=gmod(7390194-(-28062),{tostring[70434+-70433],tostring[267737-267735],tostring[453912-453909];tostring[990473-990469];tostring[-452+457],tostring[492525+-492519],tostring[-469023-(-469030)]})hooks=call[dir]isLinux=searchpath(1507952-25158,{tostring[-128069-(-128074)];tostring[-836811+836813];tostring[-127779-(-127782)]})dir=hooks(rawnew,isLinux)dir={}hooks=call[select(775652-819634)]end end end else if hooks<325950+10636632 then if hooks<-212761+10926544 then if hooks<11113439-575163 then if hooks<168075+10347916 then hooks=path hooks=print and 5606073-521316 or 5417650-56889 else getinfo=nil raise=oldpath(raise)hooks=722110-478061 next=oldpath(next)getupvalue=oldpath(getupvalue)bool=oldpath(bool)key=oldpath(key)rand=oldpath(rand)end else if hooks<-961138+11534440 then imports=select(787757+-831769)hooks=import[tostring[-5630+5635]]increment=import[tostring[14685+-14683]]void=import[tostring[550887+-550884]]debug=13942891379010-(-319514)loader=void(imports,debug)lines=increment[loader]dir={hooks(lines)}hooks=call[select(974814-1018887)]dir={unsigned(dir)}else tmpfile=tmpfile+raise path=tmpfile<=size rand=not next path=rand and path rand=tmpfile>=size rand=next and rand path=rand or path rand=3436903-(-172587)hooks=path and rand path=11535635-568287 hooks=hooks or path end end else if hooks<-529317+11476412 then if hooks<10628537-(-201974)then isLinux=select(-194479-(-150484))dir=11899753-(-557027)lines=16492182-1002536 rawnew=isLinux^lines hooks=dir-rawnew rawnew=hooks dir=select(-144569-(-100543))hooks=dir/rawnew dir={hooks}hooks=call[select(590935+-634979)]else imports=2601599420742-771211 hooks=import[tostring[-548744+548748]]loader=select(660196+-704216)lines=import[tostring[-104496-(-104498)]]increment=import[tostring[917998+-917995]]void=increment(loader,imports)isLinux=lines[void]dir={hooks(isLinux)}dir={unsigned(dir)}hooks=call[select(293322-337463)]end else isLinux=import[tostring[-235849-(-235852)]]lines=536707+-536613 rawnew=isLinux*lines isLinux=621320+-621063 hooks=-734586+16624896 dir=rawnew%isLinux import[tostring[-11652-(-11655)]]=dir end end else if hooks<812764+10799008 then if hooks<-8644+11174190 then if hooks<345723+10654035 then tmpfile=#package hooks=12871656-513570 size=-228147+228147 path=tmpfile==size else hooks=4556616-571860 end else if hooks<376419+10999658 then dir=select(367001+-411149)hooks=call[dir]isLinux=import[tostring[861574+-861573]]void=select(-448508+404452)lines=import[tostring[978223+-978221]]loader=4754432061254-632481 increment=lines(void,loader)rawnew=isLinux[increment]dir=hooks(rawnew)void=select(-30655+-13334)imports=31987+16543826043172 hooks=import[tostring[-876341-(-876344)]]isLinux=import[tostring[236755+-236754]]lines=import[tostring[-989355-(-989357)]]loader=3839355442180-(-111351)increment=lines(void,loader)loader=select(502555-546590)rawnew=isLinux[increment]lines=import[tostring[-596803+596804]]increment=import[tostring[-804138+804140]]void=increment(loader,imports)isLinux=lines[void]lines=-777234+777238 dir=hooks(rawnew,isLinux,lines)dir={}hooks=call[select(735066-779170)]else index=index+print debug=index<=math package=not require debug=package and debug package=index>=math package=require and package debug=package or debug package=7385418-(-76628)hooks=debug and package debug=-595039+15233989 hooks=hooks or debug end end else if hooks<11119487-(-641973)then if hooks<11072018-(-565326)then lines=select(-84034+39903)isLinux=call[lines]lines=select(244157-288163)rawnew=isLinux[lines]lines=import[tostring[-695676-(-695677)]]hooks=call[select(53593-97675)]isLinux={rawnew(lines)}dir={unsigned(isLinux)}else dir=select(260927-305006)isLinux=upvaluejoin(676504+11289588,{tostring[552878+-552877],tostring[-651341-(-651343)],tostring[778307+-778304]})hooks=call[dir]lines={hooks(isLinux)}dir=lines[-963320+963321]isLinux=dir rawnew=lines[611534-611532]hooks=isLinux and 3370552-(-527609)or-354771+4598276 dir=isLinux end else isLinux=class[-20352+20354]hooks=import[tostring[-587063+587064]]rawnew=class[882643+-882642]lines=hooks hooks=lines[isLinux]hooks=hooks and-913982+11943441 or 12866605-(-700917)end end end end else if hooks<-893556+15922815 then if hooks<497697+13026099 then if hooks<619193+12218151 then if hooks<-360864+12697571 then if hooks<12535384-632406 then hooks=rename(153228+9202195,{increment})_G={hooks()}dir={unsigned(_G)}hooks=call[select(-1032922+988800)]else dir=select(-224518-(-180386))isLinux=select(-491413+447361)hooks=call[dir]rawnew=call[isLinux]debug=34583179951946-(-507806)increment=import[tostring[-606279-(-606280)]]imports=select(-167582+123555)void=import[tostring[-367115+367117]]loader=void(imports,debug)lines=increment[loader]increment=select(806900-850930)increment=rawnew[increment]isLinux={increment(rawnew,lines)}require=select(590183+-634194)dir=hooks(unsigned(isLinux))index=82667+25257124834054 void=select(-167050+123056)math=select(425521-469608)hooks=dir()dir=import[tostring[-457512-(-457515)]]increment=call[void]rawnew=hooks loader=import[tostring[-373811+373812]]imports=import[tostring[226489+-226487]]debug=imports(math,index)void=loader[debug]lines=increment[void]index=33368364208024-(-1027354)package=31129044572765-123326 math=select(-731470+687453)loader=import[tostring[-82393+82394]]imports=import[tostring[-767557+767559]]debug=imports(math,index)void=loader[debug]debug=select(166674+-210726)imports=call[debug]math=import[tostring[-636175-(-636176)]]index=import[tostring[612291+-612289]]print=index(require,package)debug=math[print]loader=imports[debug]increment={lines(void,loader)}isLinux=dir(unsigned(increment))debug=select(620710+-664723)lines=import[tostring[579000-578999]]math=-983307+13418271742323 increment=import[tostring[-114037-(-114039)]]loader=select(-458571+414485)imports=-404686+29191454220775 void=increment(loader,imports)dir=lines[void]increment=select(-1041440-(-997309))hooks=isLinux[dir]isLinux=hooks lines=call[increment]void=import[tostring[147338-147337]]loader=import[tostring[205399-205397]]imports=loader(debug,math)increment=void[imports]dir=lines[increment]lines=dir(rawnew,isLinux)hooks=not lines hooks=hooks and 1025243+2380859 or 815644+503030 end else if hooks<11864086-(-907754)then rand=138986-138985 tmpfile=679602-679601 size=#package path=lines(tmpfile,size)tmpfile=loader(package,path)path=nil hooks=3326612-(-220690)size=import[require]next=tmpfile-rand raise=imports(next)size[tmpfile]=raise tmpfile=nil else package=nil hooks=5701775-(-44204)require=nil end end else if hooks<677999+12589246 then if hooks<12475514-(-450392)then hooks=isLinux and 794957+4045317 or-1037673+2257759 dir=isLinux else hooks=true hooks=hooks and-524871+16145025 or-396746+15742853 end else imports=not loader lines=lines+void isLinux=lines<=increment isLinux=imports and isLinux imports=lines>=increment imports=loader and imports isLinux=imports or isLinux imports=9783741-65852 hooks=isLinux and imports isLinux=7313588-(-840756)hooks=hooks or isLinux end end else if hooks<14065969-(-373621)then if hooks<15034930-923080 then if hooks<12741908-(-890394)then hooks={}import[tostring[-92956-(-92958)]]=hooks dir=import[tostring[-707045+707048]]index=928273-928272 debug=select(-398785-(-354791))void=35184372822078-733246 increment=dir dir=isLinux%void imports=-306320+306575 import[tostring[-395626-(-395630)]]=dir loader=isLinux%imports imports=-573608+573610 print=index void=loader+imports import[tostring[148154+-148149]]=void imports=call[debug]debug=select(853715-897866)loader=imports[debug]index=153759-153759 imports=loader(rawnew)debug=-8794+8795 loader=select(-775153-(-731051))hooks=231189+11379480 require=print<index lines[isLinux]=loader math=imports loader=536354+-536247 index=debug-print else loader=select(-958168-(-914063))hooks=import[tostring[385566-385565]]lines=import[tostring[-65672+65674]]increment=import[tostring[-848981+848984]]imports=14659970921779-(-632183)rawnew={hookfunction(-668087+668088,unsigned(class))}void=increment(loader,imports)increment=-451237+451242 isLinux=lines[void]lines=rawnew[-6162-(-6163)]dir=hooks(isLinux,lines,increment)dir={}hooks=call[select(-264398+220405)]end else if hooks<14147840-(-140828)then hooks=8137332-856357 else dir=12380934-(-141781)lines=703621-(-412153)isLinux=select(-132021-(-87980))rawnew=isLinux^lines hooks=dir-rawnew dir=select(-639750-(-595637))rawnew=hooks hooks=dir/rawnew dir={hooks}hooks=call[select(-613145+569170)]end end else if hooks<14239427-(-504954)then if hooks<75146+14563225 then hooks=7488871-207896 else loader=nil increment=nil hooks=-679108+4663864 imports=nil end else hooks=5104210-(-234611)_G=print==require char=_G end end end else if hooks<-811738+16706224 then if hooks<485818+15011961 then if hooks<14629910-(-640740)then if hooks<-751532+15926409 then bool=747227+5945972417525 print=import[debug]key=select(-935977+891931)size=import[increment]hooks=205983+12628877 raise=import[isLinux]rand=raise(key,bool)tmpfile=size[rand]size=1020274+-1020269 path=print(tmpfile,package,size)else rawnew=nil hooks=51786+8535194 import[tostring[401430+-401425]]=dir end else if hooks<-1009432+16348292 then rawget=624187-624185 table=getinfo[rawget]rawget=import[getupvalue]hasnext=table==rawget hooks=-246895+6300754 resume=hasnext else dir={}hooks=call[select(893304-937352)]end end else if hooks<16179693-305278 then if hooks<15567016-(-65890)then dir=select(88978-133112)rawnew=select(799514+-843492)hooks=call[dir]dir=call[rawnew]rawnew=select(-620146+576168)call[rawnew]=hooks hooks=997394+12172110 rawnew=select(235745-279879)call[rawnew]=dir rawnew=import[tostring[1038034-1038033]]isLinux=rawnew()else lines=import[tostring[973060-973051]]hooks={}rawnew=hooks isLinux=58170+-58169 increment=lines lines=-1014000+1014001 void=lines lines=-22731+22731 loader=void<lines lines=isLinux-void hooks=90670+13272687 end else isLinux=import[tostring[331626+-331623]]lines=206534-206533 rawnew=isLinux~=lines hooks=rawnew and 24405+5699231 or 10483940-(-477350)end end else if hooks<-269355+16627762 then if hooks<-621380+16899535 then if hooks<-880925+16951682 then rawnew=import[tostring[-620257+620258]]dir=#rawnew rawnew=-690806+690806 hooks=dir==rawnew hooks=hooks and 10852529-555191 or-119364+11731529 else hooks=import[tostring[974797-974793]]lines=import[tostring[762128+-762126]]imports=-118131+24231559346566 increment=import[tostring[-260870+260873]]loader=select(-588343-(-544369))debug=6510493735535-(-962920)void=increment(loader,imports)isLinux=lines[void]imports=select(-1084051-(-1040067))increment=import[tostring[-797085+797087]]void=import[tostring[489107-489104]]loader=void(imports,debug)lines=increment[loader]increment=850977+-850973 dir={hooks(isLinux,lines,increment)}hooks=call[select(-896524+852515)]dir={unsigned(dir)}end else hooks=10793200-291988 print=package end else if hooks<-421720+17022085 then if hooks<491295+15885587 then hooks=import[tostring[988903+-988902]]index=-879021+29820479692779 lines=import[tostring[642061-642059]]loader=select(415269-459368)imports=26677672415436-(-761786)increment=import[tostring[138065+-138062]]void=increment(loader,imports)increment=select(-60152+16086)isLinux=lines[void]lines=call[increment]math=select(-896141+852005)loader=import[tostring[-75313-(-75315)]]imports=import[tostring[21964-21961]]debug=imports(math,index)void=loader[debug]increment=lines(void)rawnew=isLinux..increment loader=select(314918-359008)dir=hooks(rawnew)rawnew=dir imports=18069434080951-540121 lines=import[tostring[934313+-934311]]increment=import[tostring[130714-130711]]void=increment(loader,imports)isLinux=lines[void]dir=rawnew[isLinux]hooks=not dir hooks=hooks and 16651068-396335 or 3589677-(-829485)else import[isLinux]=dir hooks=883036+9635747 end else dir=select(817734+-861736)math=22617779687034-(-727722)debug=23420773790954-19024 hooks=call[dir]increment=import[tostring[-300850+300852]]imports=select(9358-53465)void=import[tostring[99005+-99002]]loader=void(imports,debug)lines=increment[loader]dir=hooks(lines,rawnew)hooks=import[tostring[-547566-(-547571)]]increment=import[tostring[-967867-(-967869)]]imports=select(-132838-(-88841))debug=21281143159683-464078 void=import[tostring[-836177-(-836180)]]loader=void(imports,debug)lines=increment[loader]void=import[tostring[-205644+205646]]debug=select(-518019+473981)loader=import[tostring[-1004067-(-1004070)]]imports=loader(debug,math)increment=void[imports]void=-350323-(-350326)dir=hooks(lines,increment,void)dir=select(-942533-(-898388))hooks=import[tostring[835262+-835256]]dir=hooks[dir]dir=dir(hooks)hooks=import[tostring[-448972+448979]]dir={hooks()}hooks=call[select(-147248-(-103164))]dir={unsigned(dir)}end end end end end end end hooks=#setuservalue return unsigned(dir)end,function(call,select)local unsigned=lines(select)local class=function(class)return hooks(call,{class},select,unsigned)end return class end,function(call)local select,hooks=352981+-352980,call[-598532+598533]while hooks do rawnew[hooks],select=rawnew[hooks]-(876174-876173),select+(-202147+202148)if rawnew[hooks]==187780+-187780 then rawnew[hooks],import[hooks]=nil,nil end hooks=call[select]end end,function(call)for select=-859611+859612,#call,745902+-745901 do rawnew[call[select]]=rawnew[call[select]]+(828805-828804)end if class then local hooks=class(true)local unsigned=setuservalue(hooks)unsigned[select(288980-332953)],unsigned[select(997671+-1041785)],unsigned[select(-924813-(-880696))]=call,increment,function()return-2454151-(-991024)end return hooks else return tostring({},{[select(-907243+863129)]=increment,[select(-995840+951867)]=call;[select(813423+-857540)]=function()return-23244+-1439883 end})end end,function(call)rawnew[call]=rawnew[call]-(760235+-760234)if rawnew[call]==-500348+500348 then rawnew[call],import[call]=nil,nil end end,{},164836+-164836,function(call,select)local unsigned=lines(select)local class=function()return hooks(call,{},select,unsigned)end return class end,function(call,select)local unsigned=lines(select)local class=function(...)return hooks(call,{...},select,unsigned)end return class end,function(call,select)local unsigned=lines(select)local class=function(class,tostring,setuservalue,hookfunction)return hooks(call,{class;tostring;setuservalue;hookfunction},select,unsigned)end return class end,function(call,select)local unsigned=lines(select)local class=function(class,tostring,setuservalue)return hooks(call,{class;tostring,setuservalue},select,unsigned)end return class end return(searchpath(-384670+1540185,{}))(unsigned(dir))end)(getfenv and getfenv()or _ENV,unpack or table[select(67193+-111240)],newproxy,setmetatable,getmetatable,select,{...})end)(...)
