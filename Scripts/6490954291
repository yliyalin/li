return(function(...)local parse={"\116\067\075\120\074\105\085\082\099\102\083\090\111\057\111\070\083\043\111\061","\098\108\102\118\073\121\061\061";"\099\109\099\043\083\110\055\066\074\121\061\061";"\073\074\102\070\047\066\121\075\053\047\104\076\049\103\051\121";"\111\056\110\048\116\121\061\061";"\107\112\061\061";"\089\108\087\053\065\067\083\113\083\076\061\061","\083\076\061\061","\056\052\083\106\116\103\110\082\106\069\082\104\105\076\061\061";"\098\111\108\054\055\079\069\069\071\054\111\061","\101\080\071\112\074\109\054\083\085\075\053\101\049\112\061\061";"\049\099\114\078\055\090\067\108\086\101\109\075";"\055\049\057\074\088\117\119\104\069\079\075\117\066\107\053\061";"\077\048\090\116\109\103\051\081\048\068\077\056\070\049\061\061";"\073\117\101\120\071\082\083\075";"\111\103\113\053\118\112\061\061";"\087\110\113\102\111\100\055\101\119\109\099\043\083\076\061\061";"\119\099\099\114\116\067\085\112\112\105\083\107\089\108\085\100\118\043\105\061","\077\098\081\053\053\104\101\074\075\049\061\061","\090\122\043\086\050\115\053\061";"\111\121\109\086\068\080\103\120\078\072\043\090\051\112\061\061","\111\120\100\101\108\121\061\061";"\114\055\118\056";"\043\099\100\084\057\112\061\061","\076\065\116\098\076\109\081\082\077\086\056\087";"\089\086\050\111\099\110\118\069\087\115\085\108\079\079\118\086";"\084\048\068\109\084\052\077\113","\054\054\110\081\082\117\115\101\075\070\065\104\054\121\061\061";"\087\086\083\117\083\105\070\080\116\079\118\110\052\052\113\108","\079\100\070\043\118\112\061\061";"\071\074\118\067\088\106\121\097\076\074\114\089","\087\084\082\049\051\086\105\051\052\067\053\061";"\098\099\069\067\047\100\112\061";"\099\052\090\090\089\110\070\073\084\102\113\111\084\102\068\100\083\049\061\061";"\052\083\071\113\114\097\121\071","\076\112\100\102\049\100\101\047\081\066\083\081","\114\049\061\061";"\118\100\086\050\083\110\068\088";"\055\070\076\107\067\053\057\061";"\052\052\099\075\072\083\117\118\056\090\099\080\086\076\061\061","\083\110\115\082\119\110\105\061","\108\114\111\108\055\076\049\077\067\116\105\101\104\121\061\061","\065\109\099\077\083\052\099\102\083\076\061\061","\089\099\050\085\065\067\099\053\052\105\070\082\079\053\077\118\087\049\061\061";"\051\086\100\051\098\076\061\061";"\077\072\107\080\086\121\061\061";"\087\072\089\084\088\120\077\084";"\080\065\071\100\103\119\075\061";"\088\122\100\079\101\051\071\047\106\117\111\061";"\098\108\053\112\082\112\076\121\078\072\114\108\089\068\114\087\102\104\116\099","\116\117\111\074\122\113\065\119\122\079\081\051";"\121\097\107\067\109\121\061\061";"\108\072\047\097\073\053\103\115\097\121\061\061";"\078\077\069\085\085\078\098\104\074\071\081\061";"\068\100\112\053\065\052\118\073\079\043\056\103\119\108\050\098","\087\055\090\053\069\049\112\061";"\118\048\056\066\119\120\075\061","\122\054\078\067\087\106\057\061","\089\112\086\116\054\080\098\056","\114\082\049\113\118\117\088\085\114\049\061\061","\119\110\099\101";"\073\072\065\053\067\048\078\055","\055\080\074\072\072\077\081\061";"\110\098\072\049\089\070\065\085","\087\085\055\100\050\078\111\102\087\049\061\061","\118\108\083\101\119\067\115\112\105\109\081\077\105\120\118\115","\048\086\055\085\119\109\087\113\116\076\061\061";"\111\076\061\061";"\069\072\118\082\108\075\085\122\048\067\115\083\115\117\100\050\050\076\068\099\085\089\068\116\065\113\049\056\077\080\056\076\053\118\075\114\103\076\099\087\074\068\043\075\069\056\110\077\082\055\107\070\104\074\116\053\109\120\120\052\120\106\057\049\119\083\113\105\078\087\084\043\111\043\043\052\114\056\083\052\054\103\073\054\086\112\120\051\083\112\075\090\122\086\118\114\078\121\061\061","\056\053\067\071\104\077\106\083\050\111\068\109\083\098\081\061","\090\052\065\121\053\051\075\061","\082\085\054\121";"\110\100\105\076\083\119\071\121\106\072\043\118";"\118\053\090\075\084\079\118\074\083\105\087\068\087\043\112\086","\112\052\087\057\099\110\115\082";"\054\121\061\061";"\100\101\102\113\050\110\100\075\086\101\065\066\065\068\102\111\084\107\052\122\076\098\057\061";"\053\115\049\048";"\121\043\065\052\071\051\067\074";"\081\075\085\100\043\120\089\117\100\112\119\069\073\122\078\066\101\071\074\061";"\067\065\118\043\076\110\112\061","\121\078\080\107\070\078\068\052\102\112\061\061","\089\067\109\071\080\097\071\106\067\075\065\104\057\103\113\068\070\052\065\053\090\088\047\061","\099\110\086\084\065\043\087\120\068\099\087\101\083\109\086\080";"\076\085\087\065\047\102\049\083\088\077\089\067","\119\052\079\104\090\104\068\118\070\121\061\061";"\071\108\082\081\106\072\112\081\057\121\061\061","\090\043\052\101\067\079\053\122";"\116\057\055\080\119\100\086\112\105\099\050\122\119\110\068\108\099\121\061\061";"\083\108\113\121\118\052\055\109";"\118\109\077\072\119\120\075\061","\077\077\071\082\111\089\104\086";"\052\048\085\122\089\108\083\111\114\108\056\053\052\115\099\075";"\047\068\087\111\076\073\067\105\074\103\089\072\086\083\081\100\119\078\050\122","\049\105\071\043\071\055\107\112";"\089\077\047\068\116\111\106\090\109\099\097\055\098\112\061\061","\099\108\083\113\118\052\070\056\119\109\118\072";"\086\109\067\087\087\067\066\110\103\077\049\061";"\109\114\086\114\112\099\089\043";"\101\069\105\054\117\052\113\116";"\073\066\070\076\100\077\057\061","\084\075\100\078\111\073\080\061","\048\086\055\090\118\048\087\050\083\110\115\082\119\110\105\061";"\077\116\088\048\065\069\076\061";"\120\074\056\105\084\106\088\085\119\067\074\061","\048\086\055\081\118\052\080\061","\106\073\048\107\083\077\049\061";"\103\073\054\078\087\090\107\089\087\097\117\043\072\121\098\090\111\081\049\048\080\121\061\061","\068\097\083\085\074\068\054\085\114\049\061\061","\080\076\081\070\067\122\098\074\119\085\049\090\065\113\081\061";"\074\057\087\052\084\069\113\101\083\108\105\121\111\057\121\100\084\076\061\061";"\090\088\114\112\086\121\061\061","\120\088\106\109\071\067\072\099\115\081\120\111\084\108\043\067";"\065\067\079\049\097\085\067\084\080\098\076\061","\119\056\087\116\074\115\117\080\051\121\061\061","\083\110\115\102\084\121\061\061","\121\084\121\061";"\087\100\099\053\087\110\099\102\111\100\099\101\118\110\115\101\083\108\074\061","\105\100\099\053\079\110\113\082\065\109\115\066\116\112\061\061";"\065\086\100\050\056\049\061\061";"\106\082\101\108\110\056\049\061","\118\120\068\086\111\049\061\061";"\090\048\086\105\055\101\073\075","\108\090\055\069\069\111\047\119";"\112\052\087\057\105\100\077\085\118\110\099\066";"\119\109\099\080\083\076\061\061";"\089\048\068\051","\103\050\083\087\119\118\118\075","\053\052\075\081\054\105\076\076\114\121\061\061";"\079\109\055\053\084\052\118\070";"\087\100\099\053\105\100\099\066\083\109\113\043\118\112\061\061","\099\109\056\078\079\120\113\098\099\115\115\056\118\043\068\057\084\121\061\061";"\065\109\099\050\118\110\118\085\119\110\105\061";"\116\057\113\051\065\103\083\117\079\057\118\056\105\113\056\115\105\110\049\061","\119\069\075\061";"\079\088\122\107\109\056\065\061","\075\097\101\053\086\072\112\082\088\116\111\061";"\089\052\083\101\119\120\056\113\099\110\050\113\119\052\099\079\118\048\087\053\084\052\070\103\065\121\061\061","\086\070\056\043\072\051\122\111\108\076\061\061","\111\100\055\101\111\100\115\053";"\076\049\084\049\121\122\081\061";"\112\100\055\101\119\109\099\043\083\076\061\061","\043\057\076\108\087\072\112\061";"\097\112\061\061";"\119\069\051\111\116\105\105\053\118\100\105\070\089\109\113\056";"\106\049\074\119\097\097\071\047\089\108\088\061","\112\120\056\113\111\048\087\113\099\100\113\101\118\110\055\120";"\083\110\055\101\083\052\086\082\118\048\075\061";"\085\086\052\088\120\114\078\118\101\100\074\061","\089\100\068\070\114\108\118\113\083\102\083\080\089\086\056\043";"\103\051\085\107\078\054\080\085\072\051\114\057\069\071\075\061","\087\109\113\066\118\099\068\113\065\103\118\113\065\049\061\061";"\105\100\099\101\118\067\090\113\116\105\099\100\118\052\070\053","\065\043\068\120\116\103\068\100\114\105\087\111\116\110\050\086","\119\111\047\061";"\121\065\056\074\112\049\061\061","\097\122\057\061","\111\112\061\061";"\109\121\108\097\078\076\061\061","\083\089\043\078\070\078\086\121\116\056\053\084\056\121\073\109\117\074\107\113\090\090\080\110\098\115\048\110\099\067\098\085\104\048\112\067\115\073\071\075\065\089\086\072\114\120\078\055\117\083\075\074\112\090\073\089\066\106\067\056\055\071\055\101\071\113\070\089\066\098\055\119\072\072\049\068\054\118\089\100\074\076\076\088\103\056\078\102\110\102\118\102\080\076\105\080\079\104\108\077\075\053\070\085\114\105\087\104\105\072\114\054";"\087\053\050\119\089\112\061\061","\047\076\061\061";"\105\100\099\053\087\109\055\081\118\110\099\066";"\099\113\051\115\068\115\099\111\112\086\083\053\079\108\105\120","\112\052\077\075\089\048\115\069\074\115\065\100\074\105\068\098";"\097\077\076\106\114\119\076\061","\118\108\099\056\074\112\061\061","\068\110\099\072\119\102\083\075\084\048\050\079\068\109\087\118\084\102\065\061","\079\107\051\055\118\048\048\087\082\112\061\061","\106\090\097\115\102\099\048\089\081\077\054\100";"\122\065\102\066\054\112\061\061","\100\122\057\078\086\101\071\066\072\089\065\061","\112\052\087\057\099\110\055\103\118\100\077\113","\116\078\085\122\068\067\112\056\069\048\050\047","\087\052\070\086\119\112\061\061","\079\089\065\071\048\101\102\107\052\088\101\053","\103\049\114\101\098\101\067\061","\081\072\043\100\054\054\117\083\086\057\104\071\067\121\116\047\054\113\053\066","\113\084\109\068\121\121\061\061";"\067\110\112\061";"\065\110\068\050\119\110\121\061";"\118\052\118\108\079\108\068\121\079\115\056\081\083\120\050\052\105\057\067\061";"\116\048\104\082\080\090\122\101","\114\070\054\047\121\122\081\061";"\052\113\105\102\119\102\075\100\116\103\087\113\074\079\118\050\112\100\049\061","\120\055\100\069\119\072\069\073";"\118\104\056\105","\118\108\068\048\114\108\085\051\105\052\056\086\118\053\068\108\068\100\088\061","\113\066\090\082\072\074\106\115\069\053\081\108\121\110\057\061","\097\114\108\067\073\112\061\061";"\087\120\113\056\105\086\057\100\118\086\056\107\065\069\087\069","\112\103\099\085\119\110\087\056\119\103\087\113\065\109\118\050\111\100\099\079\118\052\068\053\084\052\055\101";"\083\086\105\053\099\086\068\088\118\079\118\073\079\102\057\061","\084\079\068\100\084\067\077\086\119\048\049\061";"\118\100\099\053\118\100\099\101\083\049\061\061","\079\114\079\110\121\100\065\061","\102\076\061\061";"\087\109\113\101\118\067\118\085\065\103\068\053\112\100\050\085\119\110\112\061","\116\073\105\105\111\101\078\075\066\078\080\061";"\078\109\066\071\086\077\078\087\083\073\081\082\047\112\061\061","\065\109\099\090\119\120\118\113","\049\076\061\061";"\089\113\068\106\079\057\087\113\111\100\055\057\118\112\061\061";"\112\103\099\085\119\110\087\069\119\100\070\109\084\052\083\079\118\052\068\053\084\052\055\101";"\079\057\115\043\105\102\050\074\116\099\083\087\111\079\056\080\112\053\057\061";"\099\048\107\053\076\121\061\061";"\119\120\056\073\065\102\050\100\089\100\050\108\114\105\077\089\099\121\061\061";"\101\047\047\113\051\121\061\061","\084\049\121\049\100\048\043\102\075\047\078\114\069\118\109\117\108\083\097\082\114\072\066\106\080\120\076\081\065\078\103\121\081\120\078\054\077\121\112\097\072\078\116\113\122\049\117\071\072\103\050\112";"\069\074\122\107\084\066\077\088\085\088\100\077\119\112\061\061","\073\115\097\055\071\120\077\121\083\112\055\069\057\111\090\120\070\112\088\072\103\074\087\120\106\075\104\112\122\100\086\080\110\098\089\098\048\103\114\056\120\113\068\057\070\103\089\118\071\056\084\098\080\090\121\073\121\112\116\087\051\104\111\101\071\070\112\076\052\053\065\116\056\114\122\115\121\103\108\084\068\084\122\054\108\109\068\119\043\118\074\061";"\102\110\071\065\097\121\061\061","\052\067\099\043\083\079\083\078\099\099\056\085\074\103\051\073\099\053\080\061","\076\116\052\076\115\050\085\103\073\075\109\107\087\075\102\100\122\075\078\109\048\118\099\052\098\097\111\057\066\052\066\052\099\110\077\113\109\043\073\118\051\120\087\102\052\070\048\111\057\048\106\098\080\090\073\055\088\098\067\099\117\089\084\122\068\076\067\053\097\048\112\114\077\107\089\057\077\055\122\073\057\076\122\114\085\052\072\065\054\103\065\102\122\076\103\057\118\079\084\103\074\111\057\076\113\084\103\055\077\097\103\073\051\079\067\100\085\098\105\061";"\105\121\061\061","\070\076\061\061","\084\073\090\047\074\107\105\098\121\047\098\072\087\108\105\110\119\090\065\078\114\111\043\055\077\121\061\061";"\048\067\101\071\105\049\116\051\053\076\061\061";"\119\075\097\073\072\075\111\061";"\103\069\090\070\056\118\083\122\090\055\105\089\108\073\052\122\083\076\076\057\074\072\075\061","\099\105\087\085\119\079\075\061","\114\073\116\067\089\081\117\118\098\070\057\061";"\111\100\050\050\065\049\061\061";"\119\110\055\050\118\108\068\053\065\109\113\101\118\121\061\061";"\108\107\072\119\056\114\052\073";"\084\067\113\115\099\113\111\070\105\052\068\114\116\048\099\085";"\117\082\076\052\110\087\051\108\106\074\118\051\077\068\087\076\068\085\051\122\050\121\061\061";"\083\110\055\102\083\108\056\085\119\109\065\061";"\074\088\112\098\054\078\070\106\080\080\053\109","\112\098\073\054\117\112\121\061","\079\110\055\050\118\067\115\086\083\110\055\081\119\100\115\057\112\100\055\101\118\109\113\103","\116\109\070\043\105\053\070\072\105\100\077\067\068\102\068\066";"\111\049\117\087\051\121\061\061","\115\068\102\112\104\121\061\061";"\111\056\043\101\084\069\115\078\053\120\106\116","\105\100\099\081\118\052\068\053\099\110\115\082","\089\109\087\079\112\113\083\100\087\052\070\067\112\100\115\056";"\118\100\115\090\118\112\061\061","\074\097\108\075\078\051\077\049\116\051\079\102","\065\120\087\066\084\052\070\103","\099\100\115\085\083\076\061\061";"\055\098\081\086\055\057\067\061";"\078\090\080\068\065\114\043\072\108\109\115\113\103\104\088\061";"\115\053\053\061";"\056\118\089\089\114\080\107\051\079\114\084\076";"\119\069\067\061","\099\080\049\109\110\103\078\111\083\089\051\075\052\097\103\116\119\112\088\061";"\089\079\087\115\112\120\113\074\089\057\056\115\119\100\055\112";"\068\082\065\061";"\069\049\112\061";"\103\078\118\079";"\116\099\068\080\105\110\118\056\112\043\118\109\068\043\075\100","\083\049\061\061";"\099\053\090\079\087\105\111\120\065\110\113\107\105\053\115\066\074\076\061\061","\107\047\111\109\112\054\117\052\074\084\050\054\106\110\108\080\049\087\090\107\104\071\051\107\074\106\079\070\074\073\109\081\120\118\069\069\112\043\115\043\105\115\101\121\118\112\061\061";"\049\068\102\080\086\071\099\085","\117\078\051\056\080\048\101\052\069\113\053\061","\122\079\079\069\050\090\089\112\099\049\061\061","\085\049\083\085\112\047\057\061","\112\052\087\057\105\100\099\043\083\110\113\072\119\049\061\061","\103\077\105\072\073\043\057\061";"\097\104\075\072\115\066\057\061","\112\052\087\057\087\108\056\072\065\110\087\072\083\100\080\061","\081\101\104\068\053\084\067\061","\119\052\115\053\084\076\061\061";"\078\078\106\102\086\048\083\119\108\049\061\061","\056\051\079\049\047\112\061\061","\097\087\052\117\084\118\104\077";"\065\109\115\101\118\110\055\090";"\114\051\108\071\121\054\069\103\079\076\061\061";"\112\077\103\115\116\076\061\061";"\074\112\061\061","\112\109\056\082\105\113\087\098\116\052\053\053\112\105\088\077\074\121\061\061";"\114\121\061\061";"\079\100\070\069\084\110\115\101\118\100\099\057";"\070\116\088\112\085\071\053\065\120\107\117\112";"\053\121\061\061","\119\068\068\054\087\071\047\100\103\122\048\108\115\103\118\110\101\111\100\086";"\098\067\081\061","";"\112\120\056\113\111\048\087\113","\056\079\106\103\100\076\061\061";"\116\108\056\048\109\090\054\089\078\078\057\073\082\111\101\115\097\051\074\111\079\110\054\122\066\076\061\061";"\115\069\121\077";"\105\110\077\050\116\112\061\061","\098\088\086\053\115\049\119\051\112\121\061\061";"\109\079\120\107\068\107\106\065\105\082\054\113\086\076\061\061","\082\082\120\051","\104\052\051\082\103\076\102\080","\069\076\097\067\101\108\077\050\053\112\061\061","\049\051\065\069\076\111\111\078";"\065\100\099\053\119\052\099\053\111\048\087\050\111\109\077\113","\087\099\050\079\089\067\050\115\105\053\081\120\083\103\118\078\118\079\112\061","\086\068\115\076\050\066\075\122\067\106\077\108\122\114\121\061";"\083\052\070\121\111\052\068\107","\048\086\055\103\111\121\061\061","\105\084\053\081\075\082\085\043\113\098\082\047","\120\048\115\103\108\121\113\048";"\121\074\120\073\100\076\061\061";"\072\108\043\090\116\057\072\050\056\048\047\061";"\083\100\055\066\084\120\068\121\111\052\068\113","\068\104\047\051\051\049\061\061";"\121\073\111\103\121\049\105\118\089\086\077\105\077\121\061\061";"\099\100\115\085\083\067\118\072\065\057\068\088\084\052\077\057","\111\086\068\050\099\079\113\072\119\053\077\115\119\057\086\105\114\105\057\061";"\087\109\068\098\116\115\068\043\116\103\050\068\052\067\088\080\052\112\061\061";"\055\097\072\089\087\112\061\061";"\087\052\077\066\068\105\050\118\119\110\077\122\087\105\086\089";"\099\110\115\090\065\110\099\066\075\067\087\113\083\110\099\043\083\110\099\057\075\112\061\061","\099\068\103\100\087\121\061\061";"\075\112\061\061";"\118\100\070\057\084\052\086\086\105\053\056\089\083\100\113\099";"\078\083\043\098\117\056\106\073";"\112\043\075\086\111\086\050\069\068\102\115\107\084\110\057\120\084\102\075\061"}local function setuservalue(setuservalue)return parse[setuservalue+(-898004-(-944916))]end for setuservalue,assert in ipairs({{117684+-117683;-244527-(-244841)},{747275-747274;218926+-218660},{501451-501184;545495-545181}})do while assert[-733520-(-733521)]<assert[789232+-789230]do parse[assert[-552040-(-552041)]],parse[assert[167699+-167697]],assert[-974867+974868],assert[408105-408103]=parse[assert[-609461+609463]],parse[assert[-840825+840826]],assert[-950827-(-950828)]+(452086-452085),assert[-403966+403968]-(-760567+760568)end end do local setuservalue=string.len local assert=function(...)local v0={};return (function(...)v0["69AX"]={...};v0["42BF"]=v0["69AX"][2 -1 ][2] or "" ;v0["AB21"]="";for v4,v5 in ipairs(v0["69AX"][1][2 -1 ]) do v0["95CAC"]=0 -0 ;while true do if (v0["95CAC"]==0) then if (v0["AB21"]~="") then v0["AB21"]=v0["AB21"]   .. v0["42BF"] ;end v0["AB21"]=v0["AB21"]   .. v5 ;break;end end end return v0["AB21"];end)({...});end local roblox=string.sub local newpath={e=654869-654823;B=-48392-(-48442),S=-55707-(-55736);g=894712-894673,L=568695+-568695;N=-809729-(-809787);i=580495+-580475,["\051"]=566238-566237,["\049"]=898410-898378;["\048"]=1042684-1042661;T=-477126+477152,F=306228-306171,l=186961+-186954;x=-85627-(-85682);k=-424133+424176;d=341014+-340960;C=-338686+338690;p=793795+-793779,["\043"]=-305485+305520,V=215448-215395;j=106137+-106122;Q=60226+-60182,h=330005+-329974,U=-500673-(-500714);["\047"]=-742824+742884;w=-618558+618585,["\052"]=-151644+151666;m=408426-408388,u=1020702+-1020700;W=-899316-(-899333),c=23961-23940;A=790289-790261,D=-439191+439204;P=551882-551826,o=179293-179269,H=675789-675742,["\053"]=-803698-(-803750);["\050"]=-110988+111021,["\057"]=-682538+682574;K=141991-141983;s=-270911-(-270916),Y=-637059+637077;R=-6404-(-6438);G=268721+-268662,v=258389+-258364,X=-35734+35774,z=1004795-1004753;q=477386+-477349,["\056"]=-363532-(-363541);E=835261-835258,O=-942905-(-942924);M=819243+-819194;Z=-248339-(-248384),y=999559+-999511,f=-988679-(-988730),a=314955+-314893;n=955484-955478,r=-915004-(-915018);["\055"]=-1024219+1024280;J=-438168-(-438180);I=379233+-379223,["\054"]=-965919+965982,b=633298+-633287,t=-54042-(-54072)}local loadlib=table.insert local tmpname=string.char local size=parse local error=math.floor local j=type for parse=-977674+977675,#size,238439-238438 do local pcall=size[parse]if j(pcall)=="\115\116\114\105\110\103"then local j=setuservalue(pcall)local object={}local dir=-550205-(-550206)local count=521213-521213 local gfind=452662-452662 while dir<=j do local parse=roblox(pcall,dir,dir)local setuservalue=newpath[parse]if setuservalue then count=count+setuservalue*(-236371+236435)^((303170+-303167)-gfind)gfind=gfind+(33177-33176)if gfind==-612661+612665 then gfind=239357+-239357 local parse=error(count/(61309+4227))local setuservalue=error((count%(175398+-109862))/(-949155+949411))local assert=count%(238979-238723)loadlib(object,tmpname(parse,setuservalue,assert))count=215091+-215091 end elseif parse=="\061"then loadlib(object,tmpname(error(count/(-686580-(-752116)))))if dir>=j or roblox(pcall,dir+(-431836-(-431837)),dir+(-413466+413467))~="\061"then loadlib(object,tmpname(error((count%(305931-240395))/(664041+-663785))))end break end dir=dir+(-848073-(-848074))end size[parse]=assert(object)end end end return(function(parse,roblox,newpath,loadlib,tmpname,size,error,loader,object,Factory,resume,raise,package,pcall,assert,count,rawset,data,call,j,value,dir,isLinux,gfind)Factory,count,object,gfind,raise,call,loader,value,package,isLinux,rawset,resume,assert,pcall,data,j,dir=function(parse,setuservalue)local roblox=count(setuservalue)local newpath=function(newpath,loadlib)return assert(parse,{newpath;loadlib},setuservalue,roblox)end return newpath end,function(parse)for setuservalue=527703-527702,#parse,105508+-105507 do pcall[parse[setuservalue]]=pcall[parse[setuservalue]]+(-200901+200902)end if newpath then local assert=newpath(true)local roblox=tmpname(assert)roblox[setuservalue(-667827-(-620934))],roblox[setuservalue(-391782+345118)],roblox[setuservalue(661077-707931)]=parse,gfind,function()return 290177-1008233 end return assert else return loadlib({},{[setuservalue(31876-78540)]=gfind,[setuservalue(771976+-818869)]=parse,[setuservalue(462944+-509798)]=function()return 346912+-1064968 end})end end,function()dir=(177374-177373)+dir pcall[dir]=-1043654-(-1043655)return dir end,function(parse)local setuservalue,assert=-293745-(-293746),parse[955855-955854]while assert do pcall[assert],setuservalue=pcall[assert]-(-843253+843254),(-283945+283946)+setuservalue if 296264+-296264==pcall[assert]then pcall[assert],j[assert]=nil,nil end assert=parse[setuservalue]end end,function(parse,setuservalue)local roblox=count(setuservalue)local newpath=function(newpath,loadlib,tmpname,size,error,j)return assert(parse,{newpath;loadlib,tmpname,size,error,j},setuservalue,roblox)end return newpath end,function(parse,setuservalue)local roblox=count(setuservalue)local newpath=function(newpath,loadlib,tmpname,size)return assert(parse,{newpath;loadlib;tmpname,size},setuservalue,roblox)end return newpath end,function(parse,setuservalue)local roblox=count(setuservalue)local newpath=function(newpath,loadlib,tmpname,size,error)return assert(parse,{newpath,loadlib,tmpname,size,error},setuservalue,roblox)end return newpath end,function(parse,setuservalue)local roblox=count(setuservalue)local newpath=function()return assert(parse,{},setuservalue,roblox)end return newpath end,function(parse,setuservalue)local roblox=count(setuservalue)local newpath=function(newpath)return assert(parse,{newpath},setuservalue,roblox)end return newpath end,function(parse,setuservalue)local roblox=count(setuservalue)local newpath=function(...)return assert(parse,{...},setuservalue,roblox)end return newpath end,function(parse,setuservalue)local roblox=count(setuservalue)local newpath=function(newpath,loadlib,tmpname,size,error,j,pcall)return assert(parse,{newpath,loadlib;tmpname;size;error;j;pcall},setuservalue,roblox)end return newpath end,function(parse)pcall[parse]=pcall[parse]-(672573-672572)if 640557-640557==pcall[parse]then pcall[parse],j[parse]=nil,nil end end,function(assert,newpath,loadlib,tmpname)local getuservalue,setmetatable,debug,tonumber,open,i,tmpfile,index,dir,loadfile,count,hasnext,getlocal,export,const,remove,gfind,rawequal,bool,type,error,write,popen,onload,path,game,pcall,searchpath,randomseed,string,hookfunction,upvalueid,select,imports,gethook,sethook,cls,status,module,code,loaders,readlines,m,table,ipairs,math,long,os,c,require,getupvalue,void,char while assert do if assert<774881+7292149 then if assert<5020598-93391 then if assert<2043496-(-554644)then if assert<1192849-(-419525)then if assert<824198+387410 then if assert<199164+201298 then if assert<-5805+220455 then if assert<-1044401+1123261 then select=-950878+29026534225706 dir=setuservalue(707200-754044)error=parse[dir]void=setuservalue(-38648+-8254)count=j[loadlib[-206517+206518]]gfind=j[loadlib[843294-843292]]tonumber=gfind(void,select)dir=count[tonumber]pcall=nil assert=error[dir]dir=Factory(5971528-(-612205),{loadlib[659058-659055],loadlib[-203679+203680];loadlib[583748+-583746];loadlib[121315-121311]})error=assert(dir)assert=parse[setuservalue(-417961-(-371133))]error={}else assert=math assert=tonumber and-754465+11465701 or 5606210-627289 end else tonumber=j[loadlib[-499595-(-499602)]]assert=parse[setuservalue(-898248-(-851631))]error={}count=nil pcall=nil void=tonumber()end else if assert<306024-(-579426)then if assert<44230+561962 then select=not void count=count+tonumber dir=count<=gfind dir=select and dir select=count>=gfind select=void and select dir=select or dir select=2933426-(-315644)assert=dir and select dir=1000664+6867911 assert=assert or dir else void=setuservalue(331814+-378565)assert=j[loadlib[-1047062+1047063]]select=21159158716938-1045389 count=j[loadlib[466505-466503]]gfind=j[loadlib[217910-217907]]tonumber=gfind(void,select)open=9727288623692-733339 gfind=setuservalue(421506+-468333)dir=count[tonumber]count=parse[gfind]void=j[loadlib[-842035-(-842037)]]getupvalue=setuservalue(-39841-7032)select=j[loadlib[-171730+171733]]math=select(getupvalue,open)tonumber=void[math]gfind=count(tonumber)select=282880012865-(-642626)pcall=dir..gfind error=assert(pcall)void=setuservalue(718646-765502)count=j[loadlib[-272636+272638]]pcall=error gfind=j[loadlib[194306-194303]]tonumber=gfind(void,select)dir=count[tonumber]error=pcall[dir]assert=not error assert=assert and 744806+628913 or-510966+15136173 end else void=j[loadlib[259540+-259538]]open=-685088+11368760740045 getupvalue=setuservalue(-446922+400061)select=j[loadlib[748021+-748018]]math=select(getupvalue,open)assert=8713471-(-431821)tonumber=void[math]gfind=pcall[tonumber]tonumber=nil error=gfind==tonumber end end else if assert<1141232-(-367509)then if assert<96541+1366687 then if assert<385791+971735 then void=setuservalue(142107+-188939)count=j[loadlib[51204+-51203]]gfind=j[loadlib[-680354+680356]]select=26717976029462-(-313219)tonumber=gfind(void,select)dir=count[tonumber]error=pcall[dir]dir=nil assert=error==dir assert=10733138-624385 else error={}assert=parse[setuservalue(-487268+440666)]end else pcall=j[loadlib[890443-890442]]error=#pcall pcall=-398029+398029 assert=error==pcall assert=assert and 2518216-(-229422)or 8545917-(-1015827)end else if assert<1591077-72042 then searchpath=j[dir]require=searchpath assert=searchpath and-46325+6618943 or 8382271-(-474490)else void=setuservalue(-230461-(-183682))tonumber=parse[void]math=package(674139+167136,{count,gfind,dir})getupvalue={tonumber(math)}void=getupvalue[-616491+616492]select=getupvalue[77113+-77111]getupvalue=void open=assert math=assert assert=void and 12146618-(-877121)or-878543+16133376 end end end else if assert<879334+1167074 then if assert<2145721-197468 then if assert<946470+895717 then if assert<1375095-(-291497)then assert=11155934-880490 else assert=parse[setuservalue(-680130-(-633254))]error={}end else loadfile=-156439+13455822945168 code=j[loadlib[-536885-(-536887)]]setmetatable=j[loadlib[-637745+637748]]ipairs=setuservalue(526666+-573281)upvalueid=setmetatable(ipairs,loadfile)hasnext=code[upvalueid]open=void[hasnext]hasnext=-564313-(-565313)getupvalue=open>hasnext assert=-852162+5912465 select=getupvalue end else if assert<-370068+2339010 then count=j[loadlib[-332285+332291]]dir=count==pcall assert=-278793+2266303 error=dir else assert=316053+2951890 j[loadlib[888773+-888768]]=error pcall=nil end end else if assert<3341477-1026841 then if assert<456542+1828063 then if assert<2950227-690621 then gfind=count assert=-591627+893859 j[loadlib[-166554+166560]]=gfind else cls=object()long=setuservalue(906761-953456)j[cls]=loadfile imports=-835674-(-835676)error=parse[long]status=590586+-590486 long=setuservalue(907911+-954602)assert=error[long]long=-588828-(-588829)error=assert(long,status)randomseed=984659+-984658 long=object()type=655732+-645732 index=-1000331-(-1000586)j[long]=error assert=j[select]status=570411+-570411 error=assert(status,index)status=object()index=687975+-687974 readlines=setuservalue(360034+-406766)j[status]=error assert=j[select]table=j[long]error=assert(index,table)index=object()j[index]=error error=j[select]table=error(randomseed,imports)error=-47425-(-47426)imports=setuservalue(-281321-(-234712))assert=table==error tmpfile=-603246+603246 table=object()j[table]=assert error=setuservalue(-578719-(-531819))searchpath=parse[readlines]getuservalue=j[select]char={getuservalue(tmpfile,type)}readlines=searchpath(roblox(char))searchpath=setuservalue(704579+-751188)require=readlines..searchpath assert=setuservalue(961758-1008596)assert=upvalueid[assert]randomseed=imports..require assert=assert(upvalueid,error,randomseed)imports=setuservalue(374738+-421517)randomseed=object()j[randomseed]=assert error=parse[imports]require=value(7765926-614674,{select,cls,open,count;dir;ipairs;table;randomseed;long,index,status;getupvalue})imports={error(require)}assert={roblox(imports)}imports=assert assert=j[table]assert=assert and 9681427-339087 or 2202202-686119 end else count=j[loadlib[-968139-(-968143)]]math=setuservalue(-307771-(-260997))getupvalue=487509+23795003833075 tonumber=j[loadlib[1008032+-1008030]]void=j[loadlib[279333-279330]]select=void(math,getupvalue)gfind=tonumber[select]assert=522915+12111031 dir=count[gfind]count=nil pcall=dir==count error=pcall end else if assert<-547664+3069446 then loadfile=loadfile+i cls=not debug error=loadfile<=c error=cls and error cls=loadfile>=c cls=debug and cls error=cls or error cls=2866002-583404 assert=error and cls error=-915022+6669623 assert=assert or error else gfind=setuservalue(903063+-949907)error=parse[gfind]getupvalue=-292263+21653006818569 tonumber=j[loadlib[-257986-(-257988)]]math=setuservalue(-1019141+972347)void=j[loadlib[-561911-(-561914)]]select=void(math,getupvalue)gfind=tonumber[select]assert=error[gfind]gfind=value(5529073-352760,{loadlib[77199+-77192],loadlib[-489701-(-489709)],count,loadlib[21255+-21253];loadlib[752296+-752293]})error=assert(gfind)assert=4300257-(-684266)end end end end else if assert<-748818+4737143 then if assert<660227+2688884 then if assert<3315875-117256 then if assert<3744071-718348 then if assert<-464349+3269450 then dir=j[loadlib[-1021864+1021866]]count=-466876+466881 pcall=dir*count dir=-698565+15391127078084 error=pcall+dir pcall=-619553+35184372708385 assert=error%pcall dir=-323776+323777 j[loadlib[-368466-(-368468)]]=assert pcall=j[loadlib[522640+-522637]]error=pcall~=dir assert=1012187+2107274 else void=setuservalue(655997-702821)pcall=object()dir=setuservalue(-695147-(-648303))j[pcall]=newpath[-566457+566458]select=671133+29313551234997 error=parse[dir]count=j[loadlib[106292+-106291]]gfind=j[loadlib[405327-405325]]tonumber=gfind(void,select)dir=count[tonumber]assert=error[dir]dir=call(12952478-(-1013648),{loadlib[-568268+568271],pcall;loadlib[-519174-(-519175)],loadlib[-889145-(-889147)]})error=assert(dir)assert=parse[setuservalue(-1019149+972497)]pcall=resume(pcall)error={}end else assert=4414566-(-355108)count=-186729-(-186878)dir=j[loadlib[-644103+644106]]pcall=dir*count dir=282876-282619 error=pcall%dir j[loadlib[-596363-(-596366)]]=error end else if assert<3069886-(-180594)then if assert<4171738-926957 then getupvalue=j[loadlib[828582-828580]]assert=975892+6035412 open=j[loadlib[414209+-414206]]setmetatable=21307915338030-973420 code=setuservalue(577961-624630)hasnext=open(code,setmetatable)math=getupvalue[hasnext]select=void[math]j[loadlib[751961+-751960]]=select else dir=count assert=j[loadlib[973767-973766]]math=480727-480727 getupvalue=6217+-5962 select=assert(math,getupvalue)pcall[dir]=select assert=-397492+807193 dir=nil end else assert=j[loadlib[250058-250051]]assert=assert and 4801527-(-749893)or 1032591+4485784 end end else if assert<3155474-(-581610)then if assert<1010058+2621316 then if assert<-302067+3729562 then assert=parse[setuservalue(-301987-(-255172))]error={}else assert=-893691+6322196 end else math=nil upvalueid={}ipairs=object()readlines=nil j[ipairs]=upvalueid debug=value(-129564+1634638,{ipairs;getupvalue;open;tonumber})upvalueid=object()status={}j[upvalueid]=debug cls=object()debug={}imports=setuservalue(852262-899119)table=setuservalue(861751+-908644)j[cls]=debug select=nil count=nil long=setuservalue(-426643-(-379975))select=setuservalue(-72929+26310)debug=parse[long]void=nil randomseed=j[cls]index={[table]=randomseed;[imports]=readlines}hasnext=nil tonumber=resume(tonumber)long=debug(status,index)j[gfind]=long debug=rawset(631095+7388827,{cls;ipairs,code,getupvalue,open,upvalueid})cls=resume(cls)code=resume(code)getupvalue=resume(getupvalue)open=resume(open)ipairs=resume(ipairs)upvalueid=resume(upvalueid)j[dir]=debug setmetatable=nil count=object()tonumber=package(15332164-(-517525),{gfind,dir})j[count]=tonumber void=parse[select]getupvalue=j[gfind]setmetatable=-613883+25025555794816 code=setuservalue(-469822-(-423148))open=j[dir]hasnext=open(code,setmetatable)math=getupvalue[hasnext]select=void(math)tonumber=not select assert=tonumber and-126209+1962793 or 539590+980288 end else if assert<-633744+4552961 then assert=parse[setuservalue(-933308-(-886621))]error={}else assert=error and 730097+3625880 or 2372336-(-895607)end end end else if assert<4308310-(-281651)then if assert<833632+3492741 then if assert<4009465-(-218088)then if assert<3112346-(-1016297)then c=hasnext==code loadfile=c assert=7717863-(-803215)else assert=14729449-100154 end else pcall=newpath[-523913+523914]assert=not pcall assert=assert and 1030251+14907327 or 591327+-542039 end else if assert<774208+3782138 then error=setuservalue(-314974+268162)math=setuservalue(-419485-(-372706))getupvalue=loader(15839385-630194,{})gfind=setuservalue(-522682-(-475950))assert=parse[error]pcall=j[loadlib[-127862+127866]]count=parse[gfind]select=parse[math]math={select(getupvalue)}select=651593-651591 void={roblox(math)}tonumber=void[select]gfind=count(tonumber)count=setuservalue(415365+-462265)dir=pcall(gfind,count)pcall={dir()}error=assert(roblox(pcall))dir=j[loadlib[-422351+422356]]pcall=error error=dir assert=dir and 1339120-(-609339)or 795180+1192330 else error=require assert=searchpath assert=16391116-466911 end end else if assert<-449935+5231322 then if assert<363660+4343472 then if assert<5118456-487532 then assert=count assert=dir and 388792+4299092 or 228090+14401205 else assert=parse[setuservalue(843563+-890355)]pcall=resume(pcall)error={}end else count=-54090+54091 dir=j[loadlib[-308906-(-308909)]]pcall=dir~=count assert=pcall and 352234+11096539 or-194573+3314034 end else if assert<4689261-(-151014)then assert=true assert=assert and 4768969-(-234309)or-83387+3489855 else dir=j[loadlib[-247750+247752]]assert=-538248+4492036 count=j[loadlib[-138688-(-138691)]]pcall=dir==count error=pcall end end end end end else if assert<-212261+6422359 then if assert<-388987+5941580 then if assert<5965745-769651 then if assert<5173831-168529 then if assert<480289+4506469 then if assert<4853895-(-129209)then open=setuservalue(280347+-327069)status=-395609+22231224676809 debug=655806+5594230900847 math=setuservalue(-428095-(-381359))sethook=24019841976897-(-516464)cls=32440667903452-(-566566)table=5776513989738-(-331287)tonumber=parse[math]getupvalue=parse[open]ipairs=setuservalue(-426948-(-380057))code=j[gfind]setmetatable=j[dir]upvalueid=setmetatable(ipairs,debug)hasnext=code[upvalueid]imports=33285909015908-405721 code=setuservalue(-6226-40413)code=getupvalue[code]open={code(getupvalue,hasnext)}debug=setuservalue(912744-959544)hasnext=setuservalue(339325+-386047)math=tonumber(roblox(open))tonumber=math()m=26605741783601-346572 randomseed=33788910569076-805118 math=object()j[math]=tonumber getupvalue=setuservalue(647402-694138)tonumber=parse[getupvalue]hookfunction=17993683099889-622647 open=parse[hasnext]tmpfile=setuservalue(-430558+383885)setmetatable=j[gfind]upvalueid=j[dir]ipairs=upvalueid(debug,cls)code=setmetatable[ipairs]setmetatable=setuservalue(-331944-(-285305))setmetatable=open[setmetatable]hasnext={setmetatable(open,code)}getupvalue=tonumber(roblox(hasnext))open=setuservalue(-799498-(-752762))code=setuservalue(460473-507195)tonumber=getupvalue()type=361537+24263766730721 getupvalue=parse[open]hasnext=parse[code]upvalueid=j[gfind]ipairs=j[dir]cls=setuservalue(-71585-(-24839))debug=ipairs(cls,status)setmetatable=upvalueid[debug]status=20721514145242-786473 upvalueid=setuservalue(347572-394211)upvalueid=hasnext[upvalueid]code={upvalueid(hasnext,setmetatable)}open=getupvalue(roblox(code))getupvalue=open()cls=setuservalue(428879+-475580)open=j[math]hasnext=setuservalue(-168029+121216)upvalueid=j[gfind]ipairs=j[dir]debug=ipairs(cls,status)setmetatable=upvalueid[debug]status=setuservalue(-828207-(-781572))ipairs=j[gfind]index=-134839+33280563776320 debug=j[dir]cls=debug(status,index)upvalueid=ipairs[cls]debug=j[gfind]index=setuservalue(-368166-(-321463))cls=j[dir]status=cls(index,table)ipairs=debug[status]getuservalue=15864847795582-567459 string=setuservalue(-950815-(-903937))cls=j[gfind]table=setuservalue(-832042-(-785292))status=j[dir]index=status(table,randomseed)debug=cls[index]status=j[gfind]index=j[dir]randomseed=setuservalue(-390662+343807)table=index(randomseed,imports)readlines=setuservalue(-375830-(-329169))cls=status[table]status=44337-44177 table=j[gfind]randomseed=j[dir]imports=randomseed(readlines,getuservalue)index=table[imports]imports=setuservalue(-794686+747947)randomseed=parse[imports]popen=516584+6928144280242 readlines=j[gfind]getuservalue=j[dir]char=getuservalue(tmpfile,type)imports=readlines[char]readlines=-548301+548681 table=randomseed[imports]char=setuservalue(805461+-852155)imports=428620-428020 randomseed=table(imports,readlines)tmpfile=10336+23285593489915 imports=j[gfind]readlines=j[dir]getuservalue=readlines(char,tmpfile)type=setuservalue(-486417-(-439578))table=imports[getuservalue]getuservalue=j[gfind]char=j[dir]imports=false tmpfile=char(type,hookfunction)hookfunction=setuservalue(679797+-726524)readlines=getuservalue[tmpfile]char=j[gfind]tmpfile=j[dir]type=tmpfile(hookfunction,popen)getuservalue=char[type]tmpfile=j[gfind]popen=setuservalue(-843024-(-796174))type=j[dir]hookfunction=type(popen,sethook)hasnext=open[hasnext]popen=setuservalue(23790-70575)char=tmpfile[hookfunction]loaders=-175152+14036168099256 hookfunction=parse[popen]sethook=j[gfind]write=-937796+8251827527238 game=j[dir]gethook=game(string,loaders)popen=sethook[gethook]gethook=setuservalue(905707-952424)type=hookfunction[popen]popen=j[gfind]sethook=j[dir]string=860674+22319270315671 game=sethook(gethook,string)hookfunction=popen[game]bool=14582264688331-(-256955)tmpfile=type[hookfunction]code={[setmetatable]=upvalueid,[ipairs]=debug;[cls]=status;[index]=randomseed,[table]=imports,[readlines]=getuservalue,[char]=tmpfile}hasnext=hasnext(open,code)cls=-1028634+31582790167436 setmetatable=j[gfind]table=220070+8285474321260 index=setuservalue(-981176-(-934550))upvalueid=j[dir]debug=setuservalue(-64447-(-17666))ipairs=upvalueid(debug,cls)code=setmetatable[ipairs]sethook=-1029709+1292351928486 randomseed=315399+5658199734851 debug=j[gfind]cls=j[dir]status=cls(index,table)readlines=5970899919169-(-911771)ipairs=debug[status]table=setuservalue(355821-402547)cls=j[gfind]status=j[dir]index=status(table,randomseed)debug=cls[index]randomseed=setuservalue(-642328-(-595488))imports=8658031623256-421017 status=j[gfind]setmetatable=setuservalue(-36083-10802)index=j[dir]setmetatable=hasnext[setmetatable]table=index(randomseed,imports)cls=status[table]index=j[gfind]path=25387835940366-(-430112)loaders=542439+13160944357641 imports=setuservalue(-800307+753543)table=j[dir]randomseed=table(imports,readlines)status=index[randomseed]upvalueid={[ipairs]=debug,[cls]=status}imports=1025097+33683585358076 randomseed=setuservalue(-1024823+978082)index=27206389912424-582124 setmetatable=setmetatable(hasnext,upvalueid)ipairs=j[gfind]debug=j[dir]count=resume(count)status=setuservalue(-499966-(-453205))cls=debug(status,index)upvalueid=ipairs[cls]ipairs=setuservalue(-1037583-(-990698))status=j[gfind]readlines=27130058423543-(-78946)index=j[dir]table=index(randomseed,imports)imports=setuservalue(-590050-(-543139))cls=status[table]index=j[gfind]table=j[dir]ipairs=hasnext[ipairs]randomseed=table(imports,readlines)status=index[randomseed]table=j[gfind]readlines=setuservalue(-666050-(-619298))getuservalue=1749304487444-(-627994)char=309434+33966466729230 randomseed=j[dir]imports=randomseed(readlines,getuservalue)index=table[imports]getuservalue=setuservalue(346340-393163)randomseed=j[gfind]imports=j[dir]readlines=imports(getuservalue,char)table=randomseed[readlines]debug={[cls]=status,[index]=table}char=937327+2687812302708 index=616447+12928639168389 imports=1040392+17150670946090 game=10929014294902-(-707179)ipairs=ipairs(hasnext,debug)open={[code]=setmetatable;[upvalueid]=ipairs}table=setuservalue(242671+-289414)setmetatable=j[math]status=setuservalue(573536-620327)getuservalue=29858477244380-100749 ipairs=j[gfind]randomseed=7627253847681-985250 debug=j[dir]cls=debug(status,index)upvalueid=ipairs[cls]ipairs=setuservalue(561415-608137)code=setmetatable[upvalueid]readlines=-979751+14731287940594 upvalueid=call(968958+12235622,{math;gfind;dir})setmetatable=object()j[setmetatable]=code select=nil code=object()j[code]=upvalueid upvalueid=parse[ipairs]cls=j[gfind]status=j[dir]index=status(table,randomseed)debug=cls[index]ipairs=setuservalue(-16611+-30218)ipairs=upvalueid[ipairs]ipairs=ipairs(upvalueid,debug)randomseed=setuservalue(239072+-285812)hookfunction=setuservalue(-277417+230545)upvalueid=object()debug=setuservalue(-218572-(-171850))j[upvalueid]=ipairs ipairs=parse[debug]status=j[gfind]index=j[dir]debug=setuservalue(-746041+699212)table=index(randomseed,imports)cls=status[table]imports=setuservalue(239908-286755)debug=ipairs[debug]getlocal=955523+69090454429 debug=debug(ipairs,cls)ipairs=object()j[ipairs]=debug cls=setuservalue(356061-402783)debug=parse[cls]index=j[gfind]gethook=setuservalue(955713+-1002614)table=j[dir]cls=setuservalue(762194+-809023)randomseed=table(imports,readlines)status=index[randomseed]cls=debug[cls]readlines=setuservalue(-17012+-29625)cls=cls(debug,status)debug=object()status=setuservalue(1022714+-1069436)j[debug]=cls cls=parse[status]table=j[gfind]randomseed=j[dir]imports=randomseed(readlines,getuservalue)index=table[imports]status=setuservalue(374993+-421822)status=cls[status]remove=-705571+25277362631197 status=status(cls,index)cls=object()index=setuservalue(-470017-(-423295))j[cls]=status popen=450618785934-(-589891)status=parse[index]randomseed=j[gfind]getuservalue=setuservalue(-551285+504434)imports=j[dir]readlines=imports(getuservalue,char)getuservalue=setuservalue(78050+-124716)table=randomseed[readlines]index=setuservalue(19679+-66508)index=status[index]index=index(status,table)randomseed=j[gfind]char=295872+12827478201237 imports=j[dir]readlines=imports(getuservalue,char)table=randomseed[readlines]string=-338626+23050079229103 imports=object()status=index[table]table=object()randomseed=nil j[table]=status status=nil j[imports]=status status=object()j[status]=randomseed char=j[gfind]tmpfile=j[dir]type=tmpfile(hookfunction,popen)module=21446420279669-838259 getuservalue=char[type]tmpfile=j[gfind]popen=setuservalue(-161673-(-114969))type=j[dir]hookfunction=type(popen,sethook)sethook=setuservalue(-934592+887867)char=tmpfile[hookfunction]type=j[gfind]hookfunction=j[dir]popen=hookfunction(sethook,game)tmpfile=type[popen]sethook=25556118283384-292348 type=true popen=-375156+16315466979105 readlines={[getuservalue]=char,[tmpfile]=type}char=j[gfind]tmpfile=j[dir]hookfunction=setuservalue(932822-979580)type=tmpfile(hookfunction,popen)getuservalue=char[type]popen=setuservalue(-408090+361253)randomseed={readlines,getuservalue}readlines=object()j[readlines]=randomseed tmpfile=j[gfind]type=j[dir]hookfunction=type(popen,sethook)sethook=setuservalue(786370-833278)char=tmpfile[hookfunction]type=j[gfind]game=386127+34214608116205 onload=32291645782155-(-672305)hookfunction=j[dir]popen=hookfunction(sethook,game)tmpfile=type[popen]sethook=-612168+34309149693360 popen=setuservalue(373963-420572)getuservalue={[char]=tmpfile}tmpfile=j[gfind]type=j[dir]hookfunction=type(popen,sethook)char=tmpfile[hookfunction]randomseed={getuservalue;char}getuservalue=object()sethook=32484263528495-724249 j[getuservalue]=randomseed tmpfile=j[gfind]type=j[dir]popen=setuservalue(918431-965142)hookfunction=type(popen,sethook)char=tmpfile[hookfunction]popen=j[gfind]const=204964+17299378962131 sethook=j[dir]game=sethook(gethook,string)hookfunction=popen[game]sethook=j[gfind]os=2712177964896-(-544142)game=j[dir]string=setuservalue(23355-70158)gethook=game(string,loaders)loaders=setuservalue(566589-613324)popen=sethook[gethook]type={[hookfunction]=popen}popen=j[gfind]gethook=setuservalue(-943984-(-897100))string=-153812+19619162029187 sethook=j[dir]game=sethook(gethook,string)gethook=1043910+19448494896538 hookfunction=popen[game]tmpfile={type,hookfunction}game=setuservalue(-504787-(-458077))hookfunction=j[gfind]popen=j[dir]sethook=popen(game,gethook)type=hookfunction[sethook]game=j[gfind]gethook=j[dir]string=gethook(loaders,module)module=setuservalue(983428-1030208)sethook=game[string]gethook=j[gfind]string=j[dir]loaders=string(module,remove)game=gethook[loaders]module=28106526942359-(-200329)popen={[sethook]=game}game=j[gfind]gethook=j[dir]loaders=setuservalue(476959-523703)string=gethook(loaders,module)sethook=game[string]hookfunction={popen;sethook}remove=setuservalue(-258735-(-211854))sethook=j[gfind]loaders=637170+27417319635181 string=setuservalue(-191062+144355)game=j[dir]gethook=game(string,loaders)popen=sethook[gethook]string=j[gfind]loaders=j[dir]module=loaders(remove,const)gethook=string[module]const=setuservalue(-885827-(-839064))loaders=j[gfind]module=j[dir]remove=module(const,m)string=loaders[remove]remove=setuservalue(-4617-42023)game={[gethook]=string}string=j[gfind]const=347936+19363006321688 loaders=j[dir]m=setuservalue(-245070+198471)module=loaders(remove,const)gethook=string[module]sethook={game,gethook}gethook=j[gfind]remove=19048685010466-727932 string=j[dir]module=setuservalue(381153-427898)loaders=string(module,remove)game=gethook[loaders]module=j[gfind]remove=j[dir]const=remove(m,path)loaders=module[const]remove=j[gfind]const=j[dir]path=setuservalue(-105836+59150)m=const(path,onload)path=-694376+27626211347112 module=remove[m]m=setuservalue(-690650-(-643758))string={[loaders]=module}module=j[gfind]remove=j[dir]const=remove(m,path)m=-831024+1759905542499 loaders=module[const]const=setuservalue(-276064-(-229262))onload=setuservalue(607454-654290)gethook={string;loaders}loaders=j[gfind]module=j[dir]remove=module(const,m)string=loaders[remove]const=j[gfind]m=j[dir]path=m(onload,bool)remove=const[path]m=j[gfind]path=j[dir]bool=setuservalue(132448+-179131)onload=path(bool,getlocal)const=m[onload]module={[remove]=const}const=j[gfind]m=j[dir]bool=248469+18910576449488 onload=setuservalue(-339467-(-292779))path=m(onload,bool)remove=const[path]loaders={module,remove}void=nil remove=173077+27872951520926 bool=setuservalue(-131481-(-84800))randomseed={[char]=tmpfile;[type]=hookfunction,[popen]=sethook;[game]=gethook,[string]=loaders}char=object()j[char]=randomseed randomseed=object()tmpfile=call(3418913-445303,{gfind;dir,upvalueid})j[randomseed]=tmpfile tmpfile=object()type=raise(10645566-(-426466),{gfind,dir,cls,randomseed})j[tmpfile]=type type=object()hookfunction=isLinux(9490174-(-418105),{debug,gfind,dir})j[type]=hookfunction module=-702437+12390001266286 hookfunction=object()popen=Factory(5874692-(-154282),{setmetatable,gfind,dir,imports,table;type,status;getuservalue;hookfunction,readlines,char})j[hookfunction]=popen loaders=setuservalue(-948052+901399)game=j[gfind]gethook=j[dir]const=setuservalue(-1034728-(-988032))string=gethook(loaders,module)module=setuservalue(-910643+864029)m=-174822+24697188685778 sethook=game[string]popen=open[sethook]gethook=j[gfind]string=j[dir]loaders=string(module,remove)onload=9840846052188-(-1029770)game=gethook[loaders]path=32664528934777-(-795633)loaders=j[gfind]module=j[dir]remove=module(const,m)string=loaders[remove]m=setuservalue(112250+-158884)module=j[gfind]remove=j[dir]sethook=setuservalue(-586222-(-539435))const=remove(m,path)loaders=module[const]remove=j[gfind]sethook=popen[sethook]path=setuservalue(-354713+307882)const=j[dir]m=const(path,onload)module=remove[m]remove=false path=22661630453556-(-459268)gethook={[string]=loaders;[module]=remove}sethook=sethook(popen,game,gethook)game=package(6671598-198884,{imports,gfind;dir,ipairs,code;status,hookfunction})popen=setuservalue(849809+-896494)assert=parse[setuservalue(715438+-762287)]loaders=setuservalue(-498234-(-451576))onload=22645098780446-44526 popen=sethook[popen]popen=popen(sethook,game)game=j[gfind]getlocal=6742335305654-699251 module=-647898+30374278044186 gethook=j[dir]string=gethook(loaders,module)sethook=game[string]popen=open[sethook]gethook=j[gfind]module=setuservalue(-751056-(-704385))string=j[dir]debug=resume(debug)m=1991801256352-30209 remove=787404+13952751015317 const=setuservalue(-265550-(-218653))loaders=string(module,remove)sethook=setuservalue(-769847-(-723060))sethook=popen[sethook]game=gethook[loaders]loaders=j[gfind]module=j[dir]remove=module(const,m)m=setuservalue(-35921-10741)string=loaders[remove]module=j[gfind]remove=j[dir]const=remove(m,path)loaders=module[const]remove=j[gfind]path=setuservalue(786689-833510)const=j[dir]m=const(path,onload)const=setuservalue(-635912-(-589008))module=remove[m]remove=true gethook={[string]=loaders,[module]=remove}sethook=sethook(popen,game,gethook)remove=1029784+21905641713984 game=j[gfind]onload=3850955990155-220554 module=7853401589815-(-1554)loaders=setuservalue(-131062+84421)gethook=j[dir]string=gethook(loaders,module)sethook=game[string]index=nil module=setuservalue(3359+-49970)popen=open[sethook]m=-478327+26531261988025 sethook=setuservalue(47055-93752)gethook=j[gfind]string=j[dir]loaders=string(module,remove)game=gethook[loaders]loaders=j[gfind]module=j[dir]remove=module(const,m)m=setuservalue(-1088013-(-1041271))string=loaders[remove]module=j[gfind]remove=j[dir]path=-479044+1421371183577 const=remove(m,path)loaders=module[const]remove=j[gfind]path=setuservalue(552126+-598757)sethook=popen[sethook]const=j[dir]m=const(path,onload)export=25644658935827-(-976530)module=remove[m]m=j[gfind]path=j[dir]onload=path(bool,getlocal)rawequal=-908168+32771840136996 const=m[onload]path=j[gfind]onload=j[dir]getlocal=setuservalue(881860+-928665)bool=onload(getlocal,write)m=path[bool]onload=j[gfind]write=setuservalue(145929-192745)bool=j[dir]getlocal=bool(write,os)os=setuservalue(-786729-(-739931))path=onload[getlocal]bool=j[gfind]getlocal=j[dir]write=getlocal(os,rawequal)onload=bool[write]getlocal=j[gfind]write=j[dir]rawequal=setuservalue(404701-451350)os=write(rawequal,export)bool=getlocal[os]remove={const,m;path,onload;bool}rawequal=setuservalue(486825+-533541)m=j[gfind]status=resume(status)bool=setuservalue(-305283-(-258424))path=j[dir]getlocal=6355016882730-(-864613)onload=path(bool,getlocal)const=m[onload]onload=j[gfind]os=-891102+12227604852507 m=true getuservalue=resume(getuservalue)bool=j[dir]write=setuservalue(-9003-37624)getlocal=bool(write,os)export=-548283+2850288919274 path=onload[getlocal]getlocal=j[gfind]write=j[dir]hookfunction=resume(hookfunction)os=write(rawequal,export)bool=getlocal[os]onload={bool}os=27298928992737-667705 gethook={[string]=loaders,[module]=remove,[const]=m;[path]=onload}sethook=sethook(popen,game,gethook)cls=resume(cls)game=j[gfind]readlines=resume(readlines)module=34227969294416-(-146930)gethook=j[dir]export=520943+6999058913740 const=setuservalue(-717294-(-670595))path=8884443838895-(-579194)bool=setuservalue(-1017248+970576)loaders=setuservalue(689671-736441)string=gethook(loaders,module)onload=995603+28727607755566 sethook=game[string]rawequal=setuservalue(-655067-(-608431))module=setuservalue(-145759+98872)m=413939+330445582246 popen=open[sethook]gethook=j[gfind]remove=-629109+1740421012639 write=setuservalue(-671325+624437)string=j[dir]loaders=string(module,remove)game=gethook[loaders]getlocal=-281844+200140131665 loaders=j[gfind]module=j[dir]remove=module(const,m)string=loaders[remove]module=j[gfind]remove=j[dir]m=setuservalue(744726-791545)const=remove(m,path)path=setuservalue(-334876+287981)loaders=module[const]remove=j[gfind]const=j[dir]m=const(path,onload)module=remove[m]remove=-378206.5-(-378207)m=j[gfind]path=j[dir]onload=path(bool,getlocal)const=m[onload]onload=j[gfind]bool=j[dir]m=.1 getlocal=bool(write,os)path=onload[getlocal]onload=.9 getlocal=j[gfind]write=j[dir]os=write(rawequal,export)bool=getlocal[os]getlocal=-927992+927993 error={}gethook={[string]=loaders;[module]=remove;[const]=m,[path]=onload,[bool]=getlocal}sethook=setuservalue(-914796-(-867961))sethook=popen[sethook]loaders=setuservalue(562422+-609115)sethook=sethook(popen,game,gethook)game=j[gfind]module=-502399+21508054733214 gethook=j[dir]string=gethook(loaders,module)const=setuservalue(-254792-(-207913))module=setuservalue(192023+-238621)sethook=game[string]popen=open[sethook]sethook=setuservalue(-21009-25691)m=62025+27034731986660 remove=9306141639043-405654 gethook=j[gfind]string=j[dir]loaders=string(module,remove)sethook=popen[sethook]game=gethook[loaders]loaders=setuservalue(-992456+945708)sethook=sethook(popen,game)game=j[gfind]remove=887739+21511654677350 gethook=j[dir]module=-414056+4030791407804 string=gethook(loaders,module)module=setuservalue(-198359-(-151550))sethook=game[string]popen=open[sethook]sethook=setuservalue(-168612+121825)gethook=j[gfind]string=j[dir]loaders=string(module,remove)sethook=popen[sethook]game=gethook[loaders]loaders=j[gfind]module=j[dir]remove=module(const,m)string=loaders[remove]module=j[gfind]m=setuservalue(-898468-(-851826))type=resume(type)path=34405068283013-(-107024)remove=j[dir]const=remove(m,path)imports=resume(imports)loaders=module[const]remove=j[gfind]path=setuservalue(604819-651726)const=j[dir]onload=280034947341-(-315253)m=const(path,onload)module=remove[m]ipairs=resume(ipairs)remove=false gethook={[string]=loaders;[module]=remove}sethook=sethook(popen,game,gethook)popen=setuservalue(896012+-942697)setmetatable=resume(setmetatable)game=data(3349495-(-929588),{gfind;dir,table;randomseed})module=setuservalue(394705+-441327)popen=sethook[popen]bool=30829428508243-(-602561)popen=popen(sethook,game)sethook=object()popen=nil remove=-882327+15166733013549 path=1829047460501-(-417982)j[sethook]=popen const=18601825423340-273942 gethook=j[gfind]string=j[dir]loaders=string(module,remove)game=gethook[loaders]remove=setuservalue(261086-307718)popen=open[game]string=j[gfind]loaders=j[dir]module=loaders(remove,const)gethook=string[module]m=setuservalue(-1092096-(-1045207))onload=21521749981681-103116 module=j[gfind]remove=j[dir]const=remove(m,path)loaders=module[const]remove=j[gfind]path=setuservalue(-857912-(-811022))const=j[dir]m=const(path,onload)module=remove[m]const=j[gfind]m=j[dir]onload=setuservalue(-837637+790792)path=m(onload,bool)remove=const[path]const=false game=setuservalue(-608723-(-561936))string={[loaders]=module,[remove]=const}game=popen[game]game=game(popen,gethook,string)popen=setuservalue(-397439+350754)popen=game[popen]gethook=data(259056+12860011,{sethook,gfind;dir,table;tmpfile})popen=popen(game,gethook)game=366873+-366872 popen=setuservalue(298511+-345235)popen=hasnext[popen]upvalueid=resume(upvalueid)popen=popen(hasnext,game)game=j[math]module=setuservalue(-699179+652509)popen=setuservalue(-343240+296399)popen=tonumber[popen]popen=popen(tonumber,game)game=j[math]popen=setuservalue(651458+-698299)popen=getupvalue[popen]popen=popen(getupvalue,game)popen=setuservalue(-906490-(-859668))char=resume(char)popen=tonumber[popen]popen=popen(tonumber)gethook=j[gfind]string=j[dir]sethook=resume(sethook)remove=189220+30870488929539 popen=setuservalue(374491-421288)loaders=string(module,remove)game=gethook[loaders]hasnext=nil const=1958565432941-953053 popen=getupvalue[popen]popen=popen(getupvalue,game)string=j[gfind]remove=setuservalue(225266+-271926)path=setuservalue(-792956+746196)loaders=j[dir]module=loaders(remove,const)gethook=string[module]onload=13045260029326-226772 module=setuservalue(733517-780282)loaders=parse[module]module=loaders()remove=j[gfind]popen=setuservalue(-265025-(-218228))const=j[dir]m=const(path,onload)loaders=remove[m]string=module[loaders]math=resume(math)popen=tonumber[popen]game=gethook..string popen=popen(tonumber,game)table=resume(table)remove=setuservalue(124639-171427)string=j[gfind]loaders=j[dir]popen=setuservalue(124149+-170917)const=22720849643347-581119 popen=getupvalue[popen]module=loaders(remove,const)gethook=string[module]game=open[gethook]popen=popen(getupvalue,game)const=1179261244438-479729 remove=setuservalue(-450970-(-404232))popen=setuservalue(1009945+-1056701)string=j[gfind]loaders=j[dir]module=loaders(remove,const)gethook=string[module]code=resume(code)game=open[gethook]gfind=resume(gfind)popen=tonumber[popen]randomseed=resume(randomseed)open=nil popen=popen(tonumber,game)dir=resume(dir)popen=setuservalue(315643-362372)popen=tonumber[popen]tmpfile=resume(tmpfile)popen=popen(tonumber)tonumber=nil getupvalue=nil else gfind=setuservalue(-340662-(-293818))getupvalue=33961473317083-121621 error=parse[gfind]tonumber=j[loadlib[471788-471786]]math=setuservalue(-445299+398569)void=j[loadlib[-815240+815243]]select=void(math,getupvalue)gfind=tonumber[select]assert=error[gfind]count=resume(count)gfind=loader(9468013-(-305806),{loadlib[-618955-(-618957)],loadlib[6856+-6853];loadlib[-315318+315323];dir;loadlib[-498870-(-498879)]})open=33342545483762-(-337076)error=assert(gfind)gfind=j[loadlib[-339301-(-339306)]]void=j[loadlib[-316665+316667]]select=j[loadlib[-532703-(-532706)]]getupvalue=setuservalue(971202+-1017917)math=select(getupvalue,open)tonumber=void[math]error=gfind[tonumber]tonumber=j[loadlib[168298+-168296]]void=j[loadlib[-1000838-(-1000841)]]getupvalue=64780+13949150403667 math=setuservalue(-1044484+997802)select=void(math,getupvalue)gfind=tonumber[select]pcall=nil assert=error[gfind]gfind=package(14204053-(-324009),{loadlib[868506+-868501];loadlib[185052-185050];loadlib[-327841+327844],loadlib[854973-854964],loadlib[995776+-995769];loadlib[-414531-(-414541)];loadlib[890167-890166];loadlib[-531413+531417];loadlib[-877628-(-877634)],loadlib[966897-966886]})error=setuservalue(-482384-(-435768))error=assert[error]error=error(assert,gfind)j[dir]=error dir=resume(dir)assert=parse[setuservalue(979880-1026676)]error={}end else error=setuservalue(-842366-(-795541))assert=parse[error]pcall=setuservalue(-886602-(-839888))error=parse[pcall]pcall=setuservalue(714577+-761291)parse[pcall]=assert pcall=setuservalue(-664166+617341)assert=4575735-(-210469)parse[pcall]=error pcall=j[loadlib[471743-471742]]dir=pcall()end else if assert<334028+4836805 then if assert<-378762+5442339 then assert=math assert=select and 678129+2566253 or 7857832-846528 else assert=true assert=assert and 349214+12427609 or 11358653-104680 end else assert=j[loadlib[-848022-(-848023)]]error=setuservalue(749996+-796804)error=assert[error]pcall=j[loadlib[889409-889407]]error=error(assert,pcall)error=j[loadlib[878789+-878786]]assert=not error assert=-163983+14395444 end end else if assert<5399779-(-120511)then if assert<-583323+6083352 then if assert<-247665+5670737 then error=j[loadlib[-826497-(-826502)]]dir=j[loadlib[986578+-986576]]tonumber=setuservalue(-197000-(-150214))getupvalue=setuservalue(-1077608-(-1030748))void=-773056+30181540102822 count=j[loadlib[-956981-(-956984)]]gfind=count(tonumber,void)open=319778+10057051353385 pcall=dir[gfind]assert=error[pcall]code=setuservalue(462575-509443)error=setuservalue(-777240+730478)dir=j[loadlib[851257-851255]]tonumber=setuservalue(-912811-(-866078))error=assert[error]void=24230112233367-(-205948)count=j[loadlib[150646-150643]]gfind=count(tonumber,void)pcall=dir[gfind]error=error(assert,pcall)dir=object()assert=nil count=368262-368257 pcall=error upvalueid=setuservalue(418786+-465668)ipairs=687745+17152266805426 j[dir]=assert assert=j[loadlib[-859902+859908]]void=j[loadlib[95234+-95232]]select=j[loadlib[630862-630859]]math=select(getupvalue,open)setmetatable=-661197+20274529827758 tonumber=void[math]getupvalue=j[loadlib[-1000690+1000692]]open=j[loadlib[-16258-(-16261)]]hasnext=open(code,setmetatable)math=getupvalue[hasnext]select=pcall[math]open=setuservalue(550804+-597447)getupvalue=parse[open]hasnext=j[loadlib[405353+-405351]]code=j[loadlib[647370-647367]]setmetatable=code(upvalueid,ipairs)open=hasnext[setmetatable]math=getupvalue[open]open=-476133-(-476133)code=1036841-1036841 hasnext=321905-319905 getupvalue=math(open,hasnext,code)void=select-getupvalue gfind={[tonumber]=void}error=assert(pcall,count,gfind)count=object()j[count]=error error=j[count]tonumber=j[loadlib[984363+-984361]]math=setuservalue(-781571+734787)void=j[loadlib[156700+-156697]]getupvalue=2289999936336-96038 select=void(math,getupvalue)gfind=tonumber[select]assert=error[gfind]getupvalue=setuservalue(-912719+866098)error=setuservalue(-84207-(-37591))error=assert[error]gfind=loader(7662089-1022457,{count})error=error(assert,gfind)assert=j[count]open=-477959+2389536706399 error=setuservalue(711124+-757799)error=assert[error]error=error(assert)gfind=j[loadlib[-377360-(-377361)]]void=j[loadlib[-517102+517104]]select=j[loadlib[355394+-355391]]math=select(getupvalue,open)tonumber=void[math]error=gfind[tonumber]math=setuservalue(608778-655554)tonumber=j[loadlib[204956-204954]]getupvalue=8573637130286-305302 void=j[loadlib[248482+-248479]]select=void(math,getupvalue)gfind=tonumber[select]assert=error[gfind]assert=assert and 1900134-(-633864)or-483429+5467952 else assert=true assert=assert and 14772001-(-788659)or 7042913-152606 end else dir=-548792-(-548793)count=j[loadlib[-820293+820302]]gfind=count assert={}pcall=assert count=179692-179691 tonumber=count assert=662845-253144 count=916824-916824 void=tonumber<count count=dir-tonumber end else if assert<542547+5005343 then assert=parse[setuservalue(838831-885702)]error={}else pcall=setuservalue(707999+-754902)count=-386569+386569 assert=parse[pcall]dir=j[loadlib[-105360+105368]]pcall=assert(dir,count)assert=6076166-557791 end end end else if assert<4856433-(-1031205)then if assert<-782663+6583872 then if assert<5386576-(-365318)then if assert<440454+5263109 then math=tonumber hasnext=j[loadlib[-402664+402674]]open=hasnext[math]hasnext=not open assert=hasnext and 14411048-(-21456)or 11566305-277352 else assert=j[loadlib[-621813-(-621814)]]error=setuservalue(1010730+-1057359)error=assert[error]error=error(assert)assert=nil j[loadlib[575249+-575248]]=assert assert=8479245-344531 end else c=j[dir]loadfile=c assert=c and 3905244-(-104134)or 957865+7563213 end else if assert<6398060-529064 then assert=pcall and 1956662-820346 or-583587+11567687 else setmetatable=setuservalue(-188915+142136)i=setuservalue(151266+-197998)upvalueid=loader(-805447+8965310,{})hasnext=-218796+218861 getupvalue=object()j[getupvalue]=error assert=j[select]open=234148+-234145 error=assert(open,hasnext)open=object()assert=830348-830348 hasnext=assert j[open]=error assert=-401169+401169 error=parse[setmetatable]setmetatable={error(upvalueid)}code=assert error=340590-340588 assert={roblox(setmetatable)}setmetatable=assert assert=setmetatable[error]error=setuservalue(-766651+719839)upvalueid=assert assert=parse[error]ipairs=j[count]c=parse[i]i=c(upvalueid)c=setuservalue(444149+-491049)loadfile=ipairs(i,c)ipairs={loadfile()}error=assert(roblox(ipairs))ipairs=object()j[ipairs]=error error=892955-892954 loadfile=j[open]c=loadfile assert=-196634+2513788 loadfile=-641039-(-641040)i=loadfile loadfile=849031+-849031 debug=i<loadfile loadfile=error-i end end else if assert<160221+5888933 then if assert<-850807+6877216 then if assert<6273286-382015 then ipairs=#setmetatable debug=40655-40655 upvalueid=ipairs==debug assert=upvalueid and 4540446-866123 or 11280730-136069 else gfind=j[loadlib[-434481+434486]]hasnext=setuservalue(506800+-553617)math=j[loadlib[-609627-(-609629)]]setmetatable=17728590553701-(-261594)getupvalue=j[loadlib[960382-960379]]code=-121290+3601455563 open=getupvalue(hasnext,code)void=math[open]code=setuservalue(870006+-916883)getupvalue=j[loadlib[253964-253962]]open=j[loadlib[-775783+775786]]hasnext=open(code,setmetatable)math=getupvalue[hasnext]getupvalue=891543+-891538 tonumber={gfind(void,math,getupvalue)}error={roblox(tonumber)}assert=parse[setuservalue(-75518-(-28763))]end else getupvalue=setuservalue(962524-1009370)gfind=j[loadlib[-814988+814989]]void=j[loadlib[-467331-(-467333)]]open=10562377788955-334565 select=j[loadlib[786553+-786550]]math=select(getupvalue,open)tonumber=void[math]count=gfind[tonumber]getupvalue=419014+4781616079852 math=setuservalue(-290790-(-244183))tonumber=j[loadlib[-671699-(-671701)]]void=j[loadlib[-387945+387948]]select=void(math,getupvalue)gfind=tonumber[select]dir=count[gfind]pcall=not dir assert=pcall and 540562+12093384 or 1536962-(-751443)error=pcall end else if assert<303081+5869011 then count,void=dir(gfind,count)assert=count and 9465519-542738 or 16340022-(-100524)else assert=410327+12392349 end end end end else if assert<6338492-(-760353)then if assert<-1033985+7613627 then if assert<6215480-(-253480)then if assert<5838781-(-507800)then if assert<445149+5856672 then assert=parse[setuservalue(-284196+237550)]error={}else ipairs=#setmetatable assert=11847045-702384 debug=-652916-(-652916)upvalueid=ipairs==debug end else assert=j[loadlib[-764733-(-764737)]]error=setuservalue(-943183+896554)error=assert[error]error=error(assert)assert=j[loadlib[-376491+376496]]error={assert()}error={roblox(error)}assert=parse[setuservalue(162602-209380)]end else if assert<442433+6110834 then pcall=newpath[965015+-965014]assert=not pcall assert=assert and 4347946-491495 or-972580+12265290 else readlines=854586-854585 searchpath=imports[readlines]assert=332068+8524693 require=searchpath end end else if assert<499536+6368504 then if assert<505088+6162143 then if assert<5603915-(-982369)then error=j[loadlib[871366-871365]]void=-948959+21882328162988 dir=j[loadlib[1037768+-1037766]]count=j[loadlib[560366-560363]]tonumber=setuservalue(271767-318377)gfind=count(tonumber,void)void=269045+22925133745854 pcall=dir[gfind]assert=error[pcall]tonumber=setuservalue(603474+-650078)dir=j[loadlib[523559+-523557]]count=j[loadlib[-638913-(-638916)]]gfind=count(tonumber,void)error=setuservalue(-1022076+975314)error=assert[error]pcall=dir[gfind]error=error(assert,pcall)assert=109692+-109692 pcall=error dir=assert assert=16209176-508621 else error={}assert=false j[loadlib[647367-647366]]=assert assert=parse[setuservalue(61062+-107716)]end else assert=274922+3887350 count=j[pcall]dir=not count error=dir end else if assert<7754316-829771 then error={}assert=parse[setuservalue(-724783-(-677897))]else tonumber=nil void=nil assert=-750758+6908902 end end end else if assert<8583526-910146 then if assert<793663+6622166 then if assert<6887654-(-515504)then if assert<6548047-(-721168)then dir=j[loadlib[646056+-646055]]tonumber=-96052-(-96054)gfind=-27476+27477 count=dir(gfind,tonumber)dir=205091+-205090 pcall=count==dir assert=pcall and 371687+3582101 or 5329485-404638 error=pcall else assert=13981537-(-869765)upvalueid=ipairs status=upvalueid setmetatable[upvalueid]=status upvalueid=nil end else getupvalue=not void tonumber=getupvalue assert=-875667+1026503 end else if assert<7435207-(-52669)then error=j[loadlib[926331+-926328]]assert=not error assert=assert and 957737+7208737 or 14713071-481610 else assert=6619005-787866 end end else if assert<-810452+8776189 then if assert<6822421-(-932708)then if assert<7708734-21357 then dir=j[loadlib[-573357-(-573358)]]assert=dir and 10246325-(-324415)or 568274+14553591 else table=resume(table)randomseed=resume(randomseed)cls=resume(cls)status=resume(status)assert=741291+1575863 imports=nil long=resume(long)index=resume(index)end else assert=j[loadlib[793780+-793770]]dir=j[loadlib[45775-45764]]pcall[assert]=dir assert=j[loadlib[-278096-(-278108)]]dir={assert(pcall)}error={roblox(dir)}assert=parse[setuservalue(721289+-768001)]end else if assert<-631779+8680996 then pcall=newpath[312677-312676]assert=j[loadlib[-191786+191787]]dir=newpath[369860-369858]count=assert assert=count[dir]assert=assert and-60857+6267927 or-199531+11245783 else pcall=newpath assert=true select=setuservalue(-264974-(-218195))dir=object()count=setuservalue(-353742-(-307022))j[dir]=assert error=parse[count]gfind=object()count=setuservalue(-843212-(-796604))tonumber=object()assert=error[count]math=loader(43729+11807749,{tonumber})count=object()j[count]=assert assert=loader(13782632-216536,{})j[gfind]=assert assert=false j[tonumber]=assert void=parse[select]select=void(math)error=select assert=select and-1014743+12270145 or 9110059-604801 end end end end end end else if assert<11754086-433102 then if assert<9398285-(-369429)then if assert<-893332+9787547 then if assert<8642354-274278 then if assert<-545905+8700688 then if assert<721880+7389022 then if assert<140334+7934582 then debug=setuservalue(-916039+869214)assert=parse[debug]debug=setuservalue(-979764+933050)parse[debug]=assert assert=3151418-(-418230)else dir=setuservalue(322633-369503)error=parse[dir]count=j[loadlib[236377-236376]]dir=error(count)count=j[loadlib[-604050+604052]]gfind=j[loadlib[-454327-(-454330)]]select=933259+4679335316215 void=setuservalue(-167953+121276)tonumber=gfind(void,select)error=count[tonumber]assert=dir==error assert=assert and 6734703-983015 or 8114319-(-20395)end else assert=parse[setuservalue(-585697+538991)]error={}end else if assert<8249754-33514 then if assert<7691739-(-472589)then error=-46269+7944128 dir=setuservalue(-597926+551159)count=4264983-(-712948)pcall=dir^count assert=error-pcall error=setuservalue(542845-589611)pcall=assert assert=error/pcall error={assert}assert=parse[setuservalue(-881445+834817)]else error={}assert=parse[setuservalue(583546-630352)]end else setmetatable=setuservalue(177721-224326)assert=8590699-(-721894)code=parse[setmetatable]setmetatable=setuservalue(-990208-(-943543))hasnext=code[setmetatable]getupvalue=hasnext end end else if assert<883252+7663465 then if assert<558021+7959181 then if assert<9258484-754079 then void=setuservalue(559780+-606612)count=j[loadlib[606987+-606986]]gfind=j[loadlib[-611246-(-611248)]]select=-649668+26717976992349 tonumber=gfind(void,select)dir=count[tonumber]error=pcall[dir]dir=nil assert=error==dir assert=assert and 1666421-26240 or 9639074-(-469679)else void=error select=setuservalue(-930445+883750)error=parse[select]select=setuservalue(-789539-(-742848))math=setuservalue(137829+-184434)assert=error[select]select=object()j[select]=assert error=parse[math]math=setuservalue(768882+-815702)assert=error[math]open=assert code=setuservalue(-1082060-(-1035455))math=assert hasnext=parse[code]assert=hasnext and 273843+7995957 or 360855+8951738 getupvalue=hasnext end else j[dir]=loadfile assert=j[dir]assert=assert and 295672+13776827 or 688142+8839611 end else if assert<9776785-910017 then j[dir]=require char=j[index]tmpfile=296510-296509 getuservalue=char+tmpfile readlines=imports[getuservalue]searchpath=hasnext+readlines readlines=-545613+545869 assert=searchpath%readlines hasnext=assert assert=251793+7458794 getuservalue=j[status]readlines=code+getuservalue getuservalue=112959+-112703 searchpath=readlines%getuservalue code=searchpath else open=92227+32216103572054 dir=setuservalue(657772+-704534)tonumber=j[loadlib[647659-647657]]void=j[loadlib[-367829+367832]]getupvalue=setuservalue(947248-994158)math=void(getupvalue,open)dir=count[dir]gfind=tonumber[math]dir=dir(count,gfind)count=dir gfind=not count assert=gfind and 996769+4899320 or 599027+1653483 end end end else if assert<910390+8413712 then if assert<8693019-(-448795)then if assert<9803000-685575 then if assert<8089095-(-971040)then math=assert hasnext=j[loadlib[579386+-579384]]code=j[loadlib[-511890+511893]]upvalueid=setuservalue(716962+-763824)ipairs=18414484877776-970834 setmetatable=code(upvalueid,ipairs)getupvalue=setuservalue(-82281-(-35448))tonumber=count getupvalue=void[getupvalue]open=hasnext[setmetatable]getupvalue=getupvalue(void,open)assert=getupvalue and-690105+2581647 or 4062168-(-998135)select=getupvalue else assert=error and 6683413-398925 or 16407220-96905 end else i=setuservalue(714671+-761391)math=open c=parse[i]i=setuservalue(-390899-(-344269))loadfile=c[i]c=loadfile(pcall,math)loadfile=j[loadlib[-784397+784403]]i=loadfile()ipairs=c+i upvalueid=ipairs+void assert=-811187+12121392 i=446381+-446380 ipairs=-306088-(-306344)math=nil setmetatable=upvalueid%ipairs void=setmetatable ipairs=count[dir]c=void+i loadfile=gfind[c]upvalueid=ipairs..loadfile count[dir]=upvalueid end else if assert<9692252-435385 then tonumber=setuservalue(791856-838700)setmetatable=12454553020607-(-601576)assert=12522687-758188 gfind=parse[tonumber]void=j[loadlib[-620965+620967]]open=575073+3116932890442 select=j[loadlib[986661+-986658]]getupvalue=setuservalue(972957-1019746)math=select(getupvalue,open)tonumber=void[math]error=gfind[tonumber]math=setuservalue(-385754+338969)gfind=error()error=j[loadlib[-893396+893400]]code=setuservalue(148885-195587)select=parse[math]getupvalue=j[loadlib[993239-993237]]open=j[loadlib[623329+-623326]]hasnext=open(code,setmetatable)math=getupvalue[hasnext]code=21014357581985-(-443800)void=select[math]math=j[loadlib[-728723-(-728725)]]getupvalue=j[loadlib[694568-694565]]hasnext=setuservalue(949178+-995816)open=getupvalue(hasnext,code)select=math[open]tonumber=void[select]gfind=error(tonumber)else assert=open assert=getupvalue and 6511279-624766 or 21944+10907706 error=getupvalue end end else if assert<10002417-285159 then if assert<8910423-(-632495)then if assert<9901405-426947 then require=j[dir]error=require assert=require and 613605+9147707 or-1025693+16949898 else assert=true assert=798739+10455234 end else count=setuservalue(182110-228715)dir=parse[count]count=setuservalue(-380275-(-333516))pcall=dir[count]count=j[loadlib[942241-942240]]dir={pcall(count)}assert=parse[setuservalue(776455+-823163)]error={roblox(dir)}end else if assert<9415077-(-346544)then char=-512285+512286 searchpath=assert getuservalue=imports[char]char=false readlines=getuservalue==char assert=readlines and-661177+12673342 or 668763+3908320 require=readlines else assert=10997067-12967 end end end end else if assert<-484409+11359459 then if assert<10837481-486990 then if assert<10490650-390425 then if assert<9518361-(-382501)then if assert<8894075-(-959690)then pcall=setuservalue(227244-274088)error=parse[pcall]tonumber=setuservalue(-560914+514314)dir=j[loadlib[37275-37274]]count=j[loadlib[258291+-258289]]void=18760281860070-984519 gfind=count(tonumber,void)pcall=dir[gfind]tonumber=setuservalue(-711712+664837)assert=error[pcall]pcall=-87701+87711 error=assert(pcall)void=13880059149691-91196 error=j[loadlib[234441-234438]]dir=j[loadlib[-881130+881131]]count=j[loadlib[-894094+894096]]gfind=count(tonumber,void)pcall=dir[gfind]assert=error[pcall]dir=j[loadlib[947120-947119]]tonumber=setuservalue(-387521-(-340903))count=j[loadlib[490463+-490461]]void=-633772+537006435494 gfind=count(tonumber,void)pcall=dir[gfind]error=setuservalue(324334+-371096)error=assert[error]error=error(assert,pcall)pcall=error assert=not pcall assert=assert and 607114+5828019 or-936685+12936111 else assert=false j[loadlib[-698173-(-698174)]]=assert error=j[loadlib[603568-603566]]pcall=error()assert=parse[setuservalue(-360186+313319)]error={}end else upvalueid=-565944+11509282994087 pcall=newpath[-143193+143194]dir=newpath[-724431-(-724433)]setmetatable=setuservalue(533953+-580586)void=setuservalue(775009-821872)hasnext=17885674198437-898333 count={size(-178664-(-178667),roblox(newpath))}assert=j[loadlib[-15540+15541]]tonumber=parse[void]select=j[loadlib[-326892+326894]]math=j[loadlib[802291-802288]]open=setuservalue(438841-485550)getupvalue=math(open,hasnext)void=select[getupvalue]getupvalue=setuservalue(-489881-(-443096))gfind=tonumber[void]math=parse[getupvalue]ipairs=16915909715870-2265 open=j[loadlib[-739939-(-739941)]]hasnext=j[loadlib[-19299+19302]]code=hasnext(setmetatable,upvalueid)getupvalue=open[code]select=math[getupvalue]code=setuservalue(786885-833574)getupvalue=j[loadlib[-840913-(-840915)]]upvalueid=setuservalue(805797-852663)open=j[loadlib[647397-647394]]setmetatable=13262487167383-412024 hasnext=open(code,setmetatable)open=setuservalue(893988-940773)math=getupvalue[hasnext]void=select[math]getupvalue=parse[open]hasnext=j[loadlib[-593920-(-593922)]]code=j[loadlib[840341-840338]]setmetatable=code(upvalueid,ipairs)upvalueid=10634060107325-686822 open=hasnext[setmetatable]math=getupvalue[open]open=j[loadlib[-307713+307715]]hasnext=j[loadlib[196428+-196425]]setmetatable=setuservalue(-217374+170601)code=hasnext(setmetatable,upvalueid)getupvalue=open[code]select=math[getupvalue]tonumber=gfind(dir,void,select)gfind=setuservalue(-376027-(-329348))gfind=assert[gfind]error={gfind(assert,pcall,tonumber,roblox(count))}assert=parse[setuservalue(1029954+-1076707)]error={roblox(error)}end else if assert<552044+9765411 then if assert<10566929-435435 then dir=setuservalue(-251788-(-204944))void=setuservalue(-164974-(-118170))open=5209922265993-154127 error=parse[dir]count=j[loadlib[-581742+581743]]gfind=j[loadlib[112924+-112922]]select=199149+26113085941138 tonumber=gfind(void,select)dir=count[tonumber]assert=error[dir]error=assert()getupvalue=setuservalue(-633946-(-587333))assert=j[loadlib[110974+-110971]]void=j[loadlib[906395+-906394]]select=j[loadlib[-974056+974058]]math=select(getupvalue,open)tonumber=void[math]gfind=pcall[tonumber]open=-823108+21564348708477 getupvalue=setuservalue(-780652-(-733769))void=j[loadlib[721429+-721428]]select=j[loadlib[-543446-(-543448)]]math=select(getupvalue,open)tonumber=void[math]count=gfind[tonumber]tonumber=j[loadlib[962302-962301]]math=setuservalue(-265223+218531)getupvalue=33112144765299-(-809672)void=j[loadlib[655032+-655030]]select=void(math,getupvalue)gfind=tonumber[select]dir=count[gfind]error=assert(dir)assert=408107+8075526 else assert=parse[setuservalue(290151-336879)]error={}pcall=nil end else i=setuservalue(468205-514937)cls=setuservalue(533633-580347)assert=parse[i]debug=parse[cls]i=assert(debug)assert=setuservalue(23039-69864)parse[assert]=i assert=1002985+2566663 end end else if assert<10629494-(-104536)then if assert<-191435+10809082 then if assert<-939669+11338470 then tonumber=j[pcall]gfind=not tonumber dir=gfind assert=819132+3793869 else dir=j[loadlib[1038518-1038514]]tonumber=j[loadlib[-485673-(-485675)]]count=setuservalue(-363835+317073)void=j[loadlib[548998-548995]]count=dir[count]open=17191584506482-(-490707)getupvalue=setuservalue(359227+-405940)math=void(getupvalue,open)gfind=tonumber[math]count=count(dir,gfind)assert=count and 8090233-(-780784)or 1223698-921466 end else math=setuservalue(-768470+721734)debug=34234099521156-923711 open=setuservalue(-695332+648610)tonumber=parse[math]getupvalue=parse[open]code=j[gfind]setmetatable=j[dir]ipairs=setuservalue(-766871+720122)upvalueid=setmetatable(ipairs,debug)hasnext=code[upvalueid]code=setuservalue(543201+-589840)code=getupvalue[code]open={code(getupvalue,hasnext)}math=tonumber(roblox(open))tonumber={math()}error={roblox(tonumber)}assert=parse[setuservalue(227381+-274001)]end else if assert<-492899+11345255 then dir=resume(dir)upvalueid=nil getupvalue=resume(getupvalue)ipairs=resume(ipairs)tonumber=resume(tonumber)hasnext=nil gfind=resume(gfind)select=resume(select)open=resume(open)setmetatable=nil count=resume(count)code=nil count=nil getupvalue=setuservalue(860337-907057)void=nil select=setuservalue(-364865+318170)math=nil void=setuservalue(-558004-(-511309))gfind=object()dir=nil hasnext={}j[gfind]=dir setmetatable={}dir=object()j[dir]=count tonumber=parse[void]void=setuservalue(9885+-56754)count=tonumber[void]code=object()tonumber=object()open=object()j[tonumber]=count void=parse[select]math=setuservalue(477774-524379)select=setuservalue(80333-127024)count=void[select]select=parse[math]assert=858280+13993022 ipairs=-130159-(-130415)math=setuservalue(605250-652009)void=select[math]math=parse[getupvalue]getupvalue=setuservalue(976093-1022830)select=math[getupvalue]math=-949667+949667 getupvalue=object()j[getupvalue]=math debug=ipairs math=-304400-(-304402)j[open]=math math={}upvalueid=27117-27116 j[code]=hasnext hasnext=883575-883575 ipairs=174429+-174428 cls=ipairs ipairs=783357+-783357 long=cls<ipairs ipairs=upvalueid-cls else assert=parse[setuservalue(-11324+-35324)]error={}end end end else if assert<84764+11145382 then if assert<-547963+11611586 then if assert<11155276-161334 then if assert<11072190-126139 then open=setuservalue(102484-149149)getupvalue=parse[open]error=getupvalue assert=123963+5762550 else pcall=nil error={}dir=nil assert=parse[setuservalue(-879332-(-832522))]end else select=947782+-947527 assert={}tonumber=35184372647327-558495 j[loadlib[-898369+898371]]=assert error=j[loadlib[811148+-811145]]gfind=error error=dir%tonumber j[loadlib[406293+-406289]]=error void=dir%select select=-1030435-(-1030437)tonumber=void+select j[loadlib[313308+-313303]]=tonumber math=setuservalue(-346193+299473)select=parse[math]math=setuservalue(1004546+-1051445)void=select[math]open=79439+-79438 select=void(pcall)assert=10373528-(-936677)void=setuservalue(914919-961599)count[dir]=void hasnext=open math=-876105+876106 open=556903+-556903 getupvalue=select code=hasnext<open void=-52681+52736 open=math-hasnext end else if assert<893129+10234791 then tonumber=21598389078237-(-876140)gfind=setuservalue(377739+-424396)error=j[loadlib[190347-190346]]pcall=newpath[282630-282629]dir=j[loadlib[392704+-392702]]count=dir(gfind,tonumber)assert=error[count]error=true pcall[assert]=error void=6956659130006-831983 tonumber=setuservalue(151202+-198082)assert=j[loadlib[-884933-(-884936)]]dir=j[loadlib[295465+-295464]]count=j[loadlib[257140-257138]]gfind=count(tonumber,void)open=-133085+30378188062494 error=dir[gfind]dir=pcall getupvalue=setuservalue(522767+-569457)assert[error]=dir tonumber=setuservalue(-504585+457800)assert=j[loadlib[818667+-818663]]gfind=parse[tonumber]void=j[loadlib[-810780-(-810781)]]select=j[loadlib[115981-115979]]math=select(getupvalue,open)tonumber=void[math]getupvalue=-975252+22890741828407 count=gfind[tonumber]tonumber=j[loadlib[491487-491486]]math=setuservalue(-868165-(-821269))pcall=nil void=j[loadlib[-344845+344847]]select=void(math,getupvalue)gfind=tonumber[select]dir=count[gfind]error=assert(dir)assert=parse[setuservalue(-146521+99616)]error={}else debug=#setmetatable ipairs=-180186+180187 upvalueid=count(ipairs,debug)status=-313521+313522 assert=5613374-(-276085)ipairs=void(setmetatable,upvalueid)debug=j[code]long=ipairs-status cls=select(long)upvalueid=nil debug[ipairs]=cls ipairs=nil end end else if assert<12073917-782559 then if assert<11021052-(-267118)then if assert<-376073+11631255 then assert=package(-628792+14575065,{gfind})c={assert()}error={roblox(c)}assert=parse[setuservalue(-911502+864768)]else void=j[tonumber]error=void assert=-963062+9468320 end else code=setuservalue(58775-105583)math=nil hasnext=j[loadlib[65630-65625]]code=hasnext[code]assert=15920386-554671 getupvalue=nil code=code(hasnext,open)open=nil end else if assert<10575932-(-723689)then assert=j[loadlib[712689-712688]]assert=14503403-(-618462)else open=open+hasnext math=open<=getupvalue setmetatable=not code math=setmetatable and math setmetatable=open>=getupvalue setmetatable=code and setmetatable math=setmetatable or math setmetatable=8533580-(-586758)assert=math and setmetatable math=14531676-1009951 assert=assert or math end end end end end else if assert<15254526-834655 then if assert<-794956+13870915 then if assert<-152091+12723165 then if assert<-134349+12103856 then if assert<-475482+12277736 then if assert<-75344+11707484 then getupvalue=-872768-(-872770)count=-803154-(-803186)dir=j[loadlib[-453108-(-453111)]]hasnext=886367+-886354 pcall=dir%count gfind=j[loadlib[-1018733-(-1018737)]]select=j[loadlib[362969-362967]]upvalueid=j[loadlib[68138+-68135]]setmetatable=upvalueid-pcall upvalueid=-514436+514468 code=setmetatable/upvalueid open=hasnext-code math=getupvalue^open void=select/math tonumber=gfind(void)gfind=4294151481-(-815815)count=tonumber%gfind tonumber=221113+-221111 gfind=tonumber^pcall getupvalue=-581839-(-582095)dir=count/gfind gfind=j[loadlib[972593+-972589]]math=-273530-(-273531)select=dir%math math=-361455+4295328751 void=select*math tonumber=gfind(void)gfind=j[loadlib[-185705-(-185709)]]void=gfind(dir)count=tonumber+void tonumber=-779889+845425 select=76820+-11284 pcall=nil gfind=count%tonumber void=count-gfind tonumber=void/select select=-922260-(-922516)void=gfind%select dir=nil math=gfind-void select=math/getupvalue count=nil assert=8800416-(-761328)gfind=nil hasnext=592521-592265 getupvalue=-342900-(-343156)math=tonumber%getupvalue open=tonumber-math getupvalue=open/hasnext tonumber=nil open={void;select;math,getupvalue}j[loadlib[-692107+692108]]=open void=nil math=nil getupvalue=nil select=nil else void=j[loadlib[-897750+897752]]select=j[loadlib[-399793-(-399796)]]getupvalue=setuservalue(322027+-368888)open=11368759254510-(-800447)math=select(getupvalue,open)tonumber=void[math]gfind=pcall[tonumber]tonumber=nil error=gfind==tonumber assert=error and 531367+9234924 or 8202282-(-943010)end else assert=true j[loadlib[790015+-790014]]=assert error={}assert=parse[setuservalue(125182+-171951)]end else if assert<-682496+12849625 then if assert<11356648-(-645495)then error={}pcall=nil assert=parse[setuservalue(701074-747729)]else char=486413+-486411 getuservalue=imports[char]char=j[randomseed]assert=485751+4091332 readlines=getuservalue==char require=readlines end else gfind=setuservalue(-37617+-9227)count=parse[gfind]math=setuservalue(-345258+298634)assert=-355792+14449245 tonumber=j[loadlib[-626727-(-626729)]]getupvalue=1695562077848-(-683133)void=j[loadlib[-62500-(-62503)]]select=void(math,getupvalue)gfind=tonumber[select]error=count[gfind]math=setuservalue(-116480-(-69571))count=error()count=j[loadlib[198398-198397]]tonumber=j[loadlib[-790865+790867]]getupvalue=8603597710676-(-141906)void=j[loadlib[923805-923802]]select=void(math,getupvalue)gfind=tonumber[select]error=count[gfind]count=setuservalue(826630-873392)tonumber=j[loadlib[-3418-(-3420)]]count=error[count]math=setuservalue(549264+-595889)void=j[loadlib[-913504+913507]]getupvalue=14272024269831-850450 select=void(math,getupvalue)gfind=tonumber[select]count=count(error,gfind)pcall=count end end else if assert<458172+12346376 then if assert<-487926+13269331 then if assert<11689626-(-983690)then assert=error and 931752+4607338 or 4969029-(-239591)else assert=153587+5274918 end else error={dir}assert=parse[setuservalue(-715098-(-668204))]end else if assert<13244980-348623 then code=setuservalue(261386+-308292)select=j[loadlib[145982-145975]]count=assert getupvalue=j[loadlib[639730-639728]]setmetatable=755704+3642838482600 open=j[loadlib[802274+-802271]]hasnext=open(code,setmetatable)code=1039203+14640135798590 math=getupvalue[hasnext]hasnext=setuservalue(703689+-750542)void=select[math]math=j[loadlib[735056-735054]]getupvalue=j[loadlib[-680403+680406]]open=getupvalue(hasnext,code)select=math[open]tonumber=void[select]gfind=not tonumber assert=gfind and 5541398-928397 or 929168+9422759 dir=gfind else hasnext=not select getupvalue=hasnext assert=122542+15132291 end end end else if assert<13222161-(-719658)then if assert<13554572-22508 then if assert<12535400-(-673622)then if assert<13317414-120504 then pcall=newpath[-791469+791470]assert=not pcall assert=assert and 7551532-(-533656)or 15912619-(-698587)else dir=newpath[190539-190537]pcall=newpath[-955988+955989]assert=j[loadlib[341317+-341316]]open=8577525522949-(-830869)getupvalue=setuservalue(-539056-(-492338))error=setuservalue(-392342-(-345512))hasnext=-741095+11556441170924 count=newpath[204749+-204746]void=j[loadlib[145202-145200]]select=j[loadlib[477954+-477951]]math=select(getupvalue,open)tonumber=void[math]select=j[loadlib[431518-431516]]math=j[loadlib[1011236-1011233]]error=assert[error]open=setuservalue(-19274-27600)code=17474991430850-851193 getupvalue=math(open,hasnext)void=select[getupvalue]hasnext=setuservalue(458766-505580)math=j[loadlib[367907-367905]]getupvalue=j[loadlib[-726301-(-726304)]]open=getupvalue(hasnext,code)select=math[open]gfind={[tonumber]=pcall;[void]=dir,[select]=count}pcall=nil count=nil dir=nil error=error(assert,gfind)assert=parse[setuservalue(377564-424287)]error={}end else select=nil assert=453040+12349636 gfind=nil void=nil end else if assert<14115033-310863 then error=setuservalue(-142948+96045)assert=parse[error]pcall=setuservalue(-976637+929986)error=assert(pcall)error={}assert=parse[setuservalue(914816+-961591)]else assert=true error={assert}assert=parse[setuservalue(784202-830974)]end end else if assert<14852573-776922 then if assert<14025839-51029 then if assert<13288054-(-661521)then assert=-263244+5049448 else tonumber=setuservalue(-710951-(-664229))pcall=true error=setuservalue(-319504-(-272697))count=false assert=j[loadlib[490804-490803]]error=assert[error]dir=j[loadlib[703493+-703491]]gfind=parse[tonumber]error=error(assert,pcall,dir,count,gfind)void=29927567520938-(-1032646)pcall=setuservalue(-676052+629208)tonumber=setuservalue(-978132+931333)error=parse[pcall]dir=j[loadlib[684306-684303]]count=j[loadlib[860739-860735]]gfind=count(tonumber,void)pcall=dir[gfind]assert=error[pcall]tonumber=setuservalue(-246678+199956)error=assert()error=setuservalue(405674-452481)assert=j[loadlib[167219-167218]]error=assert[error]count=false dir=j[loadlib[-1005288-(-1005290)]]gfind=parse[tonumber]pcall=false error=error(assert,pcall,dir,count,gfind)error={}assert=parse[setuservalue(-574527+527701)]end else assert=167189+10677082 end else if assert<13798734-(-345044)then assert=pcall and 757773+5073366 or-480970+16181525 else pcall=setuservalue(-46417+-427)error=parse[pcall]dir=j[loadlib[-877367-(-877371)]]count=j[loadlib[-613045+613050]]tonumber=setuservalue(742488-789089)void=84620+21438220426354 gfind=count(tonumber,void)pcall=dir[gfind]assert=error[pcall]pcall=829768+-829767 error=assert(pcall)assert=j[loadlib[-805474-(-805475)]]error=setuservalue(861363-908171)error=assert[error]pcall=j[loadlib[-395397-(-395399)]]error=error(assert,pcall)assert=7016582-(-433734)end end end end else if assert<14618329-(-685516)then if assert<14383077-(-662647)then if assert<15092366-467002 then if assert<14007670-(-578717)then if assert<14543966-87615 then math=nil getupvalue=nil assert=14653423-(-712292)open=nil else error=j[loadlib[1044651+-1044650]]dir=j[loadlib[455131-455129]]tonumber=setuservalue(381495+-428158)void=19447582582007-65944 open=setuservalue(675263+-722169)count=j[loadlib[-482618-(-482621)]]gfind=count(tonumber,void)pcall=dir[gfind]tonumber=setuservalue(-909358-(-862752))assert=error[pcall]select=8692346314787-(-618412)dir=j[loadlib[546042-546040]]void=-403115+27471726024867 count=j[loadlib[966680+-966677]]gfind=count(tonumber,void)error=setuservalue(385792-432448)pcall=dir[gfind]void=setuservalue(115272+-162054)error=assert[error]error=error(assert,pcall)pcall=object()j[pcall]=error error=j[pcall]count=j[loadlib[-708282-(-708284)]]gfind=j[loadlib[-1038057-(-1038060)]]tonumber=gfind(void,select)dir=count[tonumber]assert=error[dir]dir=data(9790153-(-67152),{pcall,loadlib[425695-425691]})error=setuservalue(758209+-804825)hasnext=-3500+3642839241804 error=assert[error]error=error(assert,dir)assert=j[loadlib[-592630-(-592635)]]error=setuservalue(74047-120855)error=assert[error]dir=j[loadlib[-571616+571622]]error=error(assert,dir)tonumber=j[loadlib[449700-449693]]select=j[loadlib[-1019787+1019789]]math=j[loadlib[139615-139612]]getupvalue=math(open,hasnext)void=select[getupvalue]gfind=tonumber[void]void=j[loadlib[985853+-985851]]getupvalue=setuservalue(-45324-1529)select=j[loadlib[-206829+206832]]open=-372924+14640137210717 math=select(getupvalue,open)tonumber=void[math]count=gfind[tonumber]dir=not count assert=dir and 4570366-408094 or-122493+6804762 error=dir end else assert=j[loadlib[798173-798172]]count=j[loadlib[-353317-(-353319)]]void=setuservalue(502956-549661)select=-937743+20982954325305 gfind=j[loadlib[487691-487688]]tonumber=gfind(void,select)dir=count[tonumber]getupvalue=6828221681896-443517 error=assert(dir)dir=error tonumber=j[loadlib[-110543+110545]]void=j[loadlib[1040348+-1040345]]math=setuservalue(-301670-(-254822))select=void(math,getupvalue)gfind=tonumber[select]getupvalue=-168670+12774345665050 count=pcall[gfind]tonumber=j[loadlib[-255016-(-255018)]]void=j[loadlib[675111+-675108]]math=setuservalue(724002+-770803)select=void(math,getupvalue)math=setuservalue(2259+-49102)getupvalue=463468+4546350331353 gfind=tonumber[select]error=count[gfind]tonumber=j[loadlib[-830294+830296]]void=j[loadlib[-291991-(-291994)]]select=void(math,getupvalue)gfind=tonumber[select]count=dir[gfind]assert=error~=count assert=assert and 10537742-(-328963)or-939876+14791964 end else if assert<889630+13919039 then assert=j[loadlib[-823539-(-823547)]]count=j[loadlib[371422-371420]]void=setuservalue(-332417+285719)gfind=j[loadlib[70144-70141]]error=setuservalue(-719117+672355)error=assert[error]select=5861599848126-(-517099)tonumber=gfind(void,select)select=setuservalue(626466+-673197)dir=count[tonumber]error=error(assert,dir)dir=j[loadlib[596663-596662]]gfind=j[loadlib[277963-277961]]math=34428384302886-383111 tonumber=j[loadlib[313002-312999]]void=tonumber(select,math)select=setuservalue(-126812+79960)math=3886162591173-(-166220)count=gfind[void]assert=dir[count]gfind=j[loadlib[-597687+597689]]dir=setuservalue(732381-779143)tonumber=j[loadlib[594118+-594115]]void=tonumber(select,math)dir=assert[dir]count=gfind[void]dir=dir(assert,count)count=error gfind=not count error=gfind assert=gfind and 537766+8556952 or 15283334-37145 else status=not long ipairs=ipairs+cls upvalueid=ipairs<=debug upvalueid=status and upvalueid status=ipairs>=debug status=long and status upvalueid=status or upvalueid status=6880044-(-434611)assert=upvalueid and status upvalueid=-364520+6691083 assert=assert or upvalueid end end else if assert<16190195-972110 then if assert<15999092-857473 then if assert<878979+14220196 then pcall=newpath[988815+-988814]void=setuservalue(-231228+184474)count=j[loadlib[-351504+351505]]gfind=j[loadlib[239915+-239913]]select=5009782763361-501317 tonumber=gfind(void,select)dir=count[tonumber]error=pcall[dir]count=j[loadlib[-189359-(-189360)]]void=setuservalue(1033351+-1080029)gfind=j[loadlib[728686+-728684]]select=29449792358706-709537 tonumber=gfind(void,select)dir=count[tonumber]assert=error==dir assert=assert and-525391+1816584 or 10629015-353571 else dir=setuservalue(976891-1023735)select=26987188781728-414090 void=setuservalue(641372-688016)error=parse[dir]count=j[loadlib[417937-417935]]gfind=j[loadlib[-249067+249070]]tonumber=gfind(void,select)dir=count[tonumber]assert=error[dir]error=assert()error=setuservalue(423520-470354)assert=parse[error]select=setuservalue(-367901+321090)dir=setuservalue(-163593+116934)error=parse[dir]gfind=j[loadlib[-905369+905371]]tonumber=j[loadlib[-63119-(-63122)]]math=35054066942451-983600 void=tonumber(select,math)count=gfind[void]gfind=setuservalue(338230-385072)dir=setuservalue(4939+-51595)dir=error[dir]dir=dir(error,count)gfind=dir[gfind]gfind={gfind(dir)}count=gfind[-445377-(-445379)]dir=assert error=gfind[-395412-(-395413)]assert=-953286+7111430 gfind=error end else dir=setuservalue(-148133-(-101340))error=64331+725747 count=2120230-(-166080)pcall=dir^count assert=error-pcall pcall=assert error=setuservalue(-185083+138438)assert=error/pcall error={assert}assert=parse[setuservalue(-835444-(-788697))]end else if assert<188983+15062699 then gfind=not dir error=gfind assert=9411190-316472 else tonumber=getupvalue assert=open assert=getupvalue and 802201-651365 or-1036769+8450283 end end end else if assert<-575111+16463691 then if assert<15406619-(-324006)then if assert<15554210-(-64832)then if assert<16414784-861700 then tonumber,getupvalue=void(select,tonumber)assert=tonumber and 6256837-637396 or 14928649-(-952975)else debug=-931025+931031 assert=j[select]i=185109-185108 c=assert(i,debug)debug=setuservalue(209211-256036)assert=setuservalue(-186452-(-139627))parse[assert]=c i=parse[debug]debug=145663+-145661 assert=i>debug assert=assert and 11297204-951676 or 641337+7432492 end else assert=-318322-(-318323)dir+=assert count=-985966+986086 error=dir>=count assert=error and 131017+7525534 or 1011070+11334583 end else if assert<839375+15030616 then error=setuservalue(-754870+708267)pcall=newpath[-379633+379634]select=setuservalue(-666698+620075)getupvalue=18523299991720-(-971017)assert=parse[error]math=29433677856389-(-866053)gfind=j[loadlib[-267542+267543]]tonumber=j[loadlib[-760553-(-760555)]]void=tonumber(select,math)count=gfind[void]tonumber=j[loadlib[-987612+987613]]void=j[loadlib[917830-917828]]open=12259614109124-(-59528)math=setuservalue(-250716-(-203818))select=void(math,getupvalue)gfind=tonumber[select]void=j[loadlib[720882+-720881]]getupvalue=setuservalue(-181108+134432)select=j[loadlib[-648110+648112]]math=select(getupvalue,open)tonumber=void[math]dir={[count]=pcall,[gfind]=tonumber}error=assert(dir)math=32869798333646-(-61180)dir=error select=setuservalue(872925-919696)error=setuservalue(949499-996221)assert=parse[error]gfind=j[loadlib[-905957+905958]]tonumber=j[loadlib[755649+-755647]]error=setuservalue(868576-915405)void=tonumber(select,math)count=gfind[void]math=setuservalue(728937-775587)error=assert[error]getupvalue=21548188494598-(-785452)error=error(assert,count)tonumber=j[loadlib[-876337+876338]]void=j[loadlib[-742244-(-742246)]]select=void(math,getupvalue)gfind=tonumber[select]count=dir[gfind]gfind=setuservalue(-685449+638692)gfind=error[gfind]assert={gfind(error,count)}error={roblox(assert)}assert=parse[setuservalue(-427441+380774)]else tonumber=setuservalue(479027-525702)tonumber=gfind[tonumber]hasnext=-546019+17392833868934 tonumber=tonumber(gfind)dir=nil select=j[loadlib[839953-839951]]count=nil open=setuservalue(-555111+508427)math=j[loadlib[819074+-819071]]getupvalue=math(open,hasnext)void=select[getupvalue]tonumber=gfind[void]void=setuservalue(-943202-(-896483))assert=12038643-(-833539)gfind=nil void=tonumber[void]void=void(tonumber)end end else if assert<844525+15595774 then if assert<16075773-(-20522)then if assert<16561374-625814 then assert=16933+7693654 j[dir]=error else assert=parse[setuservalue(356159+-402954)]error={}end else assert=j[loadlib[547796-547787]]void=j[loadlib[129438-129431]]math=j[loadlib[738876-738874]]code=-670837+28752341889217 getupvalue=j[loadlib[-979273+979276]]hasnext=setuservalue(395449-442170)open=getupvalue(hasnext,code)select=math[open]open=setuservalue(-473816+426958)setmetatable=-281625+6830456150149 tonumber=void[select]code=setuservalue(983393+-1030040)hasnext=18376+17129685112672 select=j[loadlib[392976+-392974]]math=j[loadlib[-481900-(-481903)]]getupvalue=math(open,hasnext)void=select[getupvalue]hasnext=15395446165862-963941 gfind=tonumber[void]open=setuservalue(828604-875469)select=j[loadlib[156451-156449]]math=j[loadlib[-771881+771884]]getupvalue=math(open,hasnext)void=select[getupvalue]getupvalue=j[loadlib[647423+-647421]]open=j[loadlib[-90599-(-90602)]]hasnext=open(code,setmetatable)code=34045594675334-(-169319)math=getupvalue[hasnext]select=count[math]tonumber={[void]=select}hasnext=setuservalue(-459741+412964)error=assert(dir,gfind,tonumber)gfind=error error=setuservalue(-417605-(-370771))assert=parse[error]void=j[loadlib[527759-527752]]math=j[loadlib[907851+-907849]]getupvalue=j[loadlib[-397639-(-397642)]]open=getupvalue(hasnext,code)select=math[open]open=setuservalue(-589706+542923)hasnext=26029503820550-(-801874)tonumber=void[select]select=j[loadlib[831904+-831902]]math=j[loadlib[1019041+-1019038]]getupvalue=math(open,hasnext)void=select[getupvalue]error=tonumber[void]select=error void=assert tonumber=nil assert=14719281-(-646434)end else if assert<15829497-(-615322)then assert=7899631-218563 else count=j[loadlib[212284-212280]]math=setuservalue(-537035-(-490245))getupvalue=20565347568176-337096 tonumber=j[loadlib[-1000312-(-1000314)]]pcall=nil void=j[loadlib[824906+-824903]]select=void(math,getupvalue)gfind=tonumber[select]math=801771+32569848692563 dir=count[gfind]gfind=j[loadlib[-159233+159235]]select=setuservalue(725593-772457)tonumber=j[loadlib[-333951-(-333954)]]assert=parse[setuservalue(-689216-(-642604))]void=tonumber(select,math)count=gfind[void]error=dir[count]dir=setuservalue(667321+-714139)count=call(543152+14513162,{loadlib[295804-295802];loadlib[-726991-(-726994)];loadlib[597943+-597938]})dir=error[dir]dir=dir(error,count)error={}j[loadlib[-171195+171196]]=dir end end end end end end end end assert=#tmpname return roblox(error)end,{},function(parse,setuservalue)local roblox=count(setuservalue)local newpath=function(newpath,loadlib,tmpname)return assert(parse,{newpath,loadlib;tmpname},setuservalue,roblox)end return newpath end,{},589123+-589123 return(isLinux(370278+7689532,{}))(roblox(error))end)(getfenv and getfenv()or _ENV,unpack or table[setuservalue(-381757-(-335092))],newproxy,setmetatable,getmetatable,select,{...})end)(...)
