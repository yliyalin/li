return(function(...)local raise={"\069\103\122\073\104\108\057\061","\049\113\101\114";"\104\079\113\118\099\112\051\055\107\074\097\082\117\080\071\061";"\085\106\120\061";"\101\051\088\121\085\051\070\061","\049\098\077\078\109\122\061\061","\082\047\043\107\099\105\076\065\083\116\084\079\104\071\102\061","\085\108\077\080\054\122\061\061";"\055\081\114\088\101\057\077\083\090\069\081\070\065\106\053\069\068\070\061\061","\102\101\106\069\111\084\052\078\065\111\086\116\107\104\083\061","\100\075\083\097\112\049\061\061";"\116\070\049\082\098\049\061\061";"\120\083\085\089\055\111\121\085\112\049\061\061";"\107\098\119\088\050\074\069\112\074\054\090\114\057\081\122\051\087\119\119\049\085\112\051\110\081\052\103\074\048\070\061\061","\076\072\071\070\068\067\075\083\109\113\118\083\071\055\090\071","\098\097\084\076\104\067\083\061";"\049\055\053\098\072\069\081\117\090\051\077\110\085\052\061\061","\053\066\067\099\105\066\114\072\085\069\089\083";"\122\085\108\079\072\052\061\061";"\053\050\053\110\104\056\097\056\052\085\054\061";"\119\083\120\071\052\053\082\061","\104\119\081\043\054\079\054\071\112\122\086\114\111\113\089\102\104\052\061\061","\090\112\118\080\080\049\061\061";"\099\078\108\108\078\109\070\061";"\100\083\098\112\080\103\080\117\054\070\061\061";"\088\109\114\117\049\057\077\065\055\098\087\075\090\107\088\120";"\076\105\084\068\068\066\080\056\070\108\074\066\097\088\083\099\079\071\048\070\066\069\043\080\087\089\117\112\098\081\087\086\070\104\071\112","\107\108\057\075\070\087\074\118\122\086\078\099\114\055\122\071\106\076\050\107","\118\083\065\114\104\073\101\108\106\049\106\076\099\065\114\049\079\089\112\087\076\122\061\061";"\070\115\051\068\104\080\120\061";"\071\117\118\075\105\072\081\078\072\107\054\087\049\113\121\104";"\118\054\054\088\069\118\083\061";"\051\074\086\121\115\107\106\082\112\043\112\089\075\083\066\118\072\114\082\108\088\114\055\090\066\052\099\085\057\082\057\107\090\066\090\090\088\080\084\061","\069\085\105\111\048\086\089\057\098\086\077\112\043\099\047\113","\117\084\089\054\047\105\057\119\109\108\098\061","\053\119\072\053\066\122\061\061";"\109\051\077\066\099\106\098\061";"\106\113\110\077\056\114\110\090\103\081\076\051\122\108\051\054\105\047\084\061","\122\052\057\100\049\051\083\061";"\107\122\061\061";"\053\051\077\080\071\069\089\079\085\113\081\117\090\122\061\061";"\101\113\081\121\118\051\118\112\085\051\072\061";"\078\108\119\056\108\097\077\085\078\090\100\104\076\068\079\066\071\070\061\061","\068\107\053\057\101\054\090\077\090\122\061\061";"\065\120\043\097\056\053\079\114\087\122\061\061";"\090\069\089\103\105\100\088\070\071\055\088\077";"\049\111\081\057\090\051\089\079\050\098\053\110\090\069\082\061","\086\055\103\066\073\102\079\098","\102\073\071\065\099\083\076\066\113\104\099\086\050\052\061\061","\074\114\083\057\105\056\074\066\089\116\080\055\071\082\102\061","\049\100\075\077\071\066\053\077\081\069\077\079\118\051\089\100","\055\113\087\113\053\055\087\071\088\113\067\097\118\107\112\113\072\052\061\061","\101\113\081\087\090\055\081\080\090\122\061\061";"\114\068\120\121\101\118\122\069";"\065\055\121\086\076\055\097\116\049\109\090\088\085\066\081\053\050\051\054\061","\107\110\068\074\109\049\061\061","\056\098\071\097\076\054\122\061","\099\106\117\116\117\075\070\061","\109\072\047\107\049\109\075\107\053\055\075\117\088\109\050\057";"\070\120\051\098";"\097\105\112\053\082\069\068\050\085\081\049\061","\043\049\061\061","\065\116\108\079\084\085\071\061";"\067\074\111\088\049\082\100\121\049\057\052\061";"\076\114\112\052\065\097\081\079","\105\083\069\121\073\113\097\110\107\070\061\061","\101\113\067\079\118\051\089\097";"\108\047\115\077\100\104\086\103\055\049\061\061","\078\076\075\105\056\053\088\121\080\103\119\086\115\084\057\061";"\056\055\121\088\054\069\106\051","\103\083\112\081\083\114\105\065\113\070\061\061";"\104\073\100\120\081\052\061\061","\074\073\068\120\084\043\049\061","\105\113\049\099\068\113\121\083\118\069\087\050\053\113\087\082","\050\117\053\118\109\106\067\114\101\069\121\049\053\054\081\057\118\070\061\061";"\116\067\083\057\097\086\079\065\098\112\103\047\051\073\099\072\112\089\072\097\104\084\076\065\048\051\102\077\071\088\085\097","\114\066\067\076\103\120\082\061","\080\069\066\106\074\053\090\108\085\085\116\056\051\065\120\061","\119\112\099\104\087\119\089\103\083\112\101\101\075\121\109\055\055\052\061\061","\050\114\073\108\051\100\121\109\074\103\050\061","\066\106\104\054\105\052\061\061";"\050\103\121\116\121\070\061\061","\081\122\090\088\082\085\101\077\056\070\078\109\052\048\113\069\056\083\071\061";"\043\043\057\075\090\076\102\061","\085\055\067\057\105\122\061\061";"\077\067\099\048\090\053\108\057\103\107\109\074\047\052\061\061";"\066\099\089\097\118\066\053\121\090\051\067\116\085\051\072\061";"\081\050\071\043\088\049\106\071\122\075\098\054","\122\104\119\082\073\068\050\061","\098\082\055\106\114\048\066\097\057\075\120\047\047\070\061\061","\070\122\052\071\048\084\074\054\075\122\071\061","\084\101\116\047\097\047\087\087","\118\107\088\069\101\054\097\098\076\109\075\079\090\069\081\049";"\071\089\078\054\099\048\077\078\083\122\053\102";"\069\090\116\104\072\106\108\075\070\118\121\054";"\118\051\067\077\105\098\084\100\101\099\081\103\071\100\053\055\065\054\102\061","\101\056\051\084\111\088\056\108\087\115\052\061";"\106\099\112\053\085\109\049\061";"\077\086\115\049\122\107\049\061","\118\107\075\121\118\099\053\110\118\069\090\083\118\049\061\061";"\077\048\113\077\072\120\082\087\066\082\111\079";"\077\057\081\080\053\104\077\056\086\118\083\061","\081\070\100\087\087\057\112\077\118\109\053\097\072\068\099\070\053\098\053\085";"\101\072\089\067\072\117\067\104\068\100\114\053\088\080\081\108\071\077\098\061","\065\105\068\075\120\100\104\065\056\102\098\061";"\085\069\047\109\071\072\089\056\101\117\118\104\068\111\118\108\053\070\061\061","\079\049\061\061","\084\048\121\049\087\052\061\061";"\049\111\081\112\085\051\053\075\085\111\053\077\101\113\118\121\071\069\081\109\118\055\088\057\105\055\089\079";"\085\111\075\087\076\106\120\057\068\072\049\057\088\055\067\086","\070\103\098\122\084\070\061\061";"\070\112\077\108\067\072\122\053\118\100\051\055\117\056\077\077\119\120\072\113","\089\082\099\071\050\088\122\070\075\075\103\116\049\079\102\061";"\075\098\105\072\097\049\049\061";"\071\090\065\116\066\082\082\088","\049\108\122\082\053\088\111\122\079\077\083\055\107\098\098\049\110\048\099\115","\053\055\083\106\052\086\102\103\107\075\048\120\099\102\066\089\071\077\108\082\097\070\061\061";"\119\079\120\089\047\079\122\061","\101\109\077\081\118\057\047\047\088\113\102\082\049\111\053\110\053\052\061\061";"\120\117\050\116\112\086\117\086";"\108\067\053\085\076\048\085\088\119\073\106\069\110\110\052\080\078\075\088\047\056\086\108\109\089\073\073\066\081\067\070\055\073\076\119\117\051\117\107\113\082\075\098\110\048\049\061\061","\112\047\100\109\090\108\100\080\106\108\109\099";"\068\113\097\049\068\111\114\103\072\100\067\087\118\080\067\112\076\052\061\061";"\047\115\066\086\072\114\098\116\088\089\116\056\087\074\053\114\087\078\075\070\077\070\061\061","\090\115\081\090\107\107\079\099\113\081\052\054";"\110\076\050\085\116\065\076\109";"\122\117\050\083\073\066\050\061","\066\053\107\087\116\048\068\089\111\050\083\061";"\081\084\100\053","\081\070\101\114\071\048\119\079\065\055\101\097\121\102\052\061","\120\054\082\086\103\074\048\088\082\075\050\081\107\049\061\061","\069\111\110\111\073\047\114\071\084\043\080\107","\055\055\077\053\109\072\097\112\050\072\090\116\053\057\067\080","\118\100\087\076\073\043\122\069\113\049\070\081\115\116\108\105\101\097\090\076\068\105\067\076\083\084\052\104\097\083\081\079\079\081\101\061","\072\055\086\079\069\120\109\053\084\049\061\061","\079\078\043\049\109\122\068\085","\104\103\106\072\079\076\049\097\056\049\061\061","\081\072\053\112\085\049\061\061","\072\069\081\079\118\054\097\077\076\072\081\069\118\055\047\057";"\107\084\117\071\098\077\098\073";"\050\068\090\108\109\111\085\076\112\117\085\054";"\075\053\083\055\120\049\061\061";"\072\052\104\068\070\106\051\097\121\101\113\122\067\071\113\104\115\118\071\082","\089\100\109\083\120\049\109\111\072\066\072\053\053\121\104\049","\076\120\071\047\065\088\113\071\087\078\117\068","\084\110\117\105\088\052\061\061","\099\111\053\089\053\048\043\117\083\122\052\068\100\048\080\072";"\049\055\053\098\068\055\047\070\090\066\049\061";"\057\107\105\043\050\052\061\061","\087\111\081\082\065\043\067\050\072\049\070\061","\112\055\048\118\072\087\104\089\043\122\061\061";"\078\100\066\072\108\115\102\061";"\081\081\075\116\065\109\088\114\109\055\087\110\055\111\067\069\090\057\072\061","\101\072\043\084\074\052\081\119\047\050\053\104\084\108\097\071\116\085\056\071\102\072\102\121\076\099\117\088\069\047\056\104\070\081\101\056\099\084\051\117\057\065\066\084\052\082\047\051\085\079\075\082\086\084\081\108\084\081\077\081\088\078\066\114\121\083\055\053\071\113\075\051\049\088\066\048\081\117\052\080\068\055\072\107\083\103\117\086\048\107\113\116\069\074\077\050\067\071\082\098\089\069\122\066\113\117\085\088\116\107\080\054\121\088\055\065\072\106\083\061";"\089\066\089\112\108\078\106\085\070\090\078\117\071\065\086\075\090\049\061\061";"\099\112\103\107\082\070\061\061","\104\104\078\087\114\097\049\061";"\112\100\067\048\113\117\115\103\115\098\066\071\048\071\073\114\119\112\089\122\080\075\112\107\098\097\054\087\069\106\107\078\078\049\112\087\115\108\079\084\111\108\076\109\119\084\119\049\073\077\105\104\120\119\055\047\071\100\102\119\114\067\057\043\067\070\061\061","\073\052\111\069\106\086\084\084\043\098\112\070\119\068\120\061","\081\071\053\097\075\083\055\121\117\118\072\061";"\053\056\097\069\105\073\071\080\054\050\120\061","\066\047\048\080","\072\119\078\072\074\049\119\068\051\078\122\061","\110\049\090\110\088\102\071\089\121\080\072\061";"\074\121\081\110\104\099\102\101\086\116\082\065\048\075\117\098\073\054\048\075\077\075\110\076";"\081\106\121\104\072\077\118\086\081\106\118\113\109\051\090\110\118\107\098\061";"\043\116\105\053\099\089\082\061","\086\065\081\049\080\099\083\061","\116\065\118\068\110\108\084\047\115\053\121\047","\053\116\057\101\114\075\072\112\113\122\061\061";"\080\100\121\052\072\072\053\107\098\086\054\061","\111\075\083\054\066\065\108\118\079\088\070\061";"\053\069\081\057\072\069\081\103\090\113\077\117\118\049\061\061","\118\069\081\057\118\069\081\079\090\052\061\061","\113\076\072\110\110\122\061\061";"\081\113\081\117\090\051\089\103\050\052\061\061";"\112\065\118\084\057\086\066\078","\113\103\053\086\069\049\061\061","\097\077\081\055\075\108\072\061";"\114\071\119\120\075\099\100\066\066\099\122\049\088\122\100\115\107\070\061\061";"\054\069\101\061";"\103\055\078\105","\053\051\081\080\090\107\075\110\076\049\061\061","\071\069\121\121\101\052\061\061";"\081\051\067\097\101\051\081\103\120\054\053\077\090\051\081\117\090\051\081\098\120\049\061\061";"\105\072\053\079\105\098\052\070\105\057\121\111\105\072\075\075\085\109\122\061","\043\116\052\083\101\118\070\061";"\066\080\071\068\104\097\121\076\107\077\072\085\081\057\118\070\107\082\109\121\071\067\066\106\087\049\061\061","\071\115\083\117\120\075\083\061","\083\076\118\121\107\052\061\061";"\099\067\120\069\084\097\050\056\051\120\108\090\090\070\061\061","\076\051\079\085\054\086\107\119\076\068\054\061";"\118\107\075\121\118\099\088\057\071\066\075\057","\068\055\047\080\090\051\067\079\071\069\072\061";"\070\101\072\074\089\049\061\061";"\086\100\052\071\079\083\121\057\108\080\067\102\117\057\101\061";"\102\055\119\111\101\066\105\070\088\109\083\119\048\098\052\061","\057\086\081\112\100\087\079\120\070\122\061\061";"\101\090\121\053\114\080\113\085\066\082\049\061";"\114\088\052\122\104\052\061\061";"\102\122\073\074\103\122\061\061";"\057\048\109\065\106\052\061\061";"\067\100\121\072\105\087\074\098\048\049\061\061","\078\077\101\056\075\119\052\056\055\122\061\061";"\071\111\077\057\118\049\061\061","\073\050\121\110\103\107\054\048\084\052\061\061","\109\098\084\047\114\100\073\084\108\114\052\072","\108\056\077\083\104\118\066\116\115\105\113\119\080\074\090\081\105\108\107\073\100\049\061\061","\117\081\048\081\057\049\061\061";"\085\106\121\087\109\067\118\074\068\113\118\120\065\054\081\088\081\122\061\061";"\085\113\081\082\090\122\061\061","\053\069\082\069\101\081\075\074\065\066\114\067\053\106\121\072\072\057\057\061";"\065\054\053\088\105\066\077\067\090\067\114\057\088\067\114\071\085\098\098\061","\083\043\068\073\084\048\054\061";"\118\055\076\050\051\073\122\070\078\097\102\061","\077\065\120\084\043\049\061\061";"\118\107\075\121\118\057\077\079\101\107\081\057";"\053\113\077\079\118\054\118\112\101\111\088\057\049\069\121\112\085\051\049\061","\097\114\083\086","\047\099\117\073\079\103\109\087\120\066\086\108\090\074\075\068\074\055\073\077","\072\072\078\114\097\073\049\085\105\119\082\101\076\072\052\061","\055\108\079\105\112\057\087\081\120\105\105\071";"\103\067\081\103\121\103\080\076\077\105\051\084\048\049\072\061","\115\047\085\048\105\070\122\054\054\097\069\051\068\122\061\061","\082\090\069\110\048\054\055\056\075\056\090\071\098\057\113\090\065\117\104\103\107\122\061\061","\087\114\065\050","\074\086\122\053\119\049\061\061","\052\054\067\101\068\052\073\101\069\067\071\061";"\068\077\081\111\076\067\090\082\050\069\121\082\049\072\097\100\088\070\061\061","\080\056\087\043\054\117\114\077\105\085\087\112\069\098\115\049\066\067\050\105\113\056\084\085\075\051\088\079\105\049\100\052\075\084\079\047\052\116\076\089\118\100\117\108\115\055\087\103\090\049\104\048","\101\049\048\102\066\074\052\061";"\053\069\081\057\053\051\081\080\071\069\081\079\118\051\067\079\090\107\050\061";"\073\122\075\081\070\110\088\107\055\052\061\061","\079\067\089\097\051\106\052\061","\116\072\072\090\100\116\104\077\043\103\105\086\043\074\054\117\089\055\069\108","\097\113\081\089\078\079\076\122\069\073\104\077\079\122\061\061","\075\075\086\088\078\116\083\061";"\099\049\052\057\105\070\061\061";"\071\072\085\099\104\097\085\070\067\047\072\061";"\110\087\116\115","\050\069\115\065\079\078\111\069\048\107\083\068\097\077\088\117\050\108\108\077\067\070\105\048\113\049\061\061";"\054\079\116\116\105\054\056\115\107\107\109\114\071\081\070\079\116\122\061\061";"\090\077\051\086\088\082\083\075\113\049\061\061","\053\057\075\100\065\109\088\118\076\072\101\082\072\106\114\088\101\111\101\061";"\099\105\070\069\086\099\089\077\069\111\100\088\089\050\067\049\085\073\084\061","\098\099\072\072\108\113\112\084\098\074\122\102\085\103\070\071\066\121\052\061","\051\065\052\106\101\080\110\117\108\047\102\057\086\086\077\114\099\099\057\119\053\105\122\081\048\083\104\109\117\111\075\122\118\103\118\106\056\105\098\090\079\080\119\051\086\077\109\101\047\101\073\117\115\098\114\119\110\072\113\087\085\074\066\056\075\080\107\111\068\119\100\088\097\048\065\101\056\122\114\106\085\120\048\109\099\065\114\051\078\080\071\061";"\053\065\084\070\120\112\106\103\069\106\049\048\073\097\083\061","\085\106\054\061";"\071\069\089\079\071\069\067\057","\072\075\116\052\079\043\069\050\088\068\088\084\098\120\113\109\048\066\118\113\101\087\090\055\079\047\115\043\051\066\086\110\082\120\119\118\079\097\072\104\108\084\110\049\048\070\116\051\072\111\114\054\086\115\068\103\098\080\122\072\102\085\112\113\110\111\102\118\047\121\106\047\067\076\069\049\081\110\050\101\101\084\066\122\117\072\084\104\052\077\122\113\048\085\069\081\050\070\061\061","\085\087\116\047\106\065\056\119\049\049\061\061";"\050\075\057\052\057\098\115\057\114\048\122\061","\107\102\101\088\104\086\099\077";"\048\106\072\105\110\090\088\090\054\104\049\061","\085\051\081\079","\111\098\104\110\072\070\061\061";"\073\049\114\085\043\098\098\061","\090\086\080\080\101\104\049\113\103\072\116\111\077\098\071\083\097\108\072\069","\053\066\112\121\068\057\053\079\101\055\088\077\085\054\121\116\055\052\061\061";"\050\043\113\105\090\070\061\061";"\113\077\101\055\055\066\043\108","\108\078\079\050\089\052\051\072\051\052\061\061";"\076\115\085\099","\072\117\053\110\109\067\121\054\050\098\081\054\101\107\067\082\053\049\061\061","\069\087\088\051\055\071\073\090\067\048\114\076","\049\055\053\098\053\107\075\110\101\051\053\110\090\069\082\061","\043\107\102\052\081\054\054\080\082\111\056\077";"\122\066\114\118\053\071\098\061";"\048\055\069\117\082\049\061\061","\065\054\112\081\055\072\088\050\071\066\071\057\053\072\089\047\109\098\083\061","\102\097\054\110\107\056\066\082\056\066\101\102";"\072\066\120\087\065\107\077\068\085\117\077\053\118\067\053\109\053\122\061\061";"\076\075\088\109\108\118\070\061","\066\065\049\106\119\052\061\061";"\050\071\051\114\076\103\053\055\109\087\047\053\048\076\087\119\072\113\049\061","\101\109\053\088\105\072\053\083\081\066\090\051\081\080\049\100\049\077\098\061";"\043\055\099\099\088\052\082\061";"\077\082\052\079\102\043\052\118\075\113\109\087","\120\106\107\085\117\100\084\067\053\053\043\048\104\104\054\072\068\089\122\061","\100\102\105\075\105\102\050\061";"\069\075\105\067\100\090\052\061";"\050\113\103\098\108\118\087\043\069\089\075\084\089\084\090\117\074\070\117\056\083\081\090\069\104\099\100\104\077\117\071\056\109\115\078\074\081\082\047\073\077\107\080\071\076\121\098\051\080\121\114\049\051\108\087\076\072\101\102\054\069\081\073\099\052\051\078\080\069\122\110\052\100\066\112\065\065\085\103\116\075\078\103\097\113\052\097\118\051\113\051\086\075\067\088\067\079\047\116\073\121\081\122\057\097\097\101\056\099\047\105\106";"\108\056\107\087\113\055\103\057\043\049\061\061";"\053\081\112\085\088\102\054\061","\053\113\077\079\118\054\118\112\101\111\088\057\049\069\121\112\085\051\053\056\118\098\088\083\071\066\088\080","\116\089\119\080\082\122\061\061","\117\052\083\085\070\102\080\118\082\049\061\061","\103\099\069\072\056\057\100\111\112\088\107\077\077\111\083\061";"\051\043\105\081\119\105\084\061";"\097\108\101\049\122\075\102\061","\075\089\118\103\085\104\101\069\051\043\120\061","\090\051\067\080\105\070\061\061";"\100\101\051\055\049\086\122\117\080\089\102\049";"\090\080\067\066\101\054\090\079\118\100\118\051\068\098\054\087\053\077\049\061","\088\107\067\110\117\122\061\061";"\048\110\050\099\054\070\102\061";"\073\055\088\084\083\105\054\111\113\103\100\066\112\108\065\047\099\113\108\080\055\080\043\105";"\065\116\052\077\118\043\102\112\065\052\061\061";"\085\052\050\068\074\120\083\056\113\119\054\074\082\078\115\074";"\068\066\088\114","\103\103\117\114\047\070\061\061";"\118\113\087\110\085\100\120\061";"\054\114\086\054\083\112\050\052\077\054\071\061","\076\112\056\067\056\055\101\061","\087\073\120\100","\069\052\061\061","\049\111\081\057\090\051\089\079\050\077\081\070";"\070\052\074\080\122\105\098\114\078\043\085\072\071\052\074\085\051\070\061\061";"\105\054\113\114\112\082\100\107\054\109\106\111\101\117\098\049\090\122\061\061";"\077\110\101\079\069\052\122\112\079\052\103\071\075\104\056\081";"\072\122\078\078\076\114\054\080\120\090\098\086\111\079\077\056\110\088\101\061";"\115\100\120\106\067\097\082\061","\101\117\122\053\055\070\121\097\100\102\078\108\080\101\120\061";"\104\090\047\104\054\070\097\089\076\117\122\106\106\100\072\097\043\068\066\056","\053\069\081\057\072\107\075\110\101\051\081\103\090\107\077\106\105\051\067\079\118\069\081\098\072\069\077\111\085\113\067\083";"\118\111\112\085\090\115\104\074\107\083\086\048\103\097\104\066";"\081\121\090\085\085\076\071\061";"\100\102\052\070\117\051\070\061","\090\051\089\080\090\107\075\112\085\113\101\061","\090\109\109\079\047\078\065\084\085\106\082\100\067\122\101\115\089\081\108\068\116\049\061\061","\111\122\061\061","\109\098\105\086";"\100\119\071\104\077\099\043\119\050\111\100\076\074\071\048\103\097\119\048\055","\051\084\116\117\112\110\076\116\108\111\072\106\056\066\104\097\087\081\119\089\065\121\051\108\119\122\061\061","\075\090\110\110\086\108\085\047\089\047\081\089\073\080\082\061","\068\122\061\061","\109\051\089\121\118\054\067\099\090\051\089\083\085\069\067\098\049\069\089\079\118\113\077\111","\077\116\100\107\097\115\050\061","\089\057\065\086\069\107\053\051\073\082\102\061";"\087\076\086\081\088\052\061\061","\081\069\067\112\090\054\118\110\101\098\088\102\105\055\087\098","\053\113\077\079\118\054\118\112\101\111\088\057\049\055\047\117\118\066\088\057\085\100\120\061";"\075\100\069\050\072\099\065\109\073\051\098\061";"\103\076\098\116\051\048\099\087\066\081\098\061","\119\083\098\076\077\103\099\097\074\108\110\121\106\090\070\107\118\065\118\104\053\084\103\100\083\119\072\104\071\070\043\082";"\109\049\061\061","\077\071\082\053\053\053\106\114\108\067\077\071\086\067\100\051\066\065\104\098\099\052\061\061";"\118\049\061\061";"\052\049\088\048\068\070\061\061";"\049\069\089\083\085\100\120\080","\076\103\106\099\108\050\116\120\078\066\076\102\099\078\099\056\089\070\104\087\080\086\105\070\082\122\061\061";"\087\043\067\079\097\122\061\061","\065\051\110\113\107\086\122\055\048\101\081\051\108\070\061\061";"\101\100\053\103\105\055\047\111","\118\105\109\043\084\054\065\103\108\120\081\109\069\116\102\061";"\105\066\088\071\118\117\088\102\072\117\075\083\071\117\053\050","\118\113\077\103\118\066\114\103\085\100\121\112\085\055\077\057\076\066\114\103\085\069\099\070\090\122\061\061","\070\102\100\097\104\122\084\048\043\083\122\048\073\052\061\061","\067\108\080\111\099\118\087\072\090\070\061\061";"\073\083\065\081\112\118\080\115\121\102\053\049\105\075\110\090\088\085\068\065\085\049\061\061";"\072\069\081\057\081\113\067\083\090\055\072\061";"\097\100\086\122";"\072\069\081\057\109\051\077\116\101\113\067\103\076\049\061\061","\075\113\083\057\073\087\076\082\107\084\052\061","\049\110\052\112\076\071\106\088\067\049\061\061","\085\051\089\121\118\107\088\057\101\113\077\079\118\070\061\061";"\101\100\053\121\101\111\053\049\085\100\050\061","\074\078\076\109\120\050\103\079\107\084\057\061","\102\057\077\057\043\070\061\061";"\102\049\090\083","\066\099\089\083\118\055\082\061";"\050\077\102\057\066\076\087\111\055\117\114\077\112\102\100\088\119\105\113\054\113\088\071\066\050\048\077\047\055\098\109\056","\065\076\112\099\057\070\061\061","\110\084\108\077\117\049\061\061","\072\117\101\069\049\117\088\113\055\107\067\069\109\069\099\110\055\067\072\061";"\073\086\103\078\086\122\061\061";"\098\122\057\061","\120\065\065\054","\049\057\118\103\071\055\099\077","\118\100\088\099\071\052\061\061","\057\113\121\072\085\083\121\113\078\116\077\080\104\066\088\080\108\068\113\055\071\052\105\117\121\122\061\061","\043\083\086\111\084\110\081\090\115\121\070\047\070\057\100\122","\099\067\098\111\082\070\061\061";"\087\119\070\090\122\049\122\061";"\043\071\077\074\087\098\122\085\054\078\053\097\084\104\101\067\066\047\085\119","\090\055\047\070\071\055\088\108","\119\100\076\080\109\078\107\069\048\100\054\061","\065\065\083\054\055\057\072\061";"\073\049\047\112\103\116\109\081\074\082\111\083\118\070\061\061";"\053\055\047\099\085\049\061\061";"\100\049\050\085\112\071\073\100\073\098\048\065\056\049\061\061","\088\109\053\049\088\113\072\100\105\067\077\078\109\072\077\118";"\121\100\070\086\106\076\080\106\071\069\077\074\115\070\061\061";"\076\072\055\049";"\075\086\082\067\103\049\061\061";"\106\073\114\055\113\076\111\073";"\122\108\100\084","\050\112\052\077\078\110\057\101\112\071\052\061","\100\109\086\121\077\118\087\073\052\043\108\077","\115\100\070\043\079\122\061\061","\109\068\104\083\048\055\053\107\066\120\122\105\100\122\061\061";"\053\120\048\082\072\052\061\061","\085\055\049\103\085\072\098\099\109\051\118\108\081\069\088\121\071\052\061\061","\097\069\118\075\097\049\061\061";"\110\070\061\061";"\053\106\121\074\090\055\097\082\076\081\053\099\081\077\090\072\076\122\061\061";"\098\115\115\088\100\070\061\061";"\065\080\075\056\087\070\061\061","\071\099\075\110\055\109\114\109\072\100\067\057\065\067\098\087";"\043\057\049\104\076\088\053\047\079\043\082\061","\120\043\085\055","\050\098\100\116\108\121\054\061","\098\105\074\117\052\071\069\065\103\108\118\098\119\097\050\076\078\097\048\113\114\052\061\061","\109\067\121\083\050\055\067\110\068\055\083\047\101\057\090\051\081\098\057\061";"\055\067\103\106\120\051\048\103","\082\087\074\048\073\087\068\052\069\070\061\061";"\067\100\078\078\086\081\115\108","\047\057\054\076\065\067\081\080\069\088\122\061";"\119\065\120\108","\105\107\085\119\110\074\054\061";"\072\088\055\107\054\089\082\061";"\101\057\051\082\106\070\075\099\088\070\061\061";"\050\102\099\043\097\049\061\061";"\118\081\112\050\050\113\089\065\085\051\084\070\105\066\088\070\105\111\072\061","\099\051\103\076\082\085\084\061","\075\088\047\087\120\082\109\085\108\111\047\049\057\053\114\049\075\086\108\102\112\070\061\061";"\106\109\101\050\049\122\061\061","\118\106\118\080\071\049\061\061";"\052\068\111\114\086\115\103\111\056\071\118\054\077\043\070\061","\119\108\089\048\111\072\047\115\049\052\061\061";"\074\111\098\105\079\070\061\061";"\103\107\085\098\049\118\101\061";"\081\113\081\117\090\051\089\103\050\070\061\061";"\118\071\100\084\089\122\061\061","\066\114\100\081\076\086\122\061","\068\077\088\056\109\098\053\077\071\069\089\098\118\049\061\061","\057\074\111\066\085\108\110\053\056\065\068\100\086\116\054\072\117\081\054\071";"\070\097\081\086\078\051\049\061","\088\052\061\061","\065\052\061\061";"\065\051\047\056\072\066\067\074\072\066\121\121\050\069\053\103\071\117\072\061","\122\122\068\076\069\047\075\112\067\100\043\118";"\098\089\084\049\054\070\061\061","\078\098\068\053\076\102\101\080\087\120\097\043","\089\104\048\085\117\109\115\113\070\048\056\115","\084\051\081\043\089\073\109\103\069\070\070\061";"\078\048\117\082\115\097\066\086\117\066\112\111\097\075\106\105\066\051\072\061";"\103\119\083\105\116\080\119\100\066\085\057\061";"\115\100\118\101\049\074\071\061","\111\120\122\112\112\052\078\099\089\052\061\061","\076\089\099\071\100\069\110\070\067\097\121\117","\118\051\077\097\118\081\088\099\049\117\077\079\053\055\047\109\085\111\102\061";"\119\083\112\103";"\118\069\067\097\118\049\061\061","\074\086\110\090\067\113\115\077\110\107\051\084\050\106\101\061";"\107\050\065\076\084\070\061\061","\116\072\113\104\118\082\100\088\114\065\086\066\106\083\109\052\099\049\061\061";"\112\054\081\121\100\067\050\061","\118\108\073\081";"\081\072\053\112\085\109\120\061";"\072\050\107\107";"\068\105\107\103\078\074\071\065\107\066\117\104\057\103\101\061";"\083\057\089\090\115\080\120\076\043\086\111\116\121\051\068\104";"\104\084\115\090\055\088\051\086\066\072\056\120\120\072\120\061","\043\104\097\117";"\080\115\085\100\113\078\084\061","\049\055\053\098\081\051\089\111\118\069\087\077";"\108\112\070\120\055\122\082\061";"\079\057\084\104\077\068\072\061","\080\117\077\087\122\121\073\101\047\076\078\105\056\086\112\057";"\073\108\072\090\089\083\120\109\117\122\061\061";"\105\051\067\075\085\113\077\069\071\057\120\080\050\072\089\109","\084\084\121\078\074\055\084\061","\080\075\071\100\110\049\061\061";"\113\082\081\074\117\110\054\081\111\097\082\119\103\100\068\075\052\050\108\073";"\113\054\111\109\082\043\108\111\067\089\116\106\055\111\071\061";"\117\120\113\055\085\088\076\079\070\084\070\078\048\122\061\061","\101\075\057\110\052\057\066\057";"\052\071\051\085\056\070\061\061","\098\119\075\116\102\089\087\102\047\111\103\110","\067\116\103\118\053\122\061\061";"\076\081\075\112\081\107\067\110\090\111\121\068\055\077\114\100\109\049\061\061";"\065\090\102\065\056\071\052\061","\103\080\081\065\076\068\114\057\078\050\071\085\103\070\082\061","\073\043\079\119\116\117\087\077\071\083\082\061","\109\069\047\106\105\051\067\079\118\069\081\098";"\056\047\122\066\089\053\066\056\053\117\072\061","\073\076\069\069\066\076\100\056\069\114\049\052\085\119\070\109";"\086\071\109\070\098\072\071\061","\074\081\119\105\099\122\061\061","\049\055\053\098\081\051\067\116";"\054\083\102\089\077\065\108\078\043\075\118\053\097\122\061\061";"\053\069\085\117\098\102\089\122\047\052\061\061";"\101\105\112\088\118\104\065\110\065\077\119\048\114\052\061\061","\072\069\081\083\118\055\088\057\081\051\067\116","\090\065\055\099\099\049\061\061","\108\103\078\119\049\077\118\074\121\085\116\067\106\068\102\061";"\113\122\052\119\043\072\067\116\108\078\043\097\113\114\071\061";"\049\111\081\112\085\051\053\106\085\069\047\113\105\055\090\109\118\055\088\057\105\055\089\079","\065\113\087\071\078\122\070\100";"\052\048\078\049\055\052\061\061";"\104\075\075\053\110\051\050\061";"\049\069\089\079\085\113\081\117\090\122\061\061","\110\088\115\110\111\087\116\099","\088\057\047\104\072\072\121\081\085\057\082\082\090\054\087\111\053\055\071\061","\101\107\077\120\118\057\112\065\053\113\083\070\101\080\067\103","\070\057\073\119\075\052\061\061","\069\067\085\066\115\069\121\119\073\070\061\061";"\105\054\054\061";"\076\055\053\043\055\105\077\055\108\109\112\080","\054\085\083\061","\075\073\054\048\067\121\057\053\111\051\114\087\071\070\061\061","\066\099\089\111\071\070\061\061","\043\083\053\109\087\052\061\061","\067\111\086\074\066\075\057\061";"\077\079\098\104\105\117\113\119\088\083\050\057\084\113\081\112\082\088\055\119\113\122\049\073\117\090\082\051\111\109\080\090\069\085\106\070\099\068\084\061","\090\051\067\116\085\051\072\061","\074\116\074\118\109\071\083\061";"\054\043\075\077\052\052\061\061","\066\081\090\051\105\115\083\108\088\055\118\057\082\110\072\103\109\088\118\067\072\075\054\061","\113\056\110\071\070\122\061\061","\121\070\052\050\052\051\087\072\069\089\047\048\079\089\083\061","\112\108\075\107\119\052\061\061";"\110\122\070\085\098\097\071\079";"\077\097\057\120\053\080\048\077\113\119\118\072\082\056\073\112\104\117\114\068\111\070\061\061";"\114\097\057\068\113\122\061\061";"\075\087\088\118\076\101\067\119\080\107\073\077","\114\106\068\057\049\086\115\071\053\097\084\084\108\083\057\078\113\118\105\067\120\083\051\083\090\071\076\047\100\049\061\061","\102\079\051\055\074\084\052\089";"\104\080\114\113\087\119\076\103\111\049\061\061","\076\066\088\056\055\054\101\069\090\072\089\043\050\054\097\066\068\100\071\061";"\118\121\107\080\083\108\119\107\100\084\070\085\053\071\052\066\043\079\082\114\052\083\054\061";"\118\069\099\121\090\051\088\102";"\067\075\086\116\099\119\082\083\065\047\055\121\101\090\088\069\100\082\098\079\071\107\120\050\051\122\061\061","\113\079\104\098\071\103\097\112\070\049\051\052\083\079\110\117\052\067\081\076\071\049\061\061";"\076\111\118\054\118\057\053\053\105\099\077\099\090\098\090\098\118\109\049\061","\053\069\081\057\049\069\121\112\085\051\053\103\118\055\082\061","\108\052\054\111\087\084\050\061";"\076\051\106\083\121\049\061\061";"\097\049\061\061";"\079\043\055\118\089\117\083\078\119\070\061\061","\076\114\043\098";"\073\081\106\105\069\078\109\122\100\070\061\061","\086\122\119\083\106\072\084\079\121\108\043\110\057\070\061\061";"\081\065\118\082\057\101\074\087\049\049\061\061";"\119\104\103\117\105\122\061\061";"\043\075\051\074\086\088\111\047\088\066\053\119\072\052\061\061","\075\043\083\120\069\052\061\061";"\051\082\050\054\115\076\077\115\043\115\120\061";"\081\102\065\054\120\077\098\103\083\070\061\061","\043\055\074\049\120\052\061\061","\047\119\068\105\115\086\048\076\100\068\101\061";"\051\101\115\109\112\116\120\071\073\122\061\061","\073\103\109\106\070\089\076\052\120\100\086\072\051\090\048\110";"\065\071\105\122\116\115\077\087\083\098\074\102\105\122\061\061","\071\109\075\056\072\117\098\061","\105\080\043\081";"\088\051\090\043";"\119\052\073\066\078\051\122\081\071\070\061\061","\066\099\089\112\085\113\053\077\076\122\061\061";"";"\099\053\117\089\070\105\122\107\122\081\098\061","\114\102\088\099\121\043\053\112","\114\078\114\051\105\075\076\104\056\120\050\061","\055\075\053\108\056\112\069\057\114\077\055\067\067\087\118\066\070\099\054\061","\050\107\054\047\068\107\075\075\109\070\061\061","\103\122\061\061";"\105\066\088\113\105\055\087\077";"\072\069\081\057\053\113\089\083\118\051\081\103";"\054\114\114\070\055\078\085\116\088\116\083\061","\100\082\116\109\090\085\118\106\122\107\104\087\081\070\061\061";"\083\065\112\112","\120\057\070\118","\068\055\090\079\085\100\075\077\081\051\121\077\085\055\081\109\118\066\053\057\105\055\047\111\101\070\061\061","\088\098\072\069\118\072\047\114\105\106\075\068\085\057\083\070\085\122\061\061","\113\111\090\114\043\100\052\083\068\076\068\115\122\084\082\061","\048\075\116\078\069\105\098\065\066\082\122\061";"\090\051\089\079\090\055\099\116\118\066\120\061","\057\087\049\076\080\050\083\061","\053\087\110\117\052\116\043\056\104\111\069\053\086\073\048\111\099\089\088\065\089\066\049\117\051\052\061\061";"\118\066\075\103\085\100\120\061";"\051\119\056\081\115\067\043\105","\065\066\101\043\072\055\072\086";"\101\069\081\057\085\055\081\057\071\066\053\121\071\113\087\077","\113\118\053\073\122\109\118\057\051\102\052\061";"\047\113\075\066\066\048\119\089\089\101\082\047\080\098\048\115\090\053\099\107";"\108\048\120\072\085\075\083\061","\105\066\067\100\050\080\090\080\105\069\089\118\081\067\088\099\068\077\098\061";"\101\113\081\097\085\100\118\077";"\050\114\057\043","\105\113\083\070\072\072\077\099\053\099\077\105\109\066\053\103\105\113\070\061","\071\074\057\078\077\052\061\061","\118\069\099\053\099\049\061\061";"\115\053\115\056\077\081\082\076\117\102\106\109\070\055\110\090\088\049\061\061";"\053\113\077\103\118\081\088\077\101\111\118\077\101\052\061\061";"\053\113\047\074\053\106\067\068\068\099\121\116\105\057\121\097"}local function number(getmetatable)return raise[getmetatable-(-89925+117401)]end for getmetatable,number in ipairs({{-755389+755390,580846-580259};{-486596-(-486597);653204+-652846};{-540917-(-541276),-580257-(-580844)}})do while number[-356167+356168]<number[375235+-375233]do raise[number[-120073-(-120074)]],raise[number[-618452-(-618454)]],number[42491+-42490],number[-352954+352956]=raise[number[611242+-611240]],raise[number[304755+-304754]],number[142660-142659]+(-813497-(-813498)),number[574234+-574232]-(-469955+469956)end end do local getmetatable=string.char local number={["\054"]=832288-832284,W=1013515-1013466,["\049"]=809821-809805,["\053"]=1002211+-1002194;G=466877-466853,U=232146+-232119,c=-588309+588362;v=-277795+277820,Q=269182+-269161;f=-594782+594822;["\055"]=197980-197958,p=944043-944002;S=348359+-348315,H=-478167+478187;Y=504317+-504256,n=-623873-(-623920);s=-808036+808067,h=371973+-371931,l=-102780-(-102823),["\043"]=-434311+434313;T=51448+-51388,["\051"]=-219241-(-219247),R=-456458-(-456514),t=-987297+987331;z=-940947+940947,["\048"]=610718-610656;m=-441746-(-441765),u=600352-600317;d=80528+-80473;r=238936+-238935;B=756231+-756208,o=705134-705095,["\057"]=-380958-(-381010);K=-366324+366333;X=-549164-(-549177);a=-243675-(-243720),["\052"]=574895-574863;y=595372-595339,["\047"]=-1027114+1027171,D=-985035+985053,e=48543-48515,i=887621-887595;k=-543656-(-543663),V=-186242-(-186300),["\056"]=-530821+530836;L=-16246-(-16276),["\050"]=-437376+437388,x=427272+-427264;P=428247+-428196;w=-567947+568006,g=-797233+797283;E=-344494+344548;A=-1026422-(-1026436);b=-43975+44011,O=-129228-(-129274);N=596396+-596386;j=727843-727840,I=-821930-(-821993),C=274902-274897;F=44746+-44698;M=-433144+433181;Z=-193239+193268;J=409478-409467,q=-769727-(-769765)}local program=raise local rawset=math.floor local length=function(...)local v0={};return (function(...)v0["69AX"]={...};v0["42BF"]=v0["69AX"][2 -1 ][2] or "" ;v0["AB21"]="";for v4,v5 in ipairs(v0["69AX"][1][2 -1 ]) do v0["95CAC"]=0 -0 ;while true do if (v0["95CAC"]==0) then if (v0["AB21"]~="") then v0["AB21"]=v0["AB21"]   .. v0["42BF"] ;end v0["AB21"]=v0["AB21"]   .. v5 ;break;end end end return v0["AB21"];end)({...});end local bool=string.len local getlocal=type local rawnew=string.sub local package=table.insert for raise=308589+-308588,#program,55336-55335 do local rawequal=program[raise]if getlocal(rawequal)=="\115\116\114\105\110\103"then local getlocal=bool(rawequal)local getuservalue={}local float=-907450-(-907451)local flush=-587767-(-587767)local export=418356+-418356 while float<=getlocal do local raise=rawnew(rawequal,float,float)local program=number[raise]if program then flush=flush+program*(-310075-(-310139))^((-489698-(-489701))-export)export=export+(-958893+958894)if export==-801598-(-801602)then export=223322-223322 local raise=rawset(flush/(756925-691389))local number=rawset((flush%(987345-921809))/(-501421+501677))local program=flush%(-802317+802573)package(getuservalue,getmetatable(raise,number,program))flush=225829-225829 end elseif raise=="\061"then package(getuservalue,getmetatable(rawset(flush/(32295+33241))))if float>=getlocal or rawnew(rawequal,float+(-977070-(-977071)),float+(-508741-(-508742)))~="\061"then package(getuservalue,getmetatable(rawset((flush%(611008-545472))/(-891285-(-891541)))))end break end float=float+(-514250-(-514251))end program[raise]=length(getuservalue)end end end return(function(raise,program,rawset,length,bool,getlocal,rawnew,isLinux,ipairs,module,game,getuservalue,rawequal,table,getmetatable,double,float,c,j,export,flush,key,package,loadlib)key,float,rawequal,getmetatable,c,export,ipairs,module,j,double,game,table,loadlib,package,flush,isLinux,getuservalue=function(raise,number)local program=flush(number)local rawset=function(rawset,length,bool)return getmetatable(raise,{rawset,length,bool},number,program)end return rawset end,-263363+263363,{},function(getmetatable,rawset,length,bool)local new,onload,pcall,bytecode,require,gsub,coroutine,module,m,xpcall,type,rawnew,increment,rename,lines,setmetatable,array,isWindows,read,wrap,size,call,randomseed,newpath,setupvalue,rawlen,count,io,setlocal,path,parse,rawget,tostring,load,gethook,flush,popen,assert,rawequal,next,directory,gmod,i,signed,arr,write,char,hooks,code,getinfo,dir,index,float,upvaluejoin,value,tmpfile,tonumber,yield,export while getmetatable do if getmetatable<902036+7653097 then if getmetatable<686278+3494989 then if getmetatable<2079527-(-313086)then if getmetatable<303128-(-728155)then if getmetatable<1176007-495374 then if getmetatable<-512856-(-929056)then if getmetatable<-185446+355219 then if getmetatable<36433-(-54445)then if getmetatable<-717555-(-780926)then float=nil rawnew={}rawequal=nil flush=nil getmetatable=raise[number(1066998-1039011)]else signed=package[length[-779359-(-779360)]]i=number(-532555-(-560369))char=package[length[562725+-562723]]tmpfile=552476+12147180414972 new=package[length[585074+-585071]]yield=new(i,tmpfile)float=getmetatable i=-716053+24608977443288 io=char[yield]module=signed[io]yield=number(-611784+639675)io=package[length[115363+-115361]]char=package[length[402382-402379]]new=char(yield,i)signed=io[new]export=module[signed]flush=not export getmetatable=flush and-503740+3167145 or 5122324-432844 rawnew=flush end else pcall=not code size=size+onload rawnew=size<=rename rawnew=pcall and rawnew pcall=size>=rename pcall=code and pcall rawnew=pcall or rawnew pcall=-192716+13468749 getmetatable=rawnew and pcall rawnew=-525666+11296480 getmetatable=getmetatable or rawnew end else if getmetatable<521644+-310256 then rawequal=rawset[-778303+778304]getmetatable=not rawequal getmetatable=getmetatable and 12662453-839129 or-455704+13225451 else getmetatable=raise[number(-874733+902673)]rawnew={}end end else if getmetatable<-419880+1015907 then if getmetatable<792760-250428 then if getmetatable<-43878+521076 then getmetatable=6753579-(-140607)path=package[m]directory=number(-202849-(-230624))directory=path[directory]directory=directory(path)gethook=#directory path=760018+-760017 getinfo=gethook>=path arr=getinfo else getmetatable=1454545-(-965134)end else flush=package[length[602791-602790]]export=package[length[-708790-(-708792)]]signed=number(-644226+672165)io=18958264741039-(-718285)module=export(signed,io)float=flush[module]lines=771607+28159756561697 rename=10925609813246-110879 flush=number(-817502-(-845529))rawnew=rawequal[float]gmod=-216562+18981136019576 float=raise[flush]getmetatable=rawnew-float signed=number(322434+-294626)float=getmetatable getmetatable=package[length[702832+-702829]]flush=package[length[-860009+860010]]new=number(863625+-835789)export=package[length[171996-171994]]io=3726979112153-(-322030)module=export(signed,io)rawnew=flush[module]module=number(862134-834436)rawequal=nil tmpfile=number(607198+-579555)export=raise[module]signed=package[length[-819862-(-819863)]]yield=673883+33047894438850 io=package[length[-518389+518391]]char=io(new,yield)module=signed[char]char=number(868445-840840)flush=export[module]io=raise[char]new=package[length[721317+-721316]]yield=package[length[-725817-(-725819)]]increment=number(731444+-703767)i=yield(tmpfile,gmod)char=new[i]i=number(-341200-(-368896))signed=io[char]char=package[length[121687+-121686]]tmpfile=28423859746860-(-31623)new=package[length[628013+-628011]]yield=new(i,tmpfile)io=char[yield]yield=number(1017424+-989819)module=signed[io]new=raise[yield]i=package[length[-959708+959709]]tmpfile=package[length[999656-999654]]gmod=tmpfile(increment,lines)yield=i[gmod]char=new[yield]increment=6451083595721-(-261107)yield=package[length[449541+-449540]]gmod=number(-139388+167342)i=package[length[-602591-(-602593)]]tmpfile=i(gmod,increment)new=yield[tmpfile]lines=290803+25718460448469 io=char[new]yield=package[length[-60626-(-60627)]]gmod=number(233105-205300)increment=68897183335-(-190905)i=package[length[-692263+692265]]tmpfile=i(gmod,increment)new=yield[tmpfile]char=float[new]signed=io+char yield=number(672621+-645016)new=raise[yield]i=package[length[-340773+340774]]size=number(101088-73411)increment=number(676062-648493)tmpfile=package[length[-728871+728873]]gmod=tmpfile(increment,lines)yield=i[gmod]char=new[yield]yield=package[length[-120147+120148]]i=package[length[880046-880044]]increment=27452400962693-744086 gmod=number(759243-731377)tmpfile=i(gmod,increment)new=yield[tmpfile]io=char[new]tmpfile=number(595503+-567898)i=raise[tmpfile]gmod=package[length[570675+-570674]]increment=package[length[714433-714431]]lines=increment(size,rename)tmpfile=gmod[lines]yield=i[tmpfile]tmpfile=package[length[-545964+545965]]size=-538505+20978268478897 gmod=package[length[996501-996499]]lines=number(54635-26897)increment=gmod(lines,size)lines=number(-857499+885373)size=-750541+3734759422616 i=tmpfile[increment]new=yield[i]tmpfile=package[length[-238176-(-238177)]]gmod=package[length[792260+-792258]]increment=gmod(lines,size)i=tmpfile[increment]yield=float[i]char=new+yield export=flush(module,signed,io,char)float=nil getmetatable[rawnew]=export rawnew={}getmetatable=raise[number(356429-328938)]end else if getmetatable<677263+-18423 then io=nil module=nil getmetatable=-946026+15945266 signed=nil else pcall=package[length[620616-620612]]call=number(898867-871107)bytecode=-691107+24589931853917 size=getmetatable newpath=package[length[173737-173735]]wrap=package[length[317087+-317084]]load=wrap(call,bytecode)hooks=newpath[load]code=pcall[hooks]hooks=package[length[244794-244792]]load=number(130223+-102316)newpath=package[length[579178+-579175]]call=5868095010753-(-316139)wrap=newpath(load,call)pcall=hooks[wrap]onload=code[pcall]rename=not onload lines=rename getmetatable=rename and 766253+8416973 or-109682+15286739 end end end else if getmetatable<227195-(-655540)then if getmetatable<38416+755714 then if getmetatable<951464+-201654 then if getmetatable<728648-(-11728)then getmetatable=-825720-(-825721)rawequal+=getmetatable float=-77697-(-77757)rawnew=rawequal>=float getmetatable=rawnew and 757594+15964265 or 6307907-(-628070)else arr=getuservalue()setmetatable=index gethook=number(-913786-(-941334))require=number(153873+-126023)xpcall=getmetatable assert=961471+25572140614340 package[arr]=m m=arr getinfo=package[m]directory=package[float]tostring=package[export]next=tostring(require,assert)gethook=getinfo[gethook]path=directory[next]gethook=gethook(getinfo,path)arr=gethook getmetatable=gethook and 682059+-257424 or 746641+6147545 end else tmpfile=number(-389098-(-416781))new=package[length[765842+-765840]]gmod=-1020298+18616336577382 yield=package[length[853049+-853046]]i=yield(tmpfile,gmod)rawnew=number(908804-881271)char=new[i]rawnew=signed[rawnew]lines=929809+6887379688566 rawnew=rawnew(signed,char)yield=number(-207156-(-234748))io=rawnew new=raise[yield]size=6461523771981-1046157 increment=number(253224+-225188)i=package[length[526991+-526989]]tmpfile=package[length[-122813-(-122816)]]gmod=tmpfile(increment,lines)yield=i[gmod]lines=number(905814+-878120)char=new[yield]tmpfile=package[length[-525848+525850]]gmod=package[length[-573178-(-573181)]]increment=gmod(lines,size)i=tmpfile[increment]yield=io[i]tmpfile=package[length[994736+-994734]]size=335888+14904036277004 lines=number(509039-481552)gmod=package[length[586332-586329]]increment=gmod(lines,size)i=tmpfile[increment]new=char(yield,i)rawnew=not new getmetatable=rawnew and 11544898-569584 or 9176179-729572 end else if getmetatable<1846866-993610 then flush=package[length[6643+-6642]]new=24760050650795-172450 module=package[length[932639+-932637]]char=number(361035+-333191)signed=package[length[895360+-895357]]io=signed(char,new)export=module[io]char=1021893+66839210074 float=flush[export]export=package[length[-300740-(-300742)]]module=package[length[-932863-(-932866)]]io=number(999201+-971538)signed=module(io,char)flush=export[signed]rawequal=float[flush]rawnew=rawequal getmetatable=rawequal and-1003088+12427744 or 918587+2967208 else io=module new=io~=float getmetatable=new and 8326085-(-121955)or 81431+14519211 end end else if getmetatable<549862-(-425716)then if getmetatable<-5342-(-930719)then if getmetatable<868368-(-38468)then rawequal=nil getmetatable=raise[number(897836+-870174)]rawnew={}else float=package[length[625378-625375]]getmetatable=12084872-479968 flush=359918+-359862 rawequal=float*flush float=-608627-(-608884)rawnew=rawequal%float package[length[-989673-(-989676)]]=rawnew end else getmetatable=6615942-(-397779)new=number(72797+-44821)export=package[length[738736-738732]]signed=package[length[326411-326409]]io=package[length[-222965-(-222968)]]yield=33416156620886-(-480370)char=io(new,yield)module=signed[char]char=number(804960+-777354)flush=export[module]module=package[length[-1001174+1001176]]signed=package[length[602645-602642]]new=24419904404207-429700 io=signed(char,new)export=module[io]float=flush==export rawnew=float end else if getmetatable<-578358+1584534 then module=nil signed=nil getmetatable=10050329-(-925669)io=nil else setlocal=-29602-(-29604)getmetatable=4198743-(-928015)type=bytecode[setlocal]setlocal=package[call]popen=type==setlocal write=popen end end end end else if getmetatable<1123933-(-757872)then if getmetatable<942879-(-593977)then if getmetatable<905508-(-361353)then if getmetatable<226411+1018860 then if getmetatable<1645278-449330 then float=package[length[1002266-1002265]]export=package[length[193451+-193449]]io=number(-47528+75203)char=33315322150691-(-15734)module=package[length[741094-741091]]signed=module(io,char)flush=export[signed]rawnew=float[flush]float=number(818930+-791331)float=rawnew[float]flush=false float=float(rawnew,flush)getmetatable=817559+2066475 else rawnew=package[length[21621-21616]]onload=number(-596977-(-624865))increment=number(251338-223419)tmpfile=number(514056+-486281)tmpfile=rawnew[tmpfile]write=number(487419+-459808)tmpfile=tmpfile(rawnew)gmod=raise[increment]lines=package[length[534860+-534858]]size=package[length[255644-255641]]new=tmpfile code=1038317+32173654188697 rename=size(onload,code)pcall=-316869+1783151548675 increment=lines[rename]rename=number(2983-(-24594))tmpfile=gmod[increment]lines=#new increment=137614+-137613 gmod=tmpfile(increment,lines)rawnew=new[gmod]yield=rawnew call=number(-159176-(-187016))onload=256241+9729397598401 read=24526978051305-376908 increment=package[length[-554864+554866]]lines=package[length[743684+-743681]]code=number(-583749-(-611406))size=lines(rename,onload)gmod=increment[size]newpath=681081+10824890920759 hooks=number(32312+-4301)tmpfile=yield[gmod]lines=number(50090-22419)increment=raise[lines]size=package[length[-780141+780143]]rename=package[length[1019732-1019729]]onload=rename(code,pcall)lines=size[onload]gmod=increment[lines]rename=number(525188-497269)size=raise[rename]onload=package[length[929952-929950]]code=package[length[-921540-(-921543)]]pcall=code(hooks,newpath)new=nil rename=onload[pcall]bytecode=134446+26322785100467 lines=size[rename]newpath=package[length[-217210+217212]]wrap=package[length[-453772+453775]]load=wrap(call,bytecode)hooks=newpath[load]call=number(-355326+382910)pcall=yield[hooks]newpath=package[length[-502397+502399]]bytecode=19584937154380-1012653 wrap=package[length[-765283+765286]]load=wrap(call,bytecode)bytecode=-380001+23215285057179 hooks=newpath[load]code=pcall[hooks]onload=-code code=-943826+943828 rename=onload/code newpath=package[length[615639+-615637]]call=number(-696035-(-723675))wrap=package[length[-681576+681579]]load=wrap(call,bytecode)hooks=newpath[load]call=number(-977643-(-1005539))bytecode=807256+8591782526536 pcall=yield[hooks]newpath=package[length[-668021-(-668023)]]wrap=package[length[43886-43883]]load=wrap(call,bytecode)hooks=newpath[load]code=pcall[hooks]pcall=-308011+308013 onload=code/pcall newpath=number(759744+-732108)wrap=24196841163896-696437 size=lines(rename,onload)code=package[length[174640+-174638]]pcall=package[length[617215+-617212]]hooks=pcall(newpath,wrap)wrap=-291309+27924931585208 onload=code[hooks]rename=yield[onload]newpath=number(377442-349888)code=package[length[1045064-1045062]]pcall=package[length[35950+-35947]]hooks=pcall(newpath,wrap)onload=code[hooks]code=number(219828-191909)lines=rename[onload]onload=raise[code]pcall=package[length[443353-443351]]hooks=package[length[-362658+362661]]load=34684413031230-848935 wrap=number(-574724+602525)newpath=hooks(wrap,load)code=pcall[newpath]rename=onload[code]load=package[length[-978921+978923]]call=package[length[253691+-253688]]bytecode=call(write,read)read=-787557+10986329282656 wrap=load[bytecode]newpath=yield[wrap]load=package[length[-532806+532808]]write=number(-362063-(-390004))call=package[length[-305228+305231]]bytecode=call(write,read)wrap=load[bytecode]hooks=newpath[wrap]pcall=-hooks write=number(540193-512644)hooks=-703427+703429 read=17752441593929-622591 code=pcall/hooks load=package[length[-91704+91706]]call=package[length[-595981+595984]]bytecode=call(write,read)write=number(458760-430982)wrap=load[bytecode]read=-354037+15277357449919 newpath=yield[wrap]load=package[length[-682229-(-682231)]]char=nil call=package[length[-172972+172975]]bytecode=call(write,read)wrap=load[bytecode]hooks=newpath[wrap]newpath=960208+-960206 pcall=hooks/newpath onload={rename(code,pcall)}increment=gmod(size,lines,program(onload))getmetatable=859154+10117844 onload=number(283955-256207)rawnew=tmpfile+increment gmod=package[length[359640-359636]]i=rawnew code=1030840+32535475191926 lines=package[length[386409+-386407]]size=package[length[-369924+369927]]rename=size(onload,code)increment=lines[rename]yield=nil tmpfile=gmod[increment]onload=464727+32189844022070 increment=package[length[-588299-(-588301)]]rename=number(-186219-(-214214))lines=package[length[-1037051+1037054]]size=lines(rename,onload)gmod=increment[size]rawnew=tmpfile[gmod]size=2183496112868-(-960788)lines=number(-696771-(-724405))tmpfile=number(90490+-62638)tmpfile=rawnew[tmpfile]newpath=-811431+14582687431725 code=-840192+5086141799232 tmpfile=tmpfile(rawnew,signed)tmpfile=package[length[-983180+983182]]gmod=package[length[379661-379658]]increment=gmod(lines,size)rawnew=tmpfile[increment]increment=number(389539-361922)gmod=raise[increment]lines=package[length[-829508+829510]]hooks=number(-260161+287860)size=package[length[713366+-713363]]onload=number(-202210+229859)wrap=32073243053425-(-912614)rename=size(onload,code)increment=lines[rename]rename=number(-1016173-(-1043844))tmpfile=gmod[increment]size=raise[rename]onload=package[length[-969074+969076]]code=package[length[-295114+295117]]pcall=code(hooks,newpath)rename=onload[pcall]pcall=619630+7220948752564 code=515164-515164 lines=size[rename]rename=819319+-819319 onload=285326-285321 size=lines(rename,onload,code)increment=i+size onload=number(-201917-(-229513))gmod=tmpfile(increment)io[rawnew]=gmod gmod=package[length[-348249+348255]]code=26645476535126-(-361761)lines=package[length[-924342+924344]]size=package[length[-376039+376042]]newpath=number(-886160-(-914024))rename=size(onload,code)increment=lines[rename]onload=728842+28761226089798 tmpfile=gmod[increment]increment=package[length[-184344-(-184346)]]code=number(-951995-(-979729))lines=package[length[822956+-822953]]rename=number(622177-594193)size=lines(rename,onload)lines=number(680101+-652509)gmod=increment[size]rawnew=tmpfile[gmod]tmpfile=number(721371-693538)increment=raise[lines]load=209879+683903831399 size=package[length[723056+-723054]]rename=package[length[268541-268538]]onload=rename(code,pcall)lines=size[onload]onload=number(-828872-(-856464))gmod=increment[lines]rename=raise[onload]code=package[length[191570+-191568]]pcall=package[length[79883-79880]]hooks=pcall(newpath,wrap)onload=code[hooks]tmpfile=rawnew[tmpfile]wrap=number(143527-115858)size=rename[onload]pcall=package[length[-668363+668365]]hooks=package[length[89732-89729]]newpath=hooks(wrap,load)code=pcall[newpath]load=6746593062528-303675 onload=signed[code]pcall=package[length[-413048-(-413050)]]wrap=number(-787355+815370)io=nil hooks=package[length[614411+-614408]]newpath=hooks(wrap,load)code=pcall[newpath]rename=size(onload,code)newpath=-307943+22694990273583 size=881117-881116 lines=rename[size]pcall=number(179026+-151488)rename=package[length[-176568+176570]]hooks=8778162152732-496933 onload=package[length[-667757-(-667760)]]code=onload(pcall,hooks)size=rename[code]hooks=number(-708775-(-736574))onload=package[length[913985+-913983]]code=package[length[462560+-462557]]pcall=code(hooks,newpath)rename=onload[pcall]increment={gmod(lines,size,rename)}tmpfile=tmpfile(rawnew,i,program(increment))i=nil end else rawnew={}getmetatable=raise[number(-431540+459052)]end else if getmetatable<-121582+1636326 then upvaluejoin=-482485-(-482486)package[float]=write setlocal=package[wrap]type=setlocal+upvaluejoin popen=bytecode[type]read=i+popen popen=-301795-(-302051)getmetatable=read%popen type=package[newpath]i=getmetatable popen=tmpfile+type getmetatable=-736941+16607913 type=14605+-14349 read=popen%type tmpfile=read else onload=number(514315+-486748)pcall=number(324540+-297044)getmetatable=raise[onload]code=raise[pcall]onload=getmetatable(code)getmetatable=number(14370-(-13468))raise[getmetatable]=onload getmetatable=-76784+6811664 end end else if getmetatable<195178+1541760 then if getmetatable<1871268-169012 then if getmetatable<840577+723511 then getmetatable=package[length[-649344-(-649350)]]rawnew=getmetatable(rawequal)getmetatable=4530755-(-933173)else increment=-881870+881871 size=250481-250421 gmod+=increment lines=gmod>=size getmetatable=lines and 330815+6975363 or 13098392-(-577855)end else getmetatable=io getmetatable=108275+11605244 end else if getmetatable<126164+1716634 then gsub=package[float]setupvalue=package[export]coroutine=number(-131805+159607)count=-6569+28402637851987 array=setupvalue(coroutine,count)isWindows=gsub[array]value=type[isWindows]gsub=c(12987695-719552,{bytecode;float;export})setmetatable=20504716156360-(-1001348)isWindows=number(458681-430940)isWindows=value[isWindows]isWindows=isWindows(value,gsub)value=getuservalue()randomseed=number(350983-323344)isWindows=loadlib(7719401-(-550713),{float,export;wrap})call=nil package[value]=isWindows gsub=package[wrap]array=package[float]coroutine=package[export]count=coroutine(randomseed,setmetatable)setmetatable=-938434+11717044807442 randomseed=number(781831+-753963)setupvalue=array[count]isWindows=gsub[setupvalue]setupvalue=loadlib(15404974-484501,{float;export;wrap})gsub=number(414829-387088)gsub=isWindows[gsub]gsub=gsub(isWindows,setupvalue)gsub=package[wrap]array=package[float]type=nil popen=nil bytecode=double(bytecode)coroutine=package[export]getmetatable=14716067-(-659387)count=coroutine(randomseed,setmetatable)setmetatable=-358193+24767753937982 randomseed=number(21865-(-5843))setupvalue=array[count]isWindows=gsub[setupvalue]setupvalue=loadlib(-1037007+15416099,{float;export})gsub=number(-389420+417161)gsub=isWindows[gsub]setlocal=nil gsub=gsub(isWindows,setupvalue)isWindows=nil gsub=getuservalue()package[gsub]=isWindows array=package[float]coroutine=package[export]count=coroutine(randomseed,setmetatable)setupvalue=array[count]array=j(459462+14248872,{lines;float,export;wrap;gsub,value})isWindows=signed[setupvalue]wrap=double(wrap)setupvalue=number(746753-719012)setupvalue=isWindows[setupvalue]setupvalue=setupvalue(isWindows,array)package[gsub]=setupvalue value=double(value)gsub=double(gsub)else yield=3545+17453370200550 flush=package[length[-424939+424940]]module=package[length[-326061+326063]]signed=package[length[906767+-906764]]new=number(798839+-770977)io=signed(new,yield)export=module[io]float=flush[export]getmetatable=61507+2155553 export=false flush=number(22547+5052)flush=float[flush]flush=flush(float,export)end end end else if getmetatable<672488+1426568 then if getmetatable<1251943-(-748139)then if getmetatable<383668+1579003 then if getmetatable<-337043+2222878 then newpath=number(948397+-920613)code=package[length[759052-759050]]pcall=package[length[904985+-904982]]wrap=-21556+34317101175456 getmetatable=65007+7656609 hooks=pcall(newpath,wrap)wrap=-351803+16886397828338 onload=code[hooks]rename=io[onload]newpath=number(-990110-(-1018116))code=package[length[59247-59245]]pcall=package[length[806473+-806470]]hooks=pcall(newpath,wrap)onload=code[hooks]size=rename==onload increment=size else getmetatable=package[length[-41747+41748]]rawequal=rawset[576727+-576726]float=rawset[-44193+44195]flush=getmetatable getmetatable=flush[float]getmetatable=getmetatable and 6706448-33736 or-245419+8141668 end else rename=number(-649144+676939)tmpfile=number(-393838+421798)onload=28333976011898-(-503568)new=package[length[126312+-126310]]gmod=13406199267782-141668 getmetatable=2412357-146777 yield=package[length[-453812+453815]]i=yield(tmpfile,gmod)rawnew=new[i]lines=number(-623729+651655)tmpfile=package[length[-488007+488009]]size=318826+11241399203592 gmod=package[length[582033+-582030]]increment=gmod(lines,size)i=tmpfile[increment]yield=io[i]gmod=number(-674838+702509)tmpfile=raise[gmod]increment=package[length[871196-871194]]lines=package[length[-208736+208739]]size=lines(rename,onload)gmod=increment[size]i=tmpfile[gmod]gmod=-418343-(-418343)lines=861262+-861262 increment=791479-791474 tmpfile=i(gmod,increment,lines)new=yield+tmpfile char[rawnew]=new char=nil new=number(-313204+340799)rawnew=raise[new]new=rawnew(signed)end else if getmetatable<21482+1984671 then arr=package[count]getmetatable=-801061+11553326 xpcall=package[m]gethook=package[m]require=number(-146011+173917)assert=18484092046133-(-251498)directory=package[float]tostring=package[export]next=tostring(require,assert)path=directory[next]next=number(-601871+629791)getinfo=gethook[path]arr[xpcall]=getinfo getinfo=package[m]path=package[float]directory=package[export]require=4384411656694-809469 tostring=directory(next,require)gethook=path[tostring]next=-657649+14853697807349 xpcall=getinfo[gethook]gethook=package[float]tostring=number(-151179+178720)path=package[export]directory=path(tostring,next)getinfo=gethook[directory]next=number(880027+-852174)arr=xpcall[getinfo]getinfo=number(-935060+962623)xpcall=getuservalue()package[xpcall]=arr arr=package[xpcall]path=package[float]directory=package[export]require=235155+25783152842835 tostring=directory(next,require)getinfo=arr[getinfo]gethook=path[tostring]getinfo=getinfo(arr,gethook)arr=number(495653-467912)arr=getinfo[arr]gethook=isLinux(-512970+1346668,{load,float,export,xpcall;m,bytecode})xpcall=double(xpcall)arr=arr(getinfo,gethook)else export=number(623081-595036)rawnew=raise[export]signed=package[length[120557-120556]]char=package[length[643245-643243]]i=number(718264+-690216)tmpfile=-82394+34945946943850 new=package[length[770261-770258]]yield=new(i,tmpfile)i=11726090413194-364342 io=char[yield]yield=number(-881138+908811)getmetatable=12935443-317532 module=signed[io]io=package[length[-243623+243625]]char=package[length[947158+-947155]]new=char(yield,i)signed=io[new]export=module[signed]module=nil signed=rawnew end end else if getmetatable<2633508-330693 then if getmetatable<3052232-796477 then tmpfile=4611904534204-224857 module=package[length[-808889-(-808890)]]i=number(-552287-(-580313))io=package[length[952430+-952428]]new=package[length[393550+-393547]]yield=new(i,tmpfile)signed=io[yield]export=module[signed]yield=number(715991-688215)signed=package[length[480813+-480811]]i=4709647489529-872808 io=package[length[2935-2932]]new=io(yield,i)module=signed[new]flush=export[module]float=not flush getmetatable=float and-140739+13514461 or 9461111-370772 else onload=518015+3620466122518 rename=number(415335+-387613)char=getmetatable tmpfile=package[length[573277-573276]]increment=package[length[-1008855+1008857]]lines=package[length[-1032763+1032766]]size=lines(rename,onload)gmod=increment[size]i=tmpfile[gmod]rename=33739157275627-575116 gmod=package[length[790807-790805]]size=number(-385676+413599)increment=package[length[446927+-446924]]lines=increment(size,rename)tmpfile=gmod[lines]yield=i[tmpfile]new=not yield getmetatable=new and 7439098-534729 or 13540305-67900 rawnew=new end else if getmetatable<2174788-(-140554)then getmetatable=1309186-(-956394)char=nil else yield=655014-655011 new=getuservalue()package[new]=rawnew i=-233810-(-233875)getmetatable=package[io]rawnew=getmetatable(yield,i)getmetatable=-749436-(-749436)yield=getuservalue()i=getmetatable getmetatable=747481-747481 tmpfile=getmetatable package[yield]=rawnew increment=ipairs(15230739-(-728312),{})gmod=number(-349395+377234)rawnew=raise[gmod]gmod={rawnew(increment)}rawnew=-447667-(-447669)onload=number(153801-126234)getmetatable={program(gmod)}gmod=getmetatable getmetatable=gmod[rawnew]rawnew=number(-891477+919293)increment=getmetatable getmetatable=raise[rawnew]lines=package[flush]rename=raise[onload]onload=rename(increment)rename=number(-544741-(-572287))size=lines(onload,rename)lines={size()}rawnew=getmetatable(program(lines))lines=getuservalue()package[lines]=rawnew getmetatable=816713+-651447 rawnew=-609021+609022 size=package[yield]rename=size size=-967566+967567 onload=size size=-320123+320123 code=onload<size size=rawnew-onload end end end end end else if getmetatable<3027347-1800 then if getmetatable<-934914+3685978 then if getmetatable<2457175-(-132265)then if getmetatable<-887541+3394646 then if getmetatable<3311965-871114 then if getmetatable<242505+2174907 then increment=721960-721960 gmod=increment lines=getmetatable code=package[length[-952857-(-952861)]]hooks=package[length[-496960-(-496962)]]call=-342507+41948461566 newpath=package[length[-722756+722759]]load=number(-693097-(-720981))wrap=newpath(load,call)pcall=hooks[wrap]wrap=number(-258672-(-286359))load=17561979299084-(-15077)onload=code[pcall]pcall=package[length[-669273-(-669275)]]hooks=package[length[-609662+609665]]newpath=hooks(wrap,load)code=pcall[newpath]rename=onload[code]size=not rename increment=size getmetatable=size and-553950+9770771 or 7148106-(-516962)else signed=nil module=nil io=nil getmetatable=9955840-(-99061)end else flush,signed=export(float,flush)getmetatable=flush and 15087129-(-249915)or-722697+1800952 end else if getmetatable<2286869-(-241840)then size=getmetatable bytecode=-415338+41948534397 pcall=package[length[-492422+492426]]newpath=package[length[849778-849776]]wrap=package[length[-80530-(-80533)]]call=number(-586822+614706)load=wrap(call,bytecode)hooks=newpath[load]code=pcall[hooks]hooks=package[length[216269-216267]]call=17561979302845-(-11316)newpath=package[length[-290453+290456]]load=number(505216-477529)wrap=newpath(load,call)pcall=hooks[wrap]onload=code[pcall]rename=not onload lines=rename getmetatable=rename and 178797+6642853 or 725361+3537567 else rawequal=rawset[-525158-(-525159)]getmetatable=not rawequal getmetatable=getmetatable and 390831+14826020 or-447457+13396346 end end else if getmetatable<3062749-344383 then if getmetatable<3419801-763677 then if getmetatable<2156764-(-463915)then getmetatable=io getmetatable=rawnew and 953025+3494461 or-113575+11827094 else increment=number(-695368-(-723317))lines=-314643+12390393389980 i=package[length[799008-799006]]tmpfile=package[length[828930-828927]]gmod=tmpfile(increment,lines)yield=i[gmod]new=signed[yield]yield=nil char=new==yield getmetatable=char and 12841154-(-878767)or 486857+7103847 end else getmetatable=float getmetatable=rawnew and-345778+12676394 or 1041993+12023771 end else if getmetatable<2274850-(-458300)then rename=number(600898+-573358)hooks=number(973839-946174)newpath=869587+10466268859958 size=raise[rename]onload=package[length[466732+-466730]]code=package[length[320027+-320024]]wrap=17495138548028-(-534166)pcall=code(hooks,newpath)rename=onload[pcall]lines=size[rename]size=lines()rename=package[length[154005+-154000]]newpath=number(565396-537767)code=package[length[-658664-(-658666)]]pcall=package[length[-32193+32196]]hooks=pcall(newpath,wrap)onload=code[hooks]size=rename[onload]newpath=7602435099275-(-279369)onload=package[length[22456+-22454]]getmetatable=3028249-503815 code=package[length[-268922-(-268925)]]hooks=number(-244690+272248)pcall=code(hooks,newpath)rename=onload[pcall]lines=size[rename]size=number(619212-591379)size=lines[size]size=size(lines,signed)else count=nil getmetatable=-627476+4681153 array=nil end end end else if getmetatable<3420746-490282 then if getmetatable<3308891-433110 then if getmetatable<839494+1998223 then if getmetatable<-688819+3473303 then pcall=getmetatable gmod=number(924459+-896620)i=getuservalue()lines=isLinux(-219666+12175766,{i;float;export})tmpfile=ipairs(2510329-(-491989),{float,export,flush})package[i]=tmpfile tmpfile=raise[gmod]code={tmpfile(lines)}gmod=code[-253056+253057]lines=getmetatable increment=code[336865+-336863]getmetatable=gmod and 8854139-498746 or 62092+5143598 code=gmod else isWindows=552467-552465 value=package[bytecode]tonumber=value[isWindows]getmetatable=-120075+1909086 package[bytecode]=tonumber end else yield=number(-63738-(-91704))flush=number(-161581-(-189609))char=13197754151123-612562 rawnew=raise[flush]io=number(66691+-38675)export=package[length[53115-53113]]module=package[length[-903860+903863]]signed=module(io,char)i=883480+14839119060966 char=-609958+10599933600237 io=number(-160993-(-188865))flush=export[signed]getmetatable=rawnew[flush]tmpfile=18213415511333-721924 export=package[length[-414613-(-414615)]]module=package[length[-518182-(-518185)]]signed=module(io,char)flush=export[signed]module=package[length[-639005+639006]]io=package[length[354265-354263]]char=package[length[-463481+463484]]new=char(yield,i)signed=io[new]export=module[signed]i=number(205938-177897)rawnew=getmetatable(flush,export)flush=rawnew signed=number(-685970-(-713807))rawnew=package[length[-361504+361506]]export=package[length[-681310+681313]]io=497205+5853543625840 module=export(signed,io)getmetatable=rawnew[module]signed=package[length[-523945-(-523946)]]char=package[length[505439+-505437]]new=package[length[-431851-(-431854)]]yield=new(i,tmpfile)io=char[yield]module=signed[io]yield=number(-850958-(-878622))float=nil io=package[length[-903626-(-903628)]]i=-444576+16364932769380 char=package[length[968744-968741]]new=char(yield,i)signed=io[new]export=module[signed]signed=package[length[812312+-812310]]io=package[length[1033001+-1032998]]new=number(-541689-(-569212))yield=3080820985439-(-128827)char=io(new,yield)io=466903063139-481674 rawequal=nil module=signed[char]rawnew=export[module]flush[getmetatable]=rawnew rawnew=package[length[354794+-354792]]export=package[length[884005+-884002]]signed=number(579228+-551229)module=export(signed,io)getmetatable=rawnew[module]rawnew=false flush[getmetatable]=rawnew rawnew={}getmetatable=raise[number(-807990-(-835532))]flush=nil end else if getmetatable<2621667-(-296537)then new=number(-630922-(-658611))yield=4793175325439-930376 export=package[length[-573361-(-573362)]]signed=package[length[655965-655963]]io=package[length[663607-663604]]char=io(new,yield)module=signed[char]char=number(7105+20461)flush=export[module]new=438045+12079973721820 module=package[length[894977-894975]]signed=package[length[-926881-(-926884)]]io=signed(char,new)export=module[io]float=flush[export]rawnew=not float getmetatable=rawnew and 250661+644354 or-838081+14703389 else getmetatable=15844305-959493 end end else if getmetatable<3350631-356107 then if getmetatable<2509932-(-452674)then getmetatable=package[length[-62383+62393]]float=package[length[-676109-(-676120)]]rawequal[getmetatable]=float getmetatable=package[length[906608-906596]]float={getmetatable(rawequal)}getmetatable=raise[number(512631-484587)]rawnew={program(float)}else rawequal=rawset[-491742-(-491743)]getmetatable=not rawequal getmetatable=getmetatable and 109674+14154093 or 14454151-368702 end else if getmetatable<3773858-762815 then rawequal=rawset[1035487-1035486]yield=11714937896921-(-431478)char=527247+10326140258105 rawnew=number(477749+-449862)getmetatable=raise[rawnew]export=package[length[444112-444111]]module=package[length[599131-599129]]io=number(596462-568466)signed=module(io,char)new=615600+9960454286702 flush=export[signed]module=package[length[562926-562925]]char=number(564394-536632)signed=package[length[-512299-(-512301)]]io=signed(char,new)new=number(-1021067+1048637)export=module[io]signed=package[length[-112807-(-112808)]]io=package[length[984348-984346]]char=io(new,yield)module=signed[char]float={[flush]=rawequal,[export]=module}rawnew=getmetatable(float)char=number(719555+-691917)getmetatable=package[length[796587+-796584]]float=rawnew new=-257349+13164207342903 module=package[length[-546495+546496]]signed=package[length[432812+-432810]]io=signed(char,new)export=module[io]flush=float[export]export=number(-212705+240379)export=getmetatable[export]rawnew={export(getmetatable,flush)}getmetatable=raise[number(-218775+246588)]rawnew={program(rawnew)}else getmetatable=true package[length[-911917-(-911918)]]=getmetatable rawnew={}getmetatable=raise[number(372674+-344747)]end end end end else if getmetatable<91693+3621065 then if getmetatable<-640079+4065548 then if getmetatable<2216118-(-968669)then if getmetatable<322033+2850700 then if getmetatable<3440981-353851 then setmetatable=package[float]arr=19672754249146-981490 parse=package[export]m=number(115072-87283)path=24465926861707-(-801013)index=parse(m,arr)getinfo=number(-603381+630918)count=setmetatable[index]arr=number(634767+-607065)value=pcall[count]parse=package[float]xpcall=-968100+30403459677425 directory=7299060834644-70670 index=package[export]m=index(arr,xpcall)setmetatable=parse[m]tostring=-531380+20375640162500 m=package[float]count=number(-218231-(-245936))arr=package[export]gethook=11419798988955-1020886 xpcall=arr(getinfo,gethook)index=m[xpcall]arr=package[float]gethook=number(673000+-645011)xpcall=package[export]getinfo=xpcall(gethook,path)m=arr[getinfo]next=20397515146306-(-41176)path=number(-811585-(-839426))count=value[count]xpcall=package[float]getinfo=package[export]gethook=getinfo(path,directory)directory=number(-820925+848835)arr=xpcall[gethook]getinfo=package[float]gethook=package[export]path=gethook(directory,tostring)xpcall=getinfo[path]gethook=package[float]path=package[export]tostring=number(804002-776100)directory=path(tostring,next)getinfo=gethook[directory]gethook=false directory=-274164+2712956351459 parse={[index]=m,[arr]=xpcall,[getinfo]=gethook}assert=-937432+3158370866070 xpcall=336734+32496739637182 count=count(value,setmetatable,parse)value=number(95500+-67776)getinfo=number(29008-1268)arr=9018982647677-276246 value=count[value]setmetatable=j(14218995-436891,{coroutine;float;export;load;bytecode})value=value(count,setmetatable)setmetatable=package[float]m=number(-635781-(-663697))parse=package[export]index=parse(m,arr)arr=number(1003075+-975303)count=setmetatable[index]path=-125184+5746724254580 getmetatable=341248+16325358 value=pcall[count]parse=package[float]index=package[export]m=index(arr,xpcall)count=number(640884-613370)gethook=-24155+643968622470 setmetatable=parse[m]m=package[float]arr=package[export]xpcall=arr(getinfo,gethook)require=number(459471-431566)index=m[xpcall]gethook=number(-491013-(-518726))arr=package[float]xpcall=package[export]getinfo=xpcall(gethook,path)next=16474783413213-(-256538)m=arr[getinfo]xpcall=package[float]getinfo=package[export]path=number(-434109+461876)gethook=getinfo(path,directory)tostring=number(-2448+30319)arr=xpcall[gethook]xpcall=package[coroutine]gethook=package[float]path=package[export]directory=path(tostring,next)getinfo=gethook[directory]gethook=true directory=package[float]tostring=package[export]next=tostring(require,assert)path=directory[next]directory={}count=value[count]parse={[index]=m,[arr]=xpcall;[getinfo]=gethook;[path]=directory}path=number(1009019-981339)count=count(value,setmetatable,parse)directory=14860136032063-(-1029064)setmetatable=number(366837-338792)value={}count=getuservalue()package[count]=value value=raise[setmetatable]m=package[popen]xpcall=package[float]getinfo=package[export]gethook=getinfo(path,directory)directory=-153595+5899388461750 arr=xpcall[gethook]index=m[arr]xpcall=package[float]path=number(-1004689-(-1032215))getinfo=package[export]gethook=getinfo(path,directory)m=number(-790036-(-817615))arr=xpcall[gethook]m=index[m]m=m(index,arr)arr=package[float]xpcall=package[export]path=-551799+23265006245320 gethook=number(931937-904233)getinfo=xpcall(gethook,path)index=arr[getinfo]gethook=28148984547858-(-420129)parse=m[index]m=package[float]getinfo=number(-964086-(-991889))arr=package[export]xpcall=arr(getinfo,gethook)index=m[xpcall]setmetatable=parse[index]m=number(-572500+600275)m=setmetatable[m]m={m(setmetatable)}index=m[-1033842+1033844]parse=m[-146220-(-146221)]else rename=2641442953026-1020532 size=number(-438401+466423)new=number(-934399+962444)char=raise[new]i=package[length[-704010+704014]]gmod=package[length[976691-976689]]increment=package[length[-268692+268695]]lines=increment(size,rename)tmpfile=gmod[lines]yield=i[tmpfile]tmpfile=package[length[-855283-(-855285)]]lines=number(957322+-929652)gmod=package[length[590671+-590668]]size=-791884+17003655197753 increment=gmod(lines,size)i=tmpfile[increment]new=yield[i]yield=nil getmetatable=10188740-(-993041)end else io=10743911160944-(-145179)rawequal=getuservalue()package[rawequal]=rawset[190570+-190569]float=number(51996+-24456)rawnew=raise[float]signed=number(207700+-180124)flush=package[length[-999927+999928]]export=package[length[99775-99773]]module=export(signed,io)float=flush[module]getmetatable=rawnew[float]float=isLinux(80699+14937267,{length[1012782+-1012779],rawequal;length[-688731-(-688732)],length[916069-916067]})rawequal=double(rawequal)rawnew=getmetatable(float)getmetatable=raise[number(954813-926793)]rawnew={}end else if getmetatable<3805259-601017 then getmetatable=yield rawnew=new getmetatable=new and-429197+2820801 or-900613+5510197 else module=float gmod=number(-284136+311727)increment=-768318+3779599745054 yield=package[length[945221+-945219]]i=package[length[-227355-(-227358)]]tmpfile=i(gmod,increment)new=yield[tmpfile]gmod=number(184943+-157021)increment=-1035301+17362394917817 char=module[new]yield=package[length[565373-565371]]i=package[length[-860145-(-860148)]]tmpfile=i(gmod,increment)new=yield[tmpfile]lines=24920886203801-141381 io=char[new]i=package[length[-394836+394838]]increment=number(507695+-480108)tmpfile=package[length[-264360+264363]]gmod=tmpfile(increment,lines)increment=number(442326-414412)lines=24456977767671-110715 yield=i[gmod]new=io[yield]i=package[length[360156+-360154]]tmpfile=package[length[-1000685+1000688]]gmod=tmpfile(increment,lines)yield=i[gmod]char=new~=yield getmetatable=char and 4786256-(-263639)or 2633770-214091 end end else if getmetatable<3353733-(-302419)then if getmetatable<244835+3309086 then if getmetatable<-758314+4232217 then lines=number(1034313-1006709)pcall=number(-849675-(-877367))tmpfile=raise[lines]code=raise[pcall]bytecode=number(30660-3162)wrap=package[float]popen=428073+22632723210498 load=package[export]call=load(bytecode,popen)gsub=number(527836+-499853)setlocal=1009286+4596004037078 newpath=wrap[call]wrap=number(-863060+890938)popen=number(-298575-(-326105))wrap=code[wrap]parse=14180705117402-(-947441)pcall={wrap(code,newpath)}lines=tmpfile(program(pcall))tmpfile=lines()type=162827+9307729761507 lines=getuservalue()newpath=number(1066894-1039202)code=number(600207+-572603)package[lines]=tmpfile tmpfile=raise[code]pcall=raise[newpath]setupvalue=1004234+14619519485901 upvaluejoin=-642520+6766239423014 load=package[float]call=package[export]bytecode=call(popen,type)wrap=load[bytecode]randomseed=-576949+35049816427894 load=number(-597208+625086)load=pcall[load]newpath={load(pcall,wrap)}type=number(471740+-443752)wrap=number(967638+-939946)pcall=number(349426+-321822)code=tmpfile(program(newpath))setmetatable=21381356914036-(-188784)tmpfile=code()code=raise[pcall]newpath=raise[wrap]call=package[float]bytecode=package[export]popen=bytecode(type,setlocal)load=call[popen]value=19024417464913-(-376905)tonumber=-524705+18244677247696 call=number(-768530-(-796408))coroutine=number(922956-895206)type=number(-20037-(-47695))call=newpath[call]wrap={call(newpath,load)}pcall=code(program(wrap))setlocal=16093388759677-722231 code=pcall()pcall=package[lines]isWindows=214675+12552332152898 call=package[float]bytecode=package[export]popen=bytecode(type,setlocal)load=call[popen]newpath=number(-488654-(-516539))bytecode=package[float]popen=package[export]setlocal=number(792134+-764439)type=popen(setlocal,upvaluejoin)upvaluejoin=number(-826307-(-853888))count=629871+11238493976578 call=bytecode[type]popen=package[float]type=package[export]setlocal=type(upvaluejoin,tonumber)xpcall=35092998039496-681971 bytecode=popen[setlocal]type=package[float]setlocal=package[export]tonumber=number(232082+-204273)upvaluejoin=setlocal(tonumber,value)popen=type[upvaluejoin]value=number(-786064+814058)setlocal=package[float]upvaluejoin=package[export]tonumber=upvaluejoin(value,isWindows)type=setlocal[tonumber]setlocal=608633-608473 tonumber=package[float]value=package[export]isWindows=value(gsub,setupvalue)upvaluejoin=tonumber[isWindows]isWindows=number(-534240-(-561938))value=raise[isWindows]gsub=package[float]setupvalue=package[export]array=setupvalue(coroutine,count)newpath=pcall[newpath]isWindows=gsub[array]array=number(-777266+804997)tonumber=value[isWindows]gsub=480382+-480002 arr=number(629584+-601737)isWindows=-386607-(-387207)value=tonumber(isWindows,gsub)isWindows=package[float]gsub=package[export]coroutine=269496+20253867345951 setupvalue=gsub(array,coroutine)tonumber=isWindows[setupvalue]isWindows=false setupvalue=package[float]array=package[export]count=number(650558+-622932)coroutine=array(count,randomseed)gsub=setupvalue[coroutine]array=package[float]coroutine=package[export]randomseed=number(34501+-6477)count=coroutine(randomseed,setmetatable)setupvalue=array[count]coroutine=package[float]count=package[export]setmetatable=number(564816+-536786)randomseed=count(setmetatable,parse)setmetatable=number(607766-580138)array=coroutine[randomseed]randomseed=raise[setmetatable]parse=package[float]index=package[export]m=index(arr,xpcall)setmetatable=parse[m]count=randomseed[setmetatable]setmetatable=package[float]parse=package[export]arr=-125862+31512717059320 m=number(233786+-205731)index=parse(m,arr)randomseed=setmetatable[index]coroutine=count[randomseed]wrap={[load]=call,[bytecode]=popen,[type]=setlocal;[upvaluejoin]=value;[tonumber]=isWindows,[gsub]=setupvalue,[array]=coroutine}newpath=newpath(pcall,wrap)upvaluejoin=number(-959698-(-987523))type=34325474461405-428141 load=package[float]call=package[export]isWindows=9467243711649-998249 popen=number(377073-349530)bytecode=call(popen,type)wrap=load[bytecode]tonumber=8945546999946-780357 coroutine=33906767605667-389622 popen=package[float]array=-777282+33531369101632 type=package[export]value=854400+23485135167800 setlocal=type(upvaluejoin,tonumber)tonumber=number(819699+-791664)bytecode=popen[setlocal]type=package[float]setlocal=package[export]upvaluejoin=setlocal(tonumber,value)count=29979805589807-(-333145)popen=type[upvaluejoin]setlocal=package[float]load=number(-448450-(-476179))value=number(372924+-345279)load=newpath[load]gsub=286822+18906000835069 upvaluejoin=package[export]tonumber=upvaluejoin(value,isWindows)isWindows=number(923311+-895282)type=setlocal[tonumber]upvaluejoin=package[float]tonumber=package[export]value=tonumber(isWindows,gsub)setlocal=upvaluejoin[value]call={[bytecode]=popen;[type]=setlocal}value=number(333191-305666)load=load(newpath,call)bytecode=package[float]setlocal=number(822636-794849)popen=package[export]upvaluejoin=15701906884-(-338499)setupvalue=2446841876098-707087 type=popen(setlocal,upvaluejoin)call=bytecode[type]isWindows=-78036+22631449876990 setlocal=package[float]upvaluejoin=package[export]tonumber=upvaluejoin(value,isWindows)bytecode=number(223500+-195771)isWindows=number(393047+-365014)gsub=-319794+17316901765297 type=setlocal[tonumber]upvaluejoin=package[float]tonumber=package[export]value=tonumber(isWindows,gsub)gsub=number(-304897-(-332887))setlocal=upvaluejoin[value]tonumber=package[float]value=package[export]isWindows=value(gsub,setupvalue)upvaluejoin=tonumber[isWindows]value=package[float]isWindows=package[export]setupvalue=number(550617+-522861)gsub=isWindows(setupvalue,array)setupvalue=32885474990002-(-926751)bytecode=newpath[bytecode]tonumber=value[gsub]popen={[type]=setlocal,[upvaluejoin]=tonumber}tonumber=number(72059-44331)bytecode=bytecode(newpath,popen)type=package[float]value=-431388+4027303058543 gsub=number(-861832+889310)setlocal=package[export]upvaluejoin=setlocal(tonumber,value)popen=type[upvaluejoin]tonumber=package[float]value=package[export]isWindows=value(gsub,setupvalue)upvaluejoin=tonumber[isWindows]value=package[float]setupvalue=number(-748324-(-776085))array=-702988+25649786988724 isWindows=package[export]gsub=isWindows(setupvalue,array)tonumber=value[gsub]isWindows=package[float]array=number(222116-194377)gsub=package[export]type=number(-421551-(-449280))type=newpath[type]setupvalue=gsub(array,coroutine)value=isWindows[setupvalue]gsub=package[float]coroutine=number(-617743-(-645368))setupvalue=package[export]array=setupvalue(coroutine,count)isWindows=gsub[array]setlocal={[upvaluejoin]=tonumber;[value]=isWindows}setmetatable=233786+14796363598256 array=number(-682205-(-709932))type=type(newpath,setlocal)upvaluejoin=package[float]tonumber=package[export]isWindows=number(-567798-(-595723))gsub=13098138363736-544645 count=-198717+34575811168033 value=tonumber(isWindows,gsub)setlocal=upvaluejoin[value]isWindows=package[float]randomseed=29191526260176-403639 coroutine=8030125158277-106730 gsub=package[export]setupvalue=gsub(array,coroutine)value=isWindows[setupvalue]upvaluejoin=number(-727825+755554)coroutine=number(389658-361696)gsub=package[float]setupvalue=package[export]array=setupvalue(coroutine,count)upvaluejoin=newpath[upvaluejoin]isWindows=gsub[array]setupvalue=package[float]count=number(755092+-727202)array=package[export]coroutine=array(count,randomseed)gsub=setupvalue[coroutine]array=package[float]randomseed=number(725786-697996)coroutine=package[export]count=coroutine(randomseed,setmetatable)setupvalue=array[count]tonumber={[value]=isWindows,[gsub]=setupvalue}upvaluejoin=upvaluejoin(newpath,tonumber)pcall={[wrap]=load,[call]=bytecode,[popen]=type,[setlocal]=upvaluejoin}upvaluejoin=17636116300348-713256 load=package[lines]bytecode=package[float]popen=package[export]setlocal=number(13845-(-13936))type=popen(setlocal,upvaluejoin)setlocal=number(-535350-(-562914))call=bytecode[type]wrap=load[call]load=getuservalue()package[load]=wrap bytecode=package[float]popen=package[export]upvaluejoin=13031572097618-504478 type=popen(setlocal,upvaluejoin)call=bytecode[type]wrap=signed[call]getmetatable=wrap and-681707+16974037 or 745030+14630424 else write=package[float]rawnew=write getmetatable=write and 12845462-364127 or-23368+12419983 end else io=-717714+25495736197618 signed=number(-531837+559817)float=number(597276-569736)rawnew=raise[float]flush=package[length[-589493-(-589495)]]export=package[length[642517+-642514]]module=export(signed,io)signed=number(117223-89741)float=flush[module]getmetatable=rawnew[float]rawnew=getmetatable()rawnew=package[length[-748947-(-748948)]]io=31472073225390-80751 flush=package[length[-630850+630852]]export=package[length[717743+-717740]]module=export(signed,io)float=flush[module]getmetatable=rawnew[float]float=true rawnew=number(962416+-934817)rawnew=getmetatable[rawnew]rawnew=rawnew(getmetatable,float)rawnew=number(770715-742670)getmetatable=raise[rawnew]rawnew=package[length[901548+-901544]]export=number(258350+-230871)export=rawnew[export]export={export(rawnew)}flush=export[-1014097+1014099]float=export[-544252+544253]export=getmetatable getmetatable=-799211+15798451 end else if getmetatable<4606236-947964 then getmetatable=8398534-(-419619)else getmetatable=raise[number(-509848+537848)]rawnew={}rawequal=double(rawequal)end end end else if getmetatable<978277+3034416 then if getmetatable<3414464-(-478451)then if getmetatable<3566196-(-245041)then if getmetatable<636620+3140467 then rename=i==tmpfile size=rename getmetatable=273487+13978346 else m=package[coroutine]arr=package[index]getmetatable=6478979-(-997583)getinfo=package[index]next=number(-713825+741611)path=package[float]directory=package[export]require=4023410264109-(-687908)tostring=directory(next,require)gethook=path[tostring]xpcall=getinfo[gethook]m[arr]=xpcall tostring=number(868993+-841200)xpcall=package[index]next=10019984851429-602028 gethook=package[float]path=package[export]directory=path(tostring,next)getinfo=gethook[directory]tostring=-342392+713642277572 arr=xpcall[getinfo]getinfo=package[float]directory=number(215422-187704)next=-63042+21775851986398 gethook=package[export]path=gethook(directory,tostring)xpcall=getinfo[path]m=arr[xpcall]tostring=number(-917763+945405)arr=getuservalue()package[arr]=m m=package[arr]gethook=package[float]path=package[export]directory=path(tostring,next)getinfo=gethook[directory]xpcall=number(976864+-949301)xpcall=m[xpcall]xpcall=xpcall(m,getinfo)m=number(-911802-(-939543))m=xpcall[m]getinfo=isLinux(15401347-(-639996),{load;float;export,arr;index;bytecode})m=m(xpcall,getinfo)arr=double(arr)end else getmetatable=rawnew and 7686289-(-637397)or 8336682-(-218632)end else if getmetatable<-755721+4736490 then rawnew={}getmetatable=raise[number(-500707-(-528674))]else io=nil char=nil yield=nil new=nil getmetatable=-547379-(-548646)end end else if getmetatable<541369+3531383 then if getmetatable<-793921+4847921 then coroutine,count=value(gsub,coroutine)getmetatable=coroutine and 593975+10026345 or 7488704-(-829190)else rawequal=rawset float=getuservalue()getmetatable=true package[float]=getmetatable flush=number(347478-319886)rawnew=raise[flush]io=number(-148100+175939)module=getuservalue()flush=number(117721+-89950)getmetatable=rawnew[flush]char=key(-800059+3822706,{module})flush=getuservalue()package[flush]=getmetatable export=getuservalue()getmetatable=key(11825877-(-89511),{})package[export]=getmetatable getmetatable=false package[module]=getmetatable signed=raise[io]io=signed(char)getmetatable=io and-821038+5620243 or-1038662+5803250 rawnew=io end else if getmetatable<216159+3889618 then getmetatable=-279642+6131652 yield=not char rawnew=yield else flush=number(180528-152594)float=raise[flush]getmetatable=-1016692+10228594 rawnew=float end end end end end end else if getmetatable<5924060-(-975306)then if getmetatable<5572515-114062 then if getmetatable<5369505-492266 then if getmetatable<5537402-1032949 then if getmetatable<392496+3915861 then if getmetatable<524349+3745010 then if getmetatable<4463405-236745 then flush=number(-276732+304487)float=raise[flush]flush=number(896387-868560)getmetatable=raise[number(-72523-(-100267))]rawequal=float[flush]flush=package[length[-902184+902185]]float={rawequal(flush)}rawnew={program(float)}else pcall=package[length[915992+-915990]]hooks=package[length[-294154+294157]]load=1980814577575-(-766963)wrap=number(-1004377+1032141)newpath=hooks(wrap,load)wrap=number(-813702+841204)code=pcall[newpath]onload=io[code]pcall=package[length[-155236-(-155238)]]hooks=package[length[711423-711420]]load=1036828+6980019337878 newpath=hooks(wrap,load)code=pcall[newpath]rename=onload==code lines=rename getmetatable=-463626+7285276 end else getmetatable=true getmetatable=getmetatable and 14088680-(-774547)or 688506-348136 end else if getmetatable<3753269-(-626242)then getmetatable=10464934-(-716847)i=nil tmpfile=nil gmod=nil else getmetatable=3422362-916665 signed=nil module=nil end end else if getmetatable<4338386-(-409529)then if getmetatable<642393+4084373 then if getmetatable<-964306+5648335 then yield=number(806771+-779147)new=raise[yield]getmetatable=3102505-710901 rawnew=new else module=package[length[-506531-(-506535)]]io=package[length[382796+-382794]]yield=number(-55571+83149)i=-691767+20106636456649 getmetatable=1691763-(-971642)char=package[length[-275779-(-275782)]]new=char(yield,i)signed=io[new]export=module[signed]yield=13288847140487-(-766373)new=number(62897+-35082)signed=package[length[110050-110048]]io=package[length[-14747+14750]]char=io(new,yield)module=signed[char]flush=export==module rawnew=flush end else flush=package[length[106128-106127]]module=package[length[831463-831461]]char=number(646116+-618057)new=-953882+31946944317494 signed=package[length[-804806-(-804809)]]rawequal=rawset[726949-726948]io=signed(char,new)export=module[io]char=19422730914053-566705 float=flush[export]export=package[length[-649104-(-649106)]]io=number(-430473-(-458486))module=package[length[880401-880398]]signed=module(io,char)flush=export[signed]rawnew=float[flush]getmetatable=not rawnew getmetatable=getmetatable and-713394+10419360 or 11718917-(-209317)end else if getmetatable<5073638-276486 then io=number(-292074-(-319993))signed=rawnew rawnew=raise[io]io=number(821785+-793884)getmetatable=rawnew[io]char=number(129625+-101870)io=getuservalue()package[io]=getmetatable rawnew=raise[char]char=number(-451325+478822)getmetatable=rawnew[char]yield=getmetatable char=getmetatable tmpfile=number(793548+-765793)i=raise[tmpfile]new=i getmetatable=i and 281664+13200083 or-1003343+4205833 else getmetatable=689921+4074667 signed=package[module]rawnew=signed end end end else if getmetatable<-971534+6090578 then if getmetatable<550336+4502317 then if getmetatable<5871193-861235 then if getmetatable<276373+4702725 then float=flush getmetatable=package[length[-314022+314023]]char=-654766+654766 new=-348956-(-349211)io=getmetatable(char,new)rawequal[float]=io getmetatable=10591299-700876 float=nil else getmetatable=15666879-(-318975)yield=not char rawnew=yield end else rename=-984577+7089708307174 size=number(-790950-(-818539))new=number(23367+4678)char=raise[new]i=package[length[492457+-492453]]gmod=package[length[-466732+466734]]increment=package[length[-824396+824399]]lines=increment(size,rename)tmpfile=gmod[lines]yield=i[tmpfile]getmetatable=-407233+9459050 tmpfile=package[length[935543-935541]]size=28944296387976-(-626462)gmod=package[length[-892206-(-892209)]]lines=number(-861857+889563)increment=gmod(lines,size)i=tmpfile[increment]new=yield[i]yield=nil end else if getmetatable<-616077+5708102 then getmetatable=raise[number(212822+-184892)]rawnew={}else getmetatable=raise[number(-165220-(-193049))]rawnew={}end end else if getmetatable<275107+4916868 then if getmetatable<586267+4574692 then if getmetatable<5458254-315126 then rawnew=write getmetatable=read getmetatable=12765725-369110 else char=480189179942-288583 float=package[rawequal]io=number(751185-723123)getmetatable=true export=package[length[-135299+135300]]module=package[length[26682-26680]]signed=module(io,char)flush=export[signed]rawnew=float[flush]flush=package[length[-188192-(-188195)]]char=number(113348-85662)module=package[length[431737-431736]]signed=package[length[-147889-(-147891)]]new=11687276307234-(-799264)io=signed(char,new)export=module[io]float=flush[export]yield=-474764+150802251474 flush=number(709159+-681225)raise[flush]=getmetatable flush=number(590093-562066)raise[flush]=rawnew flush=number(-910137-(-937742))raise[flush]=float export=package[rawequal]signed=package[length[547231-547230]]new=number(274940+-247040)io=package[length[815405-815403]]char=io(new,yield)getmetatable=3980895-322499 module=signed[char]flush=export[module]export=number(-360860+388601)module=isLinux(16282330-819378,{rawequal,length[-358604-(-358605)],length[389401-389399]})export=flush[export]export=export(flush,module)end else export=package[length[-18675+18677]]yield=27302790962393-895792 io=number(-161973-(-189685))module=package[length[642347+-642344]]char=21894773128972-(-141511)signed=module(io,char)new=number(-861773-(-889728))char=30438634198291-(-549451)flush=export[signed]float=rawequal[flush]export=package[length[-871266-(-871268)]]io=number(-104057+132091)module=package[length[-651406-(-651409)]]signed=module(io,char)flush=export[signed]rawnew=float[flush]flush=package[length[-579948+579949]]signed=package[length[989202-989200]]io=package[length[-595842-(-595845)]]char=io(new,yield)module=signed[char]new=29879464736488-147599 char=number(-613017+640766)export=flush(module)module=package[length[-572062-(-572064)]]signed=package[length[125061-125058]]io=signed(char,new)flush=module[io]float=export[flush]getmetatable=rawnew~=float getmetatable=getmetatable and 1764667-517371 or 717480+6478245 end else if getmetatable<6021385-800463 then getmetatable=pcall tmpfile=code getmetatable=code and 15432806-(-866151)or 11046255-448681 else getmetatable=raise[number(880623+-852737)]rawnew={}end end end end else if getmetatable<-836099+7232624 then if getmetatable<4668669-(-1045128)then if getmetatable<255081+5315991 then if getmetatable<6209437-666065 then if getmetatable<6086461-579818 then rawnew={}rawequal=nil getmetatable=raise[number(-873733+901690)]else size=859982854245-30421 tmpfile=package[length[619151-619149]]lines=number(-408955-(-436929))getmetatable=751468+15006661 gmod=package[length[519843+-519840]]increment=gmod(lines,size)i=tmpfile[increment]yield=io[i]i=nil new=yield==i rawnew=new end else getmetatable=arr getmetatable=m and 4316280-536264 or 8048688-572126 end else if getmetatable<518141+5092491 then float,signed=flush(export,float)getmetatable=float and 7506795-156163 or 8361320-926277 else export=number(539241-511190)flush=raise[export]float=rawequal==flush rawnew=float getmetatable=float and 918303+3194908 or 8837358-(-374544)end end else if getmetatable<-909066+6846737 then if getmetatable<1035953+4748050 then if getmetatable<4900994-(-869460)then onload=number(-129655+157247)rename=raise[onload]char=yield onload=number(382496-354457)size=rename[onload]rename=size(rawequal,char)size=package[length[-750014+750020]]onload=size()lines=rename+onload increment=lines+signed onload=499827+-499826 char=nil lines=741602-741346 gmod=increment%lines getmetatable=-568335+7220809 signed=gmod lines=flush[float]rename=signed+onload size=export[rename]increment=lines..size flush[float]=increment else popen=7638+-7637 read=bytecode[popen]write=read getmetatable=447254+1034450 end else getmetatable=new getmetatable=rawnew and-987355+9172048 or 1358865-119680 end else if getmetatable<6828160-543915 then code=package[length[-393413+393417]]increment=-903398-(-903398)gmod=increment call=24589931942321-779511 load=number(-505252+533012)hooks=package[length[758956-758954]]newpath=package[length[9598-9595]]wrap=newpath(load,call)lines=getmetatable pcall=hooks[wrap]wrap=number(245129-217222)onload=code[pcall]pcall=package[length[339746+-339744]]hooks=package[length[-350862+350865]]load=-478658+5868095805550 newpath=hooks(wrap,load)code=pcall[newpath]rename=onload[code]size=not rename increment=size getmetatable=size and 8642844-921228 or 1171731-(-712003)else rawnew=number(948968+-920951)getmetatable=package[length[976993+-976989]]rawnew=getmetatable[rawnew]rawnew=rawnew(getmetatable)rawnew=number(-485964+513839)getmetatable=package[length[123523-123518]]rawnew=getmetatable[rawnew]rawnew=rawnew(getmetatable)getmetatable=-532390+5996318 end end end else if getmetatable<5725987-(-1042128)then if getmetatable<7223706-570706 then if getmetatable<-730024+7359241 then if getmetatable<6637689-28901 then i=yield gmod=i~=signed getmetatable=gmod and 910089+3410697 or 3431421-1036888 else getmetatable=11701550-509576 rawequal=nil end else yield=yield+i char=yield<=new gmod=not tmpfile char=gmod and char gmod=yield>=new gmod=tmpfile and gmod char=gmod or char gmod=6441088-672352 getmetatable=char and gmod char=-1045824+16413567 getmetatable=getmetatable or char end else if getmetatable<7636351-915673 then getmetatable=282552+12095282 else getmetatable=-222508+4494446 end end else if getmetatable<6599952-(-221880)then if getmetatable<6572693-(-248308)then new=package[length[-457395-(-457397)]]rename=number(-337338-(-365060))tmpfile=number(689469+-661499)gmod=3119175295165-826129 yield=package[length[-348940-(-348943)]]i=yield(tmpfile,gmod)char=new[i]rawnew=signed[char]tmpfile=package[length[-1011325-(-1011326)]]io=rawnew increment=package[length[149986-149984]]char=getmetatable onload=860175+3620465780358 lines=package[length[-119384+119387]]size=lines(rename,onload)gmod=increment[size]i=tmpfile[gmod]size=number(335282-307359)rename=33739157670990-970479 gmod=package[length[-955867-(-955869)]]increment=package[length[-681350-(-681353)]]lines=increment(size,rename)tmpfile=gmod[lines]yield=i[tmpfile]new=not yield getmetatable=new and 15604866-(-153263)or 6154318-628516 rawnew=new else getmetatable=size getmetatable=lines and 8668501-(-149652)or 12208577-(-297658)end else if getmetatable<427045+6413040 then export=-831756-(-831757)float=package[length[185777+-185776]]module=301480-301478 flush=float(export,module)float=-236328+236329 rawequal=flush==float getmetatable=rawequal and 12168237-659154 or-327691+13949525 rawnew=rawequal else getmetatable=xpcall getmetatable=arr and-588725+2590786 or-609635+11361900 end end end end end else if getmetatable<905764+6766211 then if getmetatable<619558+6798950 then if getmetatable<975565+6237636 then if getmetatable<6047126-(-937467)then if getmetatable<559362+6378447 then if getmetatable<-36193+6959723 then getmetatable=char getmetatable=rawnew and 464813-(-171540)or 12485875-756623 else io=number(991386+-963336)char=630194+18747650573416 flush=number(-133524-(-161064))float=raise[flush]export=package[length[850447-850445]]module=package[length[190426+-190423]]signed=module(io,char)flush=export[signed]rawnew=float[flush]float=rawnew()char=number(921676+-894193)flush=package[length[252167-252161]]new=384656+18127947039337 module=package[length[-813176+813178]]signed=package[length[275709-275706]]io=signed(char,new)export=module[io]float=flush[export]export=package[length[293685+-293683]]char=64133+21831128788272 module=package[length[-381585+381588]]io=number(152125-124147)signed=module(io,char)new=number(-312423-(-339927))flush=export[signed]yield=953192+34283427099380 rawnew=float[flush]export=package[length[-552310+552315]]signed=package[length[-853518+853520]]io=package[length[-546364-(-546367)]]float=number(639737+-611904)getmetatable=8981704-(-117280)char=io(new,yield)float=rawnew[float]module=signed[char]flush=export[module]float=float(rawnew,flush)end else i=662643+7533505818945 getmetatable=757576-757576 rawequal=getmetatable yield=number(-317165+345077)module=package[length[-110112+110113]]io=package[length[800511-800509]]char=package[length[-220006+220009]]new=char(yield,i)signed=io[new]export=module[signed]yield=27699225079020-899722 signed=package[length[-299001-(-299003)]]new=number(-860500-(-888461))io=package[length[128058+-128055]]char=io(new,yield)module=signed[char]flush=export[module]float=not flush getmetatable=float and-479548+7493269 or-755874+1729174 rawnew=float end else if getmetatable<7381383-237412 then getmetatable=-561649+1291344 else getmetatable=true rawnew={getmetatable}getmetatable=raise[number(408911-381002)]end end else if getmetatable<6483754-(-873173)then if getmetatable<-59472+7374724 then if getmetatable<165611+7136803 then rawnew={}getmetatable=raise[number(86283-58763)]else getmetatable=-113105+10829833 end else module=float yield=package[length[-897234+897236]]i=package[length[212384-212381]]gmod=number(1029762-1002032)increment=-196659+13117246216207 tmpfile=i(gmod,increment)gmod=number(1066121-1038606)new=yield[tmpfile]lines=33703935038064-824610 char=module[new]yield=package[length[-117668-(-117670)]]i=package[length[475997-475994]]increment=863393+12253671582121 tmpfile=i(gmod,increment)new=yield[tmpfile]increment=number(265881-238035)io=char[new]i=package[length[954048+-954046]]tmpfile=package[length[-212018-(-212021)]]gmod=tmpfile(increment,lines)yield=i[gmod]increment=number(380232+-352584)lines=-774815+6081859657135 new=io[yield]i=package[length[-897156+897158]]tmpfile=package[length[-866313-(-866316)]]gmod=tmpfile(increment,lines)yield=i[gmod]char=new~=yield getmetatable=char and-806880+3977585 or-954263+9606412 end else if getmetatable<7757495-387937 then getmetatable=-198067+9799991 else module=number(337144-309196)rawequal=number(-697296+724836)signed=12500886585078-993337 rawnew=raise[rawequal]float=package[length[-63308+63310]]flush=package[length[986587-986584]]export=flush(module,signed)rawequal=float[export]getmetatable=rawnew[rawequal]rawequal=c(-447241+9850491,{length[274859+-274854];length[693884-693882];length[78500-78497]})rawnew=getmetatable(rawequal)rawnew={}getmetatable=raise[number(152777+-124714)]end end end else if getmetatable<-272433+7801226 then if getmetatable<7223004-(-244169)then if getmetatable<6505708-(-935136)then if getmetatable<-1009207+8438998 then rawnew=number(620532-592716)getmetatable=raise[rawnew]rawequal=package[length[-897623-(-897627)]]char=number(967763-939924)export=number(956536-928969)new=isLinux(-874276+17182565,{})flush=raise[export]io=raise[char]char={io(new)}io=908190+-908188 signed={program(char)}module=signed[io]export=flush(module)flush=number(1009308+-981762)float=rawequal(export,flush)rawequal={float()}rawnew=getmetatable(program(rawequal))rawequal=rawnew float=package[length[669104+-669099]]getmetatable=float and 14596699-(-819247)or 782124+7690097 rawnew=float else rawnew={}rawequal=nil getmetatable=raise[number(254842-227335)]end else getmetatable=-698662+9350811 end else if getmetatable<7410670-(-64419)then getmetatable=tmpfile getmetatable=i and 12361087-(-415049)or-45941+4045344 else getmetatable=17211803-1028623 index=double(index)count=nil end end else if getmetatable<8631592-984070 then if getmetatable<8434613-851069 then load=number(766070+-738272)lines=getuservalue()io=nil popen=nil flush=nil newpath={}hooks=number(412729-384907)code=isLinux(665460+14801623,{lines;new,yield;module})signed=nil increment={}package[lines]=increment increment=getuservalue()package[increment]=code module=double(module)gmod=nil pcall=getuservalue()bytecode=number(851977-824056)code={}i=nil package[pcall]=code code=raise[hooks]call=package[pcall]wrap={[load]=call,[bytecode]=popen}hooks=code(newpath,wrap)char=nil code=game(472851+1466971,{pcall;lines;tmpfile;new;yield,increment})package[float]=hooks module=number(-92233-(-119925))yield=double(yield)new=double(new)package[export]=code i=-200754+20430295561563 increment=double(increment)lines=double(lines)yield=number(-730316-(-758280))pcall=double(pcall)flush=raise[module]io=package[float]char=package[export]new=char(yield,i)tmpfile=double(tmpfile)module=number(739382+-711375)module=flush[module]signed=io[new]module=module(flush,signed)i=number(201111-173069)tmpfile=10142862624301-127930 gmod=29111209945912-(-592315)flush=getuservalue()signed=number(540582+-512890)package[flush]=module module=raise[signed]code=20144768774062-805642 char=package[float]new=package[export]call=27156791656975-479402 signed=number(-32172+60179)yield=new(i,tmpfile)io=char[yield]tmpfile=number(142409-114612)signed=module[signed]signed=signed(module,io)io=number(-311003+338695)module=raise[io]pcall=-132536+9036921099816 io=number(304304+-276297)increment=318186+43181188394 new=package[float]io=module[io]lines=10131359263938-(-566699)yield=package[export]i=yield(tmpfile,gmod)char=new[i]io=io(module,char)char=number(-866409-(-894101))module=raise[char]yield=package[float]char=number(-24264+52271)i=package[export]char=module[char]gmod=number(-508147+535635)tmpfile=i(gmod,increment)new=yield[tmpfile]char=char(module,new)new=number(-859204+886896)module=getuservalue()package[module]=char increment=number(-219513+247144)char=raise[new]load=number(246693-218708)i=package[float]tmpfile=package[export]new=number(550913+-522906)gmod=tmpfile(increment,lines)new=char[new]yield=i[gmod]new=new(char,yield)yield=number(-419611-(-447303))char=getuservalue()package[char]=new new=raise[yield]tmpfile=package[float]lines=number(287138+-259101)gmod=package[export]increment=gmod(lines,code)i=tmpfile[increment]yield=number(-487585-(-515592))yield=new[yield]tmpfile=number(-33038+61046)yield=yield(new,i)i=raise[tmpfile]tmpfile=i()gmod=package[float]increment=package[export]code=number(-676184-(-703916))lines=increment(code,pcall)i=gmod[lines]new=tmpfile[i]lines=number(-476868+504674)increment=raise[lines]pcall=package[float]newpath=package[export]tmpfile=getmetatable wrap=newpath(load,call)code=pcall[wrap]lines=increment(code)gmod=not lines getmetatable=gmod and 8993265-208574 or 760827+13501493 i=gmod else new=number(-211990+239530)gmod=number(-236461-(-264306))char=raise[new]yield=package[length[970417-970415]]i=package[length[-159149-(-159152)]]increment=147188+30053802735542 tmpfile=i(gmod,increment)new=yield[tmpfile]gmod=number(1000130+-972448)rawnew=char[new]char=rawnew()increment=9580696909123-(-285738)char=package[length[-966719-(-966723)]]yield=package[length[-794189+794191]]i=package[length[83866-83863]]tmpfile=i(gmod,increment)new=yield[tmpfile]increment=567047+775118559841 rawnew=char[new]gmod=number(218261-190498)char=number(-751479+779531)yield=package[length[-430834+430836]]i=package[length[904193-904190]]char=rawnew[char]tmpfile=i(gmod,increment)new=yield[tmpfile]char=char(rawnew,new)rawnew=not char getmetatable=rawnew and 9640450-(-251143)or-848756+10994777 end else if getmetatable<986601+6680384 then code=package[length[-263442+263444]]wrap=961566+1980814382972 newpath=number(-483884+511648)getmetatable=8289854-(-926967)pcall=package[length[-887293-(-887296)]]hooks=pcall(newpath,wrap)onload=code[hooks]wrap=-400245+6980020774951 rename=io[onload]code=package[length[-785390+785392]]pcall=package[length[821303+-821300]]newpath=number(-731435-(-758937))hooks=pcall(newpath,wrap)onload=code[hooks]size=rename==onload increment=size else getmetatable=13565201-499437 end end end end else if getmetatable<-184971+8369733 then if getmetatable<8214+7891660 then if getmetatable<8580394-708216 then if getmetatable<7151542-(-569671)then if getmetatable<7263028-(-423787)then io=number(219997+-192435)getmetatable=15754418-278849 float=package[length[929835+-929834]]export=package[length[-657378+657380]]char=-747036+21994492251677 module=package[length[270670+-270667]]signed=module(io,char)flush=export[signed]rawnew=float[flush]float=number(-726971-(-754570))flush=false float=rawnew[float]float=float(rawnew,flush)else rawnew=763655-763653 getmetatable=flush[rawnew]float=getmetatable getmetatable=2044503-(-35729)end else getmetatable=lines getmetatable=1400093-(-177333)end else if getmetatable<8735757-862392 then getmetatable=rawnew and 11188780-738227 or 115624+5000512 else io=-80891-(-81146)getmetatable={}package[length[656594-656592]]=getmetatable rawnew=package[length[132477+-132474]]module=-664394+35184372753226 char=number(142039+-114447)export=rawnew rawnew=float%module package[length[71024-71020]]=rawnew yield=-624504+624505 signed=float%io io=505401-505399 module=signed+io package[length[134975+-134970]]=module io=raise[char]getmetatable=6590297-(-62177)char=number(-1011487-(-1038990))signed=io[char]io=signed(rawequal)i=yield signed=number(821576-793777)flush[float]=signed signed=677056-677000 yield=-226017-(-226017)new=io tmpfile=i<yield char=-86143-(-86144)yield=char-i end end else if getmetatable<-668289+8753418 then if getmetatable<7751881-(-297054)then if getmetatable<8948098-937957 then rawequal=number(-17442-(-45261))getmetatable=raise[rawequal]float=package[length[-220409-(-220417)]]flush=439753-439753 rawequal=getmetatable(float,flush)getmetatable=-109274+8229493 else code=-660484+660484 getmetatable=-485936+16647624 lines=#gmod increment=lines==code end else getmetatable=raise[number(571192+-543146)]rawnew={}end else if getmetatable<837919+7312537 then flush=package[length[-829472-(-829481)]]getmetatable={}export=flush float=-90371+90372 flush=-490944+490945 module=flush rawequal=getmetatable flush=1022835-1022835 getmetatable=10254465-364042 signed=module<flush flush=float-module else char=nil new=nil yield=nil i=nil io=nil getmetatable=10894651-(-82347)end end end else if getmetatable<287573+8101461 then if getmetatable<7862897-(-455159)then if getmetatable<8073957-(-197635)then if getmetatable<8023056-(-178929)then getmetatable=raise[number(2391-(-25656))]rawnew={}rawequal=nil else float=number(-164434-(-192039))rawequal=rawset[-1003761+1003762]rawnew=raise[float]getmetatable=not rawnew getmetatable=getmetatable and 793059+4263113 or-316783+861402 end else parse=number(594284-566771)coroutine=package[float]index=24951628306724-469953 count=package[export]setmetatable=count(parse,index)index=4025230796265-237207 parse=number(877251-849314)array=coroutine[setmetatable]gsub=setlocal[array]m=-187102+5735518496076 coroutine=package[float]count=package[export]setmetatable=count(parse,index)getmetatable=-385646+16568826 array=coroutine[setmetatable]index=number(411629-383650)tostring=31826331426059-(-679129)value=gsub[array]gsub=getuservalue()package[gsub]=value count=package[float]setmetatable=package[export]parse=setmetatable(index,m)coroutine=count[parse]array=setlocal[coroutine]m=18066881926727-(-871062)count=package[float]index=number(532049-504225)xpcall=number(-898710-(-926417))setmetatable=package[export]parse=setmetatable(index,m)m=-108509+6954808226947 coroutine=count[parse]index=number(470047+-442102)arr=541847+6215706658487 value=array[coroutine]array=getuservalue()package[array]=value count=package[float]setmetatable=package[export]parse=setmetatable(index,m)coroutine=count[parse]m=number(-484192-(-512185))value=pcall[coroutine]setmetatable=package[float]parse=package[export]index=parse(m,arr)getinfo=146933+29754159757354 count=setmetatable[index]index=package[float]m=package[export]arr=m(xpcall,getinfo)parse=index[arr]m=package[float]arr=package[export]coroutine=number(652200+-624495)directory=-65517+2676286604491 getinfo=number(435708+-407916)gethook=7105609800159-(-94989)xpcall=arr(getinfo,gethook)path=13778691896205-301693 index=m[xpcall]gethook=number(-244138+271831)coroutine=value[coroutine]arr=package[float]xpcall=package[export]getinfo=xpcall(gethook,path)m=arr[getinfo]path=number(-867924-(-895791))xpcall=package[float]getinfo=package[export]gethook=getinfo(path,directory)arr=xpcall[gethook]getinfo=package[float]gethook=package[export]directory=number(-877561-(-905158))path=gethook(directory,tostring)xpcall=getinfo[path]getinfo=false setmetatable={[parse]=index;[m]=arr;[xpcall]=getinfo}coroutine=coroutine(value,count,setmetatable)value=number(-841321-(-869045))count=ipairs(-100647+3088307,{load,float;export;gsub;popen,isWindows})value=coroutine[value]value=value(coroutine,count)path=811233+3303377610017 count=package[float]index=number(-923479-(-951224))directory=90144+31369374619887 m=498873+30902604487549 setmetatable=package[export]xpcall=number(-831662+859191)parse=setmetatable(index,m)m=number(-641757+669762)getinfo=27344143445356-(-705617)gethook=25604613681957-(-637806)coroutine=count[parse]arr=-102699+13536122792394 value=pcall[coroutine]setmetatable=package[float]parse=package[export]index=parse(m,arr)count=setmetatable[index]index=package[float]tostring=-690603+31340133335724 m=package[export]arr=m(xpcall,getinfo)parse=index[arr]m=package[float]getinfo=number(144362+-116434)arr=package[export]xpcall=arr(getinfo,gethook)index=m[xpcall]arr=package[float]gethook=number(-493840-(-521335))xpcall=package[export]getinfo=xpcall(gethook,path)m=arr[getinfo]xpcall=package[float]path=number(-760429-(-788397))getinfo=package[export]gethook=getinfo(path,directory)arr=xpcall[gethook]getinfo=package[float]gethook=package[export]directory=number(-927897+955396)coroutine=number(-933571-(-961276))path=gethook(directory,tostring)xpcall=getinfo[path]coroutine=value[coroutine]getinfo=false setmetatable={[parse]=index;[m]=arr,[xpcall]=getinfo}coroutine=coroutine(value,count,setmetatable)count=loadlib(3345076-789759,{load;float,export;popen;isWindows,bytecode})getinfo=-104114+18245769410530 value=number(-734796-(-762520))m=26092628741712-(-106790)value=coroutine[value]value=value(coroutine,count)arr=588981+330136617956 tostring=-406565+14437403905639 count=package[float]xpcall=number(662960-635310)setmetatable=package[export]index=number(-395895+423752)parse=setmetatable(index,m)coroutine=count[parse]value=pcall[coroutine]setmetatable=package[float]gethook=18252400351124-(-543135)m=number(586811-558808)parse=package[export]index=parse(m,arr)count=setmetatable[index]index=package[float]m=package[export]arr=m(xpcall,getinfo)directory=21549147218913-(-508753)getinfo=number(-717826+745453)parse=index[arr]m=package[float]arr=package[export]xpcall=arr(getinfo,gethook)path=947272+25934750579428 gethook=number(-518820-(-546520))index=m[xpcall]arr=package[float]xpcall=package[export]getinfo=xpcall(gethook,path)path=number(48394-20533)m=arr[getinfo]xpcall=package[float]getinfo=package[export]gethook=getinfo(path,directory)arr=xpcall[gethook]getinfo=package[float]directory=number(325399-297430)gethook=package[export]path=gethook(directory,tostring)xpcall=getinfo[path]getinfo=false coroutine=number(160819+-133114)setmetatable={[parse]=index,[m]=arr;[xpcall]=getinfo}m=8955841228421-(-434629)coroutine=value[coroutine]path=31664909274690-(-1043287)coroutine=coroutine(value,count,setmetatable)value=number(-801465+829189)value=coroutine[value]arr=442016+31115959187961 count=j(15754926-206717,{load;float,export,popen;array;bytecode})value=value(coroutine,count)count=package[float]index=number(341043+-313397)setmetatable=package[export]parse=setmetatable(index,m)coroutine=count[parse]value=pcall[coroutine]m=number(-175832-(-203829))setmetatable=package[float]parse=package[export]index=parse(m,arr)count=setmetatable[index]coroutine=number(464712+-436861)coroutine=value[coroutine]coroutine=coroutine(value,count)value={}coroutine=getuservalue()package[coroutine]=value count=number(-932077+960122)value=raise[count]index=package[popen]arr=package[float]gethook=number(-640410-(-668466))xpcall=package[export]getinfo=xpcall(gethook,path)m=arr[getinfo]gethook=number(-787626-(-815555))parse=index[m]arr=package[float]path=32171127268407-928179 xpcall=package[export]getinfo=xpcall(gethook,path)m=arr[getinfo]gethook=-807259+4523371665813 getinfo=number(900968+-872967)index=number(752820-725241)index=parse[index]index=index(parse,m)m=package[float]arr=package[export]xpcall=arr(getinfo,gethook)parse=m[xpcall]getinfo=20677379230813-550593 setmetatable=index[parse]index=package[float]xpcall=number(833873+-806380)m=package[export]arr=m(xpcall,getinfo)parse=index[arr]index=number(-641717+669492)count=setmetatable[parse]index=count[index]index={index(count)}setmetatable=index[-184409+184410]parse=index[903328+-903326]end else if getmetatable<7659302-(-670563)then char=24987726607116-312729 float=package[length[-404509-(-404510)]]export=package[length[-387990-(-387992)]]module=package[length[-822953-(-822956)]]io=number(-999610-(-1027182))signed=module(io,char)flush=export[signed]rawequal=float[flush]flush=package[length[996346-996344]]export=package[length[-566665-(-566668)]]io=18835357064926-(-557924)signed=number(-285261-(-313252))module=export(signed,io)float=flush[module]rawnew=rawequal[float]char=-394105+14027779972349 float=package[length[-708829+708834]]io=number(93897+-66225)export=package[length[-247107+247109]]module=package[length[1035671+-1035668]]signed=module(io,char)flush=export[signed]rawequal=float[flush]getmetatable=rawnew[rawequal]getmetatable=getmetatable and 7642761-687606 or 11799217-607243 else getmetatable=393686+4812004 newpath=not increment code=newpath end end else if getmetatable<7749708-(-711235)then if getmetatable<8511184-64167 then yield=package[length[507096+-507094]]gmod=number(-281112-(-309061))i=package[length[-638441+638444]]increment=118764+12390392956573 tmpfile=i(gmod,increment)new=yield[tmpfile]char=signed[new]new=nil rawnew=char==new getmetatable=-964596+8555300 else getmetatable=11996898-(-621013)new=nil char=nil yield=nil io=nil end else if getmetatable<-976624+9455577 then rawequal=nil getmetatable=16575463-125584 package[length[-532099-(-532104)]]=rawnew else wrap=number(-718700+746231)onload=package[length[853715+-853714]]load=9824377078852-(-1019290)pcall=package[length[334769-334767]]hooks=package[length[928195+-928192]]newpath=hooks(wrap,load)code=pcall[newpath]newpath=number(-495672+523237)rename=onload[code]code=package[length[93254+-93252]]pcall=package[length[980046+-980043]]wrap=-575772+33920747325135 hooks=pcall(newpath,wrap)onload=code[hooks]getmetatable=-358481+9519624 size=rename[onload]lines=yield==size gmod=lines end end end end end end end else if getmetatable<12651081-(-120258)then if getmetatable<11108842-364154 then if getmetatable<9886226-179295 then if getmetatable<439092+8678039 then if getmetatable<-49986+8851743 then if getmetatable<784546+7934336 then if getmetatable<-778840+9473726 then if getmetatable<340464+8283392 then rawnew={}getmetatable=raise[number(-639281+666875)]else getmetatable=6455332-853312 io=nil module=nil signed=nil end else increment=lines newpath=increment getmetatable=183055+14466649 gmod[increment]=newpath increment=nil end else if getmetatable<8569565-(-209939)then export=package[length[366657-366653]]signed=package[length[49707-49705]]new=number(251499-223921)io=package[length[-61514+61517]]yield=20106634897622-(-867260)char=io(new,yield)new=473812+13288847433048 module=signed[char]flush=export[module]module=package[length[654139-654137]]char=number(-442689+470504)signed=package[length[331567-331564]]getmetatable=7800645-133288 io=signed(char,new)export=module[io]float=flush==export rawnew=float else getmetatable=tmpfile getmetatable=i and 14625383-554308 or 968556+1796622 end end else if getmetatable<324941+8754634 then if getmetatable<441946+8508569 then if getmetatable<9695987-846367 then getmetatable=372930+7091443 i=nil gmod=nil tmpfile=nil else getmetatable=io getmetatable=rawnew and 9800784-(-373488)or 15821632-(-253534)end else yield,tmpfile=char(new,yield)getmetatable=yield and-87830+11055467 or 279686+255559 end else if getmetatable<9665618-570455 then float=number(813287+-785747)rawnew=raise[float]yield=2371468114412-374172 signed=number(-86221+114264)io=-669708+21370261888747 flush=package[length[1000946-1000944]]export=package[length[976249-976246]]module=export(signed,io)float=flush[module]getmetatable=rawnew[float]rawnew=getmetatable()rawnew=package[length[-921609+921610]]signed=number(-741346-(-768852))flush=package[length[212572-212570]]io=3139811243474-520220 export=package[length[-223879-(-223882)]]new=number(-639262+667237)module=export(signed,io)float=flush[module]getmetatable=rawnew[float]rawnew=number(-808450-(-836049))float=true rawnew=getmetatable[rawnew]rawnew=rawnew(getmetatable,float)rawnew=number(-774917+802962)getmetatable=raise[rawnew]export=package[length[999175+-999171]]signed=package[length[605279-605277]]io=package[length[739260+-739257]]char=io(new,yield)module=signed[char]flush=export[module]module=package[length[822272-822270]]new=-544218+15940049562328 char=number(435798-408230)signed=package[length[692109-692106]]io=signed(char,new)export=module[io]float=flush[export]export=package[length[758337-758335]]io=number(990107+-962547)char=10245420513701-(-104701)module=package[length[-1041035-(-1041038)]]signed=module(io,char)flush=export[signed]export=number(273341-245566)rawnew=float[flush]export=rawnew[export]export={export(rawnew)}flush=export[266173-266171]float=export[499569-499568]export=getmetatable getmetatable=10280611-(-695387)else signed=package[length[693793+-693792]]float=getmetatable char=package[length[694724-694722]]tmpfile=7533506500619-19031 i=number(-1047502+1075414)new=package[length[53978+-53975]]yield=new(i,tmpfile)i=-771031+27699224950329 io=char[yield]module=signed[io]io=package[length[61785-61783]]char=package[length[175513+-175510]]yield=number(-255174-(-283135))new=char(yield,i)signed=io[new]export=module[signed]flush=not export rawnew=flush getmetatable=flush and 12467132-848641 or 765519+9389018 end end end else if getmetatable<643144+8571352 then if getmetatable<9765058-563445 then if getmetatable<9962011-788645 then if getmetatable<9589673-443888 then value=-287326+287327 getmetatable=2166529-377518 tonumber=package[bytecode]upvaluejoin=tonumber[value]package[bytecode]=upvaluejoin else getmetatable=increment getmetatable=319377+7151846 i=gmod end else getmetatable=size getmetatable=lines and-624204+11340932 or-518460+2095886 end else if getmetatable<9535655-324221 then flush=package[length[-834147-(-834151)]]module=package[length[-703742-(-703744)]]new=18781324632725-327788 char=number(43973-16383)signed=package[length[459937+-459934]]io=signed(char,new)export=module[io]float=flush[export]io=number(-911751-(-939620))export=package[length[937670-937668]]char=-137994+27480838556934 module=package[length[422511-422508]]getmetatable=7241887-(-630976)signed=module(io,char)flush=export[signed]rawequal=float~=flush rawnew=rawequal else getmetatable=rawnew and 1662831-122296 or-344579+5808507 end end else if getmetatable<9755822-163116 then if getmetatable<-356878+9915454 then if getmetatable<9143447-(-169558)then getmetatable=lines getmetatable=-707522+13213757 else new=number(850784+-822770)flush=number(199334+-171324)char=21816935935633-165602 getmetatable=package[length[-578015-(-578016)]]float=raise[flush]io=number(69947-41887)export=package[length[88326-88324]]module=package[length[-871514+871517]]signed=module(io,char)module=number(-1047022+1074902)flush=export[signed]export=-82492-(-82492)rawequal=float[flush]yield=23845591753667-(-395164)flush=-577306-(-577306)float=rawequal(flush,export)export=raise[module]signed=package[length[-355256+355258]]io=package[length[895340+-895337]]char=io(new,yield)module=signed[char]char=number(481763-454047)new=1661079535946-(-246203)flush=export[module]rawnew=number(924851-896970)rawnew=getmetatable[rawnew]module=package[length[-406506-(-406508)]]signed=package[length[-636220-(-636223)]]io=signed(char,new)export=module[io]rawequal=flush[export]rawnew=rawnew(getmetatable,float,rawequal)char=31166446934543-(-482978)yield=21183606660840-(-837536)rawequal=number(811476+-783936)rawnew=raise[rawequal]float=package[length[-833267+833269]]module=number(-1008857-(-1036634))signed=-313422+19546210560987 io=number(-2401-(-30181))flush=package[length[-667324-(-667327)]]export=flush(module,signed)rawequal=float[export]getmetatable=rawnew[rawequal]rawequal=245920-245919 flush=number(-42877+70887)rawnew=getmetatable(rawequal)getmetatable=package[length[177993+-177992]]float=raise[flush]export=package[length[-879633+879635]]module=package[length[322511-322508]]signed=module(io,char)flush=export[signed]export=192504-192504 module=number(251878-223998)rawequal=float[flush]flush=160280+-160280 new=number(-176521+204353)float=rawequal(flush,export)rawnew=number(138770-111215)export=raise[module]signed=package[length[620035-620033]]io=package[length[-354221+354224]]char=io(new,yield)module=signed[char]new=26291728931220-485825 char=number(-416072+443893)rawnew=getmetatable[rawnew]flush=export[module]module=package[length[-892355+892357]]signed=package[length[551308-551305]]io=signed(char,new)export=module[io]rawequal=flush[export]rawnew=rawnew(getmetatable,float,rawequal)getmetatable=raise[number(-781278-(-809216))]rawnew={}end else gethook=package[index]path=number(-946356-(-974131))getmetatable=5381986-(-174845)path=gethook[path]path=path(gethook)getinfo=#path gethook=-657955+657956 xpcall=getinfo>=gethook m=xpcall end else if getmetatable<9647848-7634 then i=nil export=double(export)lines=double(lines)lines=-398590+398846 char=nil float=double(float)increment=nil signed=nil io=double(io)yield=double(yield)export=getuservalue()module=double(module)float=nil flush=double(flush)signed=number(70923-43004)gmod=nil gmod={}package[export]=float new=double(new)float=getuservalue()char=number(138463+-110708)tmpfile=nil flush=nil package[float]=flush module=raise[signed]signed=number(314274-286724)flush=module[signed]yield=getuservalue()new=number(-538471+566063)module=getuservalue()package[module]=flush getmetatable=-503661+15153365 io=number(963644-935725)signed=raise[io]io=number(922126-894225)flush=signed[io]io=raise[char]char=number(794987-767160)signed=io[char]char=raise[new]new=number(883665-855647)io=char[new]char=-90346-(-90346)i={}new=getuservalue()tmpfile=getuservalue()increment=-83297+83298 package[new]=char char=-571967-(-571969)package[yield]=char package[tmpfile]=i char={}code=lines i=-238351+238351 lines=-110025-(-110026)pcall=lines lines=-458911+458911 hooks=pcall<lines lines=increment-pcall else float=number(12186+15689)getmetatable=package[length[587558+-587554]]float=getmetatable[float]rawnew={float(getmetatable)}getmetatable=raise[number(-432097-(-459738))]rawnew={program(rawnew)}end end end end else if getmetatable<9412689-(-857341)then if getmetatable<-326861+10374871 then if getmetatable<10682371-781512 then if getmetatable<10103007-210858 then if getmetatable<-343492+10234003 then io=not signed flush=flush+module float=flush<=export float=io and float io=flush>=export io=signed and io float=io or float io=5550878-582176 getmetatable=float and io float=2731087-(-208470)getmetatable=getmetatable or float else char=nil getmetatable=599729+2021970 end else rawnew={}getmetatable=raise[number(41980-14091)]end else if getmetatable<10892123-930705 then new=package[length[764536-764534]]gmod=868076+16150158483060 module=flush yield=package[length[-338301-(-338304)]]tmpfile=number(508040-480287)i=yield(tmpfile,gmod)io=number(-593991-(-621539))io=signed[io]char=new[i]io=io(signed,char)rawnew=not io getmetatable=rawnew and 491125-(-485409)or 791721-17985 else rawequal=number(790166-762291)getmetatable=package[length[-156164-(-156168)]]rawequal=getmetatable[rawequal]rawnew={rawequal(getmetatable)}getmetatable=raise[number(-1032642+1060411)]rawnew={program(rawnew)}end end else if getmetatable<-309149+10462930 then if getmetatable<10128261-25640 then if getmetatable<-625735+10689717 then float,signed=flush(export,float)getmetatable=float and-45396+3453252 or 15724966-738246 else code=number(207276+-179438)getmetatable=raise[code]code=number(416600+-389104)raise[code]=getmetatable getmetatable=-651536+7386416 end else increment=2594208333644-(-607596)rawnew=true package[length[173706+-173701]]=rawnew yield=package[length[620086+-620084]]i=package[length[672975+-672972]]gmod=number(-576557+604210)tmpfile=i(gmod,increment)code=-156341+23443783126361 new=yield[tmpfile]increment=number(-50697+78577)onload=number(61582-33632)gmod=raise[increment]lines=package[length[306610-306608]]size=package[length[-942282-(-942285)]]rename=size(onload,code)onload=14181317796676-(-472711)getmetatable=525693+2096006 increment=lines[rename]tmpfile=gmod[increment]increment=package[length[-909162-(-909164)]]rename=number(-382130+409903)lines=package[length[960237+-960234]]size=lines(rename,onload)gmod=increment[size]rename=972543+13835607507499 i=tmpfile[gmod]gmod=package[length[-246808+246810]]size=number(84523+-56624)increment=package[length[487608-487605]]lines=increment(size,rename)tmpfile=gmod[lines]size=number(-971791-(-999573))yield=i[tmpfile]char[new]=yield i=package[length[-385110-(-385116)]]gmod=package[length[1002406+-1002404]]rename=16593386486393-(-893877)increment=package[length[756319+-756316]]lines=increment(size,rename)tmpfile=gmod[lines]size=17801784186665-(-723256)yield=i[tmpfile]tmpfile=package[length[-399932+399934]]gmod=package[length[189726-189723]]lines=number(894572-866887)increment=gmod(lines,size)i=tmpfile[increment]char=nil new=yield[i]yield=number(-401247+429080)yield=new[yield]yield=yield(new)end else if getmetatable<-858566+11016267 then module=package[length[-685686-(-685690)]]i=-32105+33416157133361 io=package[length[138181+-138179]]yield=number(-817135-(-845111))char=package[length[-738519+738522]]new=char(yield,i)signed=io[new]getmetatable=475247+11143244 export=module[signed]yield=-274669+24419904249176 new=number(766467-738861)signed=package[length[323656-323654]]io=package[length[-228546-(-228549)]]char=io(new,yield)module=signed[char]flush=export==module rawnew=flush else signed=nil module=nil getmetatable=-420968+2926665 end end end else if getmetatable<11558682-959187 then if getmetatable<-348244+10868221 then if getmetatable<11241736-763385 then if getmetatable<10547960-91761 then io=number(-218060-(-245679))float=package[length[177222+-177221]]char=252498+3150886775657 export=package[length[-938335+938337]]module=package[length[941686+-941683]]signed=module(io,char)flush=export[signed]signed=number(185090-157431)rawequal=float[flush]io=966016+33364009959216 flush=package[length[211577-211575]]export=package[length[-923948-(-923951)]]module=export(signed,io)float=flush[module]rawnew=rawequal[float]char=64344+18941943146268 float=package[length[58171-58166]]export=package[length[947095+-947093]]module=package[length[178418+-178415]]io=number(-564765+592484)signed=module(io,char)flush=export[signed]rawequal=float[flush]getmetatable=rawnew[rawequal]getmetatable=getmetatable and 17267541-1019154 or 16649200-591644 else xpcall=972457+29886380466099 randomseed=number(774318+-746738)parse=package[float]index=package[export]randomseed=count[randomseed]array=nil arr=number(787243-759234)m=index(arr,xpcall)setmetatable=parse[m]randomseed=randomseed(count,setmetatable)getmetatable=255713+8062181 count=nil setlocal=randomseed end else lines=937191+10296821990867 i=package[length[-966212-(-966214)]]increment=number(155652+-127997)tmpfile=package[length[-317777-(-317780)]]gmod=tmpfile(increment,lines)yield=i[gmod]getmetatable=1252820-(-481985)new=signed[yield]yield=nil char=new==yield rawnew=char end else if getmetatable<10025428-(-552097)then arr=package[float]tostring=18704884691587-(-814979)path=-488501+21216869636812 xpcall=package[export]gethook=number(-596204+624122)getinfo=xpcall(gethook,path)getmetatable=16149976-1028201 m=arr[getinfo]index=count[m]arr=package[popen]getinfo=package[float]directory=number(-989771+1017288)gethook=package[export]path=gethook(directory,tostring)xpcall=getinfo[path]m=arr[xpcall]parse=index==m randomseed=parse else code=not gmod getmetatable=316808+15982149 tmpfile=code end end else if getmetatable<-974517+11666688 then if getmetatable<139617+10480766 then setmetatable=getmetatable array=coroutine gethook=8908113391476-(-90304)getinfo=number(-620960-(-648496))m=package[float]parse=number(970011+-942463)parse=count[parse]arr=package[export]xpcall=arr(getinfo,gethook)index=m[xpcall]parse=parse(count,index)randomseed=parse getmetatable=parse and 461061+10112705 or 14315547-(-806228)else m=getuservalue()getinfo=number(728479-700931)package[m]=index arr=getmetatable next=number(578341-550355)require=24911685660030-114734 index=m count=parse xpcall=package[index]getinfo=xpcall[getinfo]path=package[float]directory=package[export]tostring=directory(next,require)gethook=path[tostring]getinfo=getinfo(xpcall,gethook)m=getinfo getmetatable=getinfo and-1002524+10582759 or-122527+5679358 end else if getmetatable<11458470-741179 then i=nil getmetatable=595080+-59835 gmod=nil tmpfile=nil else signed=nil getmetatable=15281033-281793 io=nil module=nil end end end end end else if getmetatable<-476112+12177609 then if getmetatable<-169882+11345121 then if getmetatable<-875287+11851163 then if getmetatable<218015+10557394 then if getmetatable<-730736+11495070 then if getmetatable<10882826-126164 then m=double(m)setmetatable=nil getmetatable=17524569-857963 else rawequal=rawset[-114459-(-114460)]getmetatable=not rawequal getmetatable=getmetatable and 10743849-(-408964)or-107604+11872330 end else rename=package[float]size=rename getmetatable=rename and 3214082-(-551406)or 14274116-22283 end else if getmetatable<197205+10774861 then i=yield gmod=i~=signed getmetatable=gmod and 12094249-(-224365)or-672815+6818806 else getmetatable=11784156-808158 io=nil signed=nil module=nil end end else if getmetatable<12140653-992105 then if getmetatable<11587877-517983 then if getmetatable<-359777+11335927 then flush,signed=export(float,flush)getmetatable=flush and 9414699-(-498042)or 853139+1018507 else i=package[length[80372+-80371]]gmod=package[length[36519-36517]]size=number(-280382-(-307901))rename=459787+1141666479624 io=getmetatable increment=package[length[581463-581460]]lines=increment(size,rename)tmpfile=gmod[lines]yield=i[tmpfile]size=30248149657388-1011751 lines=number(-274143+301659)tmpfile=package[length[191932+-191930]]gmod=package[length[-370819+370822]]increment=gmod(lines,size)i=tmpfile[increment]new=yield[i]char=not new getmetatable=char and-365579+2980790 or 10655413-(-476837)rawnew=char end else i=package[length[316598+-316596]]increment=number(689244+-661589)lines=10296822886969-(-41089)tmpfile=package[length[-553685-(-553688)]]gmod=tmpfile(increment,lines)getmetatable=1802200-(-813011)yield=i[gmod]new=signed[yield]yield=nil char=new==yield rawnew=char end else if getmetatable<213138+10939533 then getmetatable=-637320+12967936 else rawnew={}getmetatable=raise[number(404020+-376171)]end end end else if getmetatable<10873995-(-730765)then if getmetatable<11539970-71422 then if getmetatable<10615405-(-584657)then if getmetatable<112990+11078975 then yield,tmpfile=char(new,yield)getmetatable=yield and 7279625-737853 or 342630+7121743 else getmetatable=132190+8423124 end else new=29562752453614-398888 getmetatable=3567026-(-318769)flush=package[length[-789802+789806]]char=number(-908177+936019)module=package[length[-1038699-(-1038701)]]signed=package[length[-242946+242949]]io=signed(char,new)export=module[io]float=flush[export]io=number(360880-333394)export=package[length[720039-720037]]char=336570+6938071919076 module=package[length[934540-934537]]signed=module(io,char)flush=export[signed]rawequal=float~=flush rawnew=rawequal end else if getmetatable<12020170-423464 then getmetatable=rawnew and 7809286-380425 or-260356+16710235 else increment=getmetatable onload=package[length[-216223-(-216224)]]pcall=package[length[-960606+960608]]wrap=number(-37443+65211)hooks=package[length[388073-388070]]load=18895765720039-256392 newpath=hooks(wrap,load)code=pcall[newpath]rename=onload[code]code=package[length[-224519-(-224521)]]wrap=30160998720943-257747 newpath=number(720930-693209)pcall=package[length[-458229-(-458232)]]hooks=pcall(newpath,wrap)onload=code[hooks]size=rename[onload]hooks=number(566169-538658)onload=package[length[-118395+118397]]newpath=4571485914484-(-492252)code=package[length[-458313-(-458316)]]pcall=code(hooks,newpath)rename=onload[pcall]lines=size==rename gmod=lines getmetatable=lines and 9400093-238950 or-747826+9228450 end end else if getmetatable<12050619-412640 then if getmetatable<10788107-(-817806)then float=package[length[213888+-213885]]flush=145524+-145523 rawequal=float~=flush getmetatable=rawequal and 15783600-836630 or-450024+1372665 else getmetatable=float getmetatable=rawnew and-810488+7425038 or 530364-(-199331)end else if getmetatable<-270319+11948893 then getmetatable=true getmetatable=14883280-312653 else lines=5427767416293-347142 yield=number(967636-940044)new=raise[yield]i=package[length[642635+-642633]]tmpfile=package[length[-464888+464891]]increment=number(519036+-491514)gmod=tmpfile(increment,lines)lines=number(-565503-(-593515))yield=i[gmod]char=new[yield]size=-256510+7107049567979 tmpfile=package[length[61965-61963]]gmod=package[length[-96791+96794]]getmetatable=8590769-(-269236)increment=gmod(lines,size)i=tmpfile[increment]size=-610855+34710016102730 yield=signed[i]tmpfile=package[length[-851618+851620]]lines=number(1028838-1001226)gmod=package[length[-100935+100938]]increment=gmod(lines,size)i=tmpfile[increment]new=char(yield,i)rawnew=new end end end end else if getmetatable<-1037910+13360406 then if getmetatable<11740978-(-180007)then if getmetatable<118006+11699406 then if getmetatable<12513829-767415 then if getmetatable<12401565-679862 then tmpfile=number(86830-59197)char=number(92652+-65112)io=raise[char]new=package[length[-944700+944702]]yield=package[length[45698+-45695]]gmod=11889289292938-(-502038)i=yield(tmpfile,gmod)char=new[i]rawnew=io[char]io=rawnew()increment=21469987765483-775646 tmpfile=number(288342+-260386)io=package[length[894004-894000]]new=package[length[314474+-314472]]gmod=700814+22011085223547 yield=package[length[-364057-(-364060)]]i=yield(tmpfile,gmod)char=new[i]rawnew=io[char]tmpfile=number(-522233-(-550191))gmod=888500+29579445380890 new=package[length[-492687+492689]]yield=package[length[948840-948837]]i=yield(tmpfile,gmod)char=new[i]io=number(-850412-(-878464))gmod=number(806592-778633)io=rawnew[io]io=io(rawnew,char)char=package[length[300623+-300619]]yield=package[length[-125622+125624]]i=package[length[579927+-579924]]tmpfile=i(gmod,increment)new=yield[tmpfile]rawnew=char[new]yield=package[length[-320854-(-320856)]]char=number(-237346+265398)increment=22786205944924-877290 gmod=number(-17203-(-45057))i=package[length[857513+-857510]]char=rawnew[char]tmpfile=i(gmod,increment)new=yield[tmpfile]char=char(rawnew,new)yield=not io new=getmetatable rawnew=yield getmetatable=yield and 5233942-(-618068)or 3064065-(-1028781)else gmod=number(1008800-981292)new=number(870916-843376)increment=-700661+21055455319873 char=raise[new]yield=package[length[210684-210682]]i=package[length[-999395-(-999398)]]tmpfile=i(gmod,increment)new=yield[tmpfile]rawnew=char[new]char=rawnew()increment=7724777402883-(-760842)char=package[length[-185754+185759]]gmod=number(55703+-28066)yield=package[length[689994+-689992]]i=package[length[-661396+661399]]tmpfile=i(gmod,increment)new=yield[tmpfile]rawnew=char[new]yield=package[length[79730-79728]]gmod=number(623229-595644)increment=1046527+13863084728632 i=package[length[834215+-834212]]char=number(402015-373963)tmpfile=i(gmod,increment)new=yield[tmpfile]char=rawnew[char]char=char(rawnew,new)new=getmetatable yield=package[length[417280-417274]]getmetatable=yield and 983215+15002639 or 1014494+3984655 rawnew=yield end else float=getuservalue()getmetatable=nil package[float]=getmetatable rawnew=package[length[-990883-(-990884)]]rawequal=nil export=package[length[-991528-(-991530)]]module=package[length[-35754-(-35757)]]char=5401406393136-(-409251)io=number(591411+-563500)signed=module(io,char)flush=export[signed]getmetatable=rawnew[flush]flush=loadlib(14310658-(-116551),{length[-175847+175851];length[-875168+875170];length[1025971+-1025968],float;length[-163003-(-163008)]})rawnew=number(869097-841356)rawnew=getmetatable[rawnew]rawnew=rawnew(getmetatable,flush)package[float]=rawnew getmetatable=raise[number(131995+-104252)]float=double(float)rawnew={}end else if getmetatable<-502298+12352915 then getmetatable=raise[number(-540890-(-568798))]rawnew={}else rawnew=number(409189-381370)rawequal=number(-514698+542717)getmetatable=raise[rawnew]rawnew=getmetatable(rawequal)rawnew={}getmetatable=raise[number(-420248+448108)]end end else if getmetatable<475410+11746090 then if getmetatable<11187666-(-797246)then if getmetatable<223315+11717580 then flush=number(983821+-956229)new=9016242753173-(-967121)float=raise[flush]char=-394848+30362333920666 io=number(-448894+476846)export=package[length[-764161-(-764163)]]module=package[length[-531331-(-531334)]]signed=module(io,char)flush=export[signed]rawnew=float[flush]char=number(895132+-867380)module=package[length[-512507+512509]]signed=package[length[-914175-(-914178)]]io=signed(char,new)export=module[io]flush=rawequal[export]module=package[length[184389-184387]]signed=package[length[-143777+143780]]new=17942291659856-(-795731)char=number(-338040-(-365655))io=signed(char,new)char=1259821337245-1034323 export=module[io]io=number(-488867-(-516348))float=rawnew(flush,export)rawnew=931866-931865 getmetatable=float[rawnew]flush=number(-627117-(-654709))float=getmetatable rawnew=raise[flush]export=package[length[-445346+445348]]module=package[length[-173124-(-173127)]]signed=module(io,char)flush=export[signed]io=number(-180306+207892)char=243720+11657685409068 getmetatable=rawnew[flush]export=package[length[220374+-220372]]module=package[length[-659536-(-659539)]]signed=module(io,char)flush=export[signed]rawnew=getmetatable(float,flush)flush=rawnew rawnew=#flush export=536136-536135 getmetatable=rawnew~=export getmetatable=getmetatable and 7438859-(-260586)or 909709+1170523 else getmetatable=package[length[-915470+915471]]signed=number(-1018377+1045854)io=-76993+33595272505821 flush=package[length[-738661-(-738663)]]export=package[length[1020556-1020553]]new=number(-396083-(-423866))module=export(signed,io)yield=2431138142727-(-764517)float=flush[module]export=number(-947186+975062)flush=raise[export]signed=package[length[894639+-894637]]io=package[length[-481066-(-481069)]]char=io(new,yield)io=10899918277621-(-231390)module=signed[char]export=flush(module)rawequal=float..export rawnew=getmetatable(rawequal)flush=package[length[-60743-(-60745)]]signed=number(-779453+807326)rawequal=rawnew export=package[length[-502211+502214]]module=export(signed,io)float=flush[module]rawnew=rawequal[float]getmetatable=not rawnew getmetatable=getmetatable and 7946848-646361 or 4368076-(-801244)end else getmetatable=number(558534-530517)getmetatable=float[getmetatable]getmetatable=getmetatable(float)getmetatable=-167602+15286139 end else if getmetatable<12419967-102532 then getmetatable=package[length[-966412+966413]]module=33120471788092-(-528898)new=361387+2767362670941 rawequal=package[length[463280+-463278]]export=number(-622310+649800)float=package[length[-615784-(-615787)]]flush=float(export,module)rawnew=rawequal[flush]flush=package[length[-882546-(-882547)]]char=number(745398+-717888)module=package[length[270151-270149]]signed=package[length[342918-342915]]io=signed(char,new)export=module[io]float=flush[export]rawequal=not float getmetatable[rawnew]=rawequal rawnew={}getmetatable=raise[number(-298549+326193)]else i=nil tmpfile=nil getmetatable=8564331-(-487486)gmod=nil end end end else if getmetatable<12466003-(-25714)then if getmetatable<209270+12184580 then if getmetatable<12101907-(-281664)then if getmetatable<11866305-(-473334)then getmetatable=15711638-(-345918)rawequal=nil else rawnew={float}getmetatable=raise[number(1043226+-1015452)]end else code=-566648-(-566648)lines=#gmod increment=lines==code getmetatable=increment and-803230+8348944 or 16455091-293403 end else if getmetatable<300801+12124960 then package[float]=rawnew getmetatable=16191186-320214 else setlocal=-481027+481028 type=bytecode[setlocal]read=getmetatable setlocal=false popen=type==setlocal getmetatable=popen and 1608128-597213 or-337320+5464078 write=popen end end else if getmetatable<12091671-(-572979)then if getmetatable<12175623-(-385618)then increment=342118-342117 gmod+=increment size=82412+-82352 lines=gmod>=size getmetatable=lines and-805922+4463521 or-619787+3349931 else module,char=signed(export,module)getmetatable=module and-427992+1283051 or 385720-384453 end else if getmetatable<12291585-(-468818)then new=package[length[-328742-(-328744)]]tmpfile=number(150748-122694)gmod=23166423262541-998186 yield=package[length[-56675+56678]]i=yield(tmpfile,gmod)char=new[i]io=number(-300554-(-328102))io=signed[io]module=flush io=io(signed,char)rawnew=not io getmetatable=rawnew and 418784+10306118 or 131896+6661353 else rawnew=number(398110+-370065)float=nil getmetatable=raise[rawnew]flush=getmetatable rawnew=package[length[-37377+37378]]getmetatable=1001432+4600588 export=rawnew end end end end end end else if getmetatable<14743276-(-178313)then if getmetatable<14129611-79603 then if getmetatable<13292937-(-183359)then if getmetatable<266535+12756968 then if getmetatable<12740788-(-262672)then if getmetatable<13706010-752008 then if getmetatable<-958895+13858357 then code=12226043382312-259051 onload=number(-843097-(-871155))gmod=package[length[666153-666148]]lines=package[length[881445-881443]]size=package[length[985897-985894]]rename=size(onload,code)getmetatable=641243+3358160 onload=218570+35036418550257 increment=lines[rename]tmpfile=gmod[increment]increment=package[length[77280-77278]]rename=number(53537+-25681)lines=package[length[-464720+464723]]size=lines(rename,onload)gmod=increment[size]i=tmpfile[gmod]tmpfile=number(454131-426298)tmpfile=i[tmpfile]tmpfile=tmpfile(i,rawequal)else flush=package[length[452765+-452764]]char=number(-993849+1021875)module=package[length[-783931-(-783933)]]signed=package[length[6827-6824]]new=4611904009594-(-299753)io=signed(char,new)char=-353731+4709646970452 export=module[io]float=flush[export]export=package[length[-589705-(-589707)]]module=package[length[-533033+533036]]io=number(275998+-248222)signed=module(io,char)flush=export[signed]rawnew=float[flush]getmetatable=not rawnew getmetatable=9292555-202216 end else getmetatable=raise[number(-641174+668853)]lines=number(-974676-(-1002280))pcall=number(787795+-760103)tmpfile=raise[lines]code=raise[pcall]wrap=package[float]load=package[export]popen=32278702835675-724261 bytecode=number(596729+-569235)call=load(bytecode,popen)newpath=wrap[call]wrap=number(-709633-(-737511))wrap=code[wrap]pcall={wrap(code,newpath)}lines=tmpfile(program(pcall))tmpfile={lines()}rawnew={program(tmpfile)}end else if getmetatable<-740824+13744926 then rawnew=number(894946+-866901)getmetatable=raise[rawnew]float=nil rawnew=package[length[282856-282855]]export=rawnew flush=getmetatable getmetatable=-222468+10277369 else export=number(-717924+745949)rawequal=rawset[-829890-(-829891)]rawnew=package[length[-804480-(-804481)]]module=3516621968824-610131 float=package[length[877675-877673]]flush=float(export,module)getmetatable=rawnew[flush]rawnew=true rawequal[getmetatable]=rawnew getmetatable=package[length[910430+-910427]]float=package[length[621398+-621397]]yield=-319477+25398639939112 signed=14470891767137-1026831 module=number(-329367-(-356859))flush=package[length[-489430-(-489432)]]export=flush(module,signed)rawnew=float[export]module=number(701647+-674019)new=number(876738+-849084)float=rawequal getmetatable[rawnew]=float getmetatable=package[length[737746-737742]]export=raise[module]rawequal=nil signed=package[length[714582+-714581]]io=package[length[200077-200075]]char=io(new,yield)new=22497756309724-(-868368)module=signed[char]flush=export[module]module=package[length[-416785-(-416786)]]signed=package[length[723454-723452]]char=number(807790-779970)io=signed(char,new)export=module[io]float=flush[export]rawnew=getmetatable(float)rawnew={}getmetatable=raise[number(-546366-(-573996))]end end else if getmetatable<12795742-(-532049)then if getmetatable<517729+12714436 then if getmetatable<-184413+13290392 then getmetatable=407183+-407182 float=268488+-268428 rawequal+=getmetatable rawnew=rawequal>=float getmetatable=rawnew and-955990+12108347 or-200914+14743181 else rawnew={}getmetatable=raise[number(370271-342406)]end else call=-335182+335183 pcall=getuservalue()newpath=-967142-(-967242)hooks=number(-798130-(-826049))bytecode=-472185-(-472187)package[pcall]=size rawnew=raise[hooks]hooks=number(-153535+181436)getmetatable=rawnew[hooks]hooks=-316076+316077 rawnew=getmetatable(hooks,newpath)hooks=getuservalue()wrap=941243-940988 upvaluejoin=498286-498286 newpath=-383248-(-383248)package[hooks]=rawnew getmetatable=package[io]rawnew=getmetatable(newpath,wrap)newpath=getuservalue()package[newpath]=rawnew popen=number(301032-273465)getmetatable=package[io]wrap=-45041-(-45042)load=package[hooks]rawnew=getmetatable(wrap,load)wrap=getuservalue()package[wrap]=rawnew rawnew=package[io]load=rawnew(call,bytecode)bytecode=number(-932204-(-959882))rawnew=-320186+320187 getmetatable=load==rawnew rawnew=number(573589-546043)load=getuservalue()tonumber=844159-834159 package[load]=getmetatable read=raise[popen]type=package[io]setlocal={type(upvaluejoin,tonumber)}popen=read(program(setlocal))read=number(-145003-(-172681))write=popen..read getmetatable=number(156798-129180)getmetatable=increment[getmetatable]call=bytecode..write getmetatable=getmetatable(increment,rawnew,call)call=getuservalue()package[call]=getmetatable bytecode=number(613150-585311)write=c(7122551-299089,{io;pcall,yield;flush;float;lines,load,call;hooks;wrap;newpath;new})rawnew=raise[bytecode]bytecode={rawnew(write)}getmetatable={program(bytecode)}bytecode=getmetatable getmetatable=package[load]getmetatable=getmetatable and 4161566-666499 or-946463+15249442 end else if getmetatable<844462+12588880 then rawequal=nil getmetatable=raise[number(415686-387742)]rawnew={}else tmpfile=package[length[578603-578601]]lines=number(382385-354411)size=859983304204-480380 gmod=package[length[-31431-(-31434)]]getmetatable=7690523-786154 increment=gmod(lines,size)i=tmpfile[increment]yield=io[i]i=nil new=yield==i rawnew=new end end end else if getmetatable<12853774-(-828450)then if getmetatable<-607022+14212527 then if getmetatable<14271208-750944 then if getmetatable<13562173-79090 then gmod=number(384557+-356802)tmpfile=raise[gmod]gmod=number(767828-740204)getmetatable=3728801-526311 i=tmpfile[gmod]new=i else flush=857619+-857578 float=package[length[223461-223459]]rawequal=float*flush float=-844332+27398449714177 rawnew=rawequal+float rawequal=172486+35184371916346 getmetatable=rawnew%rawequal float=-970085-(-970086)package[length[39804+-39802]]=getmetatable getmetatable=734791+187850 rawequal=package[length[812214-812211]]rawnew=rawequal~=float end else getmetatable=true getmetatable=getmetatable and 422395+14182921 or 14218477-(-352150)end else if getmetatable<14031263-396069 then float=package[length[-429716+429718]]flush=package[length[703891-703888]]rawequal=float==flush rawnew=rawequal getmetatable=11734692-225609 else newpath=-582260+34476962488618 wrap=161206+7803349096571 rename=number(-864640-(-892180))size=raise[rename]hooks=number(991061+-963304)onload=package[length[-417416+417418]]code=package[length[163223-163220]]pcall=code(hooks,newpath)rename=onload[pcall]lines=size[rename]size=lines()newpath=number(-511218+539183)rename=package[length[157255+-157250]]code=package[length[702624-702622]]pcall=package[length[-84414+84417]]hooks=pcall(newpath,wrap)onload=code[hooks]size=rename[onload]hooks=number(87342-59361)onload=package[length[-866840-(-866842)]]code=package[length[756077-756074]]newpath=15535775924409-(-908169)pcall=code(hooks,newpath)getmetatable=913387+-240997 rename=onload[pcall]lines=size[rename]size=number(967383+-939550)size=lines[size]size=size(lines,signed)end end else if getmetatable<746522+13082180 then if getmetatable<310430+13440328 then if getmetatable<12885211-(-841980)then io=nil getmetatable=11327924-351926 char=false signed=nil package[length[-193319-(-193324)]]=char module=nil else rawnew={}getmetatable=raise[number(333772-305929)]end else rawequal=rawset[-706292+706293]getmetatable=not rawequal getmetatable=getmetatable and 5854748-432304 or 12471821-(-532035)end else if getmetatable<13791400-(-194260)then float=number(794135-766595)rawnew=raise[float]flush=package[length[947719-947717]]io=100587+22090511966019 signed=number(-579383-(-607298))export=package[length[242595+-242592]]module=export(signed,io)float=flush[module]getmetatable=rawnew[float]rawnew=getmetatable()io=615676+7735036225813 signed=number(-270487-(-298058))rawnew=package[length[558226-558225]]flush=package[length[-370678+370680]]export=package[length[-556920-(-556923)]]module=export(signed,io)float=flush[module]getmetatable=rawnew[float]rawnew=number(240170+-212571)float=true rawnew=getmetatable[rawnew]rawnew=rawnew(getmetatable,float)rawnew=number(761472+-733427)getmetatable=raise[rawnew]float=package[length[890590-890586]]export=package[length[514113-514111]]module=package[length[779623+-779620]]io=number(-971378-(-998878))char=268+17577214238445 signed=module(io,char)flush=export[signed]export=number(1012636+-984861)rawnew=float[flush]export=rawnew[export]export={export(rawnew)}flush=export[-773549-(-773551)]float=export[84995-84994]export=getmetatable getmetatable=-213115+2718812 else rawnew=number(-358444+386282)getmetatable=raise[rawnew]rawequal=number(460347+-432851)rawnew=raise[rawequal]rawequal=number(421743-394247)raise[rawequal]=getmetatable rawequal=number(656455+-628617)raise[rawequal]=rawnew rawequal=package[length[345946-345945]]getmetatable=451552+14433260 float=rawequal()end end end end else if getmetatable<-969637+15508292 then if getmetatable<14224147-(-38830)then if getmetatable<13277906-(-822787)then if getmetatable<958135+13117396 then if getmetatable<-120175+14190570 then char=number(714132-686443)flush=package[length[674296-674295]]module=package[length[786645-786643]]new=-568837+4793174963900 signed=package[length[-78674+78677]]io=signed(char,new)char=705498+12079973454367 export=module[io]float=flush[export]io=number(-802683-(-830249))export=package[length[158962-158960]]module=package[length[-218815+218818]]signed=module(io,char)flush=export[signed]rawnew=float[flush]getmetatable=not rawnew getmetatable=-558486+14423794 else rawnew={}getmetatable=raise[number(-308865+336389)]end else char=number(-499907-(-527468))flush=package[length[9959+-9958]]module=package[length[90432-90430]]signed=package[length[839612+-839609]]new=27503625125573-(-504642)io=signed(char,new)export=module[io]float=flush[export]export=package[length[310537+-310535]]char=25992+8639258602030 io=number(542484-514940)module=package[length[648872-648869]]signed=module(io,char)flush=export[signed]rawnew=float[flush]getmetatable=not rawnew getmetatable=-536434+4163056 end else if getmetatable<-715216+14970014 then package[float]=size getmetatable=package[float]getmetatable=getmetatable and-696986+8062025 or-801786+12467544 else getmetatable=-405352+9190043 gmod=not new i=gmod end end else if getmetatable<15393463-982900 then if getmetatable<206851+14123627 then if getmetatable<-341816+14635983 then rawnew={}getmetatable=raise[number(225451-197617)]else read=package[float]getmetatable=read and 5969781-190169 or 810472-(-671232)write=read end else io=498406+28795786107259 signed=number(1033473+-1005916)rawequal=rawset[-797989+797990]flush=package[length[533475+-533474]]export=package[length[1003674-1003672]]module=export(signed,io)new=number(32391+-4514)float=flush[module]rawnew=rawequal[float]yield=-324112+26524462588495 module=number(-397130-(-424758))export=raise[module]signed=package[length[194131-194130]]io=package[length[-570042+570044]]char=io(new,yield)module=signed[char]new=12807810504591-(-589757)char=number(166669-139148)flush=export[module]module=package[length[53541+-53540]]signed=package[length[-991069-(-991071)]]io=signed(char,new)export=module[io]float=flush[export]getmetatable=rawnew==float getmetatable=getmetatable and 14759676-(-717318)or 8961148-775201 end else if getmetatable<-188242+14661783 then float=package[length[428245+-428244]]char=-448110+20850232999003 io=number(612416-584384)export=package[length[-915694+915696]]module=package[length[94855-94852]]signed=module(io,char)flush=export[signed]io=763095929294-790635 signed=number(286134-258317)rawequal=float[flush]flush=package[length[492609+-492607]]export=package[length[1036741-1036738]]module=export(signed,io)float=flush[module]rawnew=rawequal[float]getmetatable=not rawnew getmetatable=getmetatable and 609302+9385802 or 7905485-534704 else getmetatable=false rawnew=number(-488756-(-516690))raise[rawnew]=getmetatable getmetatable=7348596-(-716055)end end end else if getmetatable<15388350-714992 then if getmetatable<81328+14519680 then if getmetatable<15056805-459503 then if getmetatable<14032856-(-526355)then flush=number(989844+-962304)char=31912114613013-749833 float=raise[flush]export=package[length[-737252-(-737254)]]module=package[length[597080-597077]]io=number(-353463+381222)signed=module(io,char)char=number(-235704+263587)new=5400587963781-(-244813)flush=export[signed]rawnew=float[flush]float=rawnew()flush=package[length[-915559-(-915565)]]getmetatable=306788-223809 module=package[length[-207181+207183]]signed=package[length[56620-56617]]io=signed(char,new)export=module[io]yield=32596017450968-(-453490)float=flush[export]char=15830814386094-(-685341)io=number(521068-493342)export=package[length[-645869-(-645871)]]module=package[length[39648-39645]]signed=module(io,char)new=number(-60729+88410)flush=export[signed]rawnew=float[flush]export=package[length[878105-878100]]float=number(315472-287639)signed=package[length[384124-384122]]float=rawnew[float]io=package[length[471927-471924]]char=io(new,yield)module=signed[char]flush=export[module]float=float(rawnew,flush)else getmetatable=key(2050496-(-876883),{export})rename={getmetatable()}rawnew={program(rename)}getmetatable=raise[number(329286-301333)]end else increment=package[length[513962-513960]]onload=29152824967439-232456 lines=package[length[-300137+300140]]rename=number(557076+-529194)size=lines(rename,onload)tmpfile=number(687282+-659703)rename=number(-778797-(-806694))tmpfile=rawequal[tmpfile]onload=-525751+7364010677020 gmod=increment[size]tmpfile=tmpfile(rawequal,gmod)increment=package[length[815215-815213]]lines=package[length[1045415-1045412]]size=lines(rename,onload)gmod=increment[size]i=tmpfile[gmod]increment=package[length[161248-161246]]new=i tmpfile=number(-84104-(-111683))rename=number(-1005123+1033127)lines=package[length[-492021+492024]]onload=11768037405428-(-762483)wrap=number(429319+-401810)size=lines(rename,onload)tmpfile=rawequal[tmpfile]rename=number(119214+-91503)gmod=increment[size]tmpfile=tmpfile(rawequal,gmod)increment=package[length[133732+-133730]]onload=-778103+11530432722032 lines=package[length[826828+-826825]]size=lines(rename,onload)gmod=increment[size]load=9344824861714-(-634093)i=tmpfile[gmod]tmpfile=getmetatable yield=i lines=number(-868248-(-896064))increment=raise[lines]onload=package[length[-410912-(-410913)]]pcall=package[length[624287-624285]]hooks=package[length[229811+-229808]]newpath=hooks(wrap,load)code=pcall[newpath]rename=onload[code]code=package[length[414286-414284]]wrap=18748058937264-394646 pcall=package[length[-209398+209401]]newpath=number(851137-823116)hooks=pcall(newpath,wrap)onload=code[hooks]size=rename[onload]lines=increment(size)size=number(128050+-100234)increment=raise[size]size=increment(new)gmod=lines<=size getmetatable=gmod and 12278283-673541 or-693216+8164439 i=gmod end else if getmetatable<15290730-682325 then getmetatable=5127469-855531 else newpath=not hooks lines=lines+pcall increment=lines<=code increment=newpath and increment newpath=lines>=code newpath=hooks and newpath increment=newpath or increment newpath=8340319-(-354712)getmetatable=increment and newpath increment=-813576+8852392 getmetatable=getmetatable or increment end end else if getmetatable<-657369+15529651 then if getmetatable<-420677+15177234 then signed=number(954071+-926532)rawnew=package[length[-286427+286428]]flush=package[length[-156359+156361]]export=package[length[71364-71361]]rawequal=rawset[-482844-(-482845)]io=-813077+19742728817662 module=export(signed,io)float=flush[module]getmetatable=rawnew[float]getmetatable=getmetatable and 166451+6128785 or-985667+6663566 else code=-772938+772944 onload=225698-225697 getmetatable=package[io]rename=getmetatable(onload,code)code=number(-458726+486564)getmetatable=number(789638-761800)raise[getmetatable]=rename onload=raise[code]code=-319356-(-319358)getmetatable=onload>code getmetatable=getmetatable and 660728+872530 or 314429+9763632 end else if getmetatable<899635+13988587 then getmetatable=true getmetatable=getmetatable and 922859+13120831 or 307076+13428073 else rawequal=getuservalue()char=197786+11033508777847 package[rawequal]=rawset[715878-715877]float=package[rawequal]yield=28299627978823-912589 export=package[length[-588721-(-588722)]]module=package[length[398829+-398827]]io=number(644946+-617457)signed=module(io,char)flush=export[signed]module=number(-198680+226308)rawnew=float[flush]export=raise[module]signed=package[length[-28834-(-28835)]]new=number(578079-550166)io=package[length[-644743+644745]]char=io(new,yield)module=signed[char]flush=export[module]module=package[length[878676+-878675]]char=number(514901+-487009)signed=package[length[-681627+681629]]new=2929578346523-803527 io=signed(char,new)export=module[io]float=flush[export]getmetatable=rawnew==float getmetatable=getmetatable and 4825187-(-331270)or 4093451-435055 end end end end end else if getmetatable<15183796-(-366472)then if getmetatable<-995110+16325088 then if getmetatable<-99944+15171611 then if getmetatable<15329272-332507 then if getmetatable<14697059-(-290205)then if getmetatable<15611424-652700 then float=package[length[921023+-921020]]flush=576874-576842 rawequal=float%flush export=package[length[-989087+989091]]new=-441986+441988 i=-487384-(-487397)getmetatable=380103+3844394 io=package[length[133323-133321]]increment=package[length[818028-818025]]gmod=increment-rawequal increment=-731833+731865 tmpfile=gmod/increment yield=i-tmpfile char=new^yield signed=io/char char=-430135+430136 module=export(signed)export=-700424+4295667720 flush=module%export module=-334468-(-334470)export=module^rawequal float=flush/export export=package[length[856241-856237]]io=float%char char=4295928447-961151 signed=io*char module=export(signed)io=715560+-650024 export=package[length[850826-850822]]signed=export(float)i=306102+-305846 rawequal=nil flush=module+signed module=-176203+241739 export=flush%module new=-346951+347207 signed=flush-export module=signed/io io=-869546+869802 flush=nil signed=export%io float=nil char=export-signed io=char/new new=-726926-(-727182)char=module%new yield=module-char new=yield/i export=nil module=nil yield={signed,io;char,new}package[length[-930565-(-930566)]]=yield signed=nil new=nil char=nil io=nil else getmetatable=raise[number(340359-312533)]rawnew={}rawequal=nil end else rawequal=rawset[742113+-742112]getmetatable=not rawequal getmetatable=getmetatable and 411224+12746286 or 15767055-200500 end else if getmetatable<14682626-(-327725)then flush,signed=export(float,flush)getmetatable=flush and 13308291-589927 or 7778203-102628 else getmetatable=package[length[-594520-(-594521)]]flush=false module=number(903392-875700)signed=-146268+27535116758386 float=package[length[836445-836443]]rawnew=number(426901-398928)rawequal=true rawnew=getmetatable[rawnew]export=raise[module]rawnew=rawnew(getmetatable,rawequal,float,flush,export)rawequal=number(460328+-432788)module=number(-353707-(-381537))rawnew=raise[rawequal]float=package[length[-240146+240149]]flush=package[length[725748-725744]]export=flush(module,signed)rawequal=float[export]module=number(574603+-546911)getmetatable=rawnew[rawequal]flush=false rawequal=false rawnew=getmetatable()getmetatable=package[length[-196211+196212]]float=package[length[87427+-87425]]export=raise[module]rawnew=number(-763771+791744)rawnew=getmetatable[rawnew]rawnew=rawnew(getmetatable,rawequal,float,flush,export)rawnew={}getmetatable=raise[number(-153069+180789)]end end else if getmetatable<15449662-268749 then if getmetatable<-686113+15837809 then if getmetatable<16152424-1033391 then getmetatable=not rawequal getmetatable=getmetatable and 744343+3187269 or-108002+2964074 else getmetatable=setmetatable getmetatable=randomseed and 435212+10024839 or 620687+2112882 end else pcall=package[length[837250+-837248]]load=34317101932961-779061 wrap=number(521387+-493603)hooks=package[length[-586165-(-586168)]]newpath=hooks(wrap,load)load=375455+16886397101080 code=pcall[newpath]wrap=number(675833+-647827)onload=io[code]pcall=package[length[-11591-(-11593)]]hooks=package[length[769180+-769177]]newpath=hooks(wrap,load)code=pcall[newpath]rename=onload==code lines=rename getmetatable=-915378+10098604 end else if getmetatable<368018+14845521 then parse=package[float]arr=number(-904146+931760)directory=7280558829031-254121 index=package[export]tostring=-40420+33441481104056 xpcall=1533834603192-157678 path=-752493+25063873325316 m=index(arr,xpcall)require=10438928036253-(-467296)setmetatable=parse[m]value=pcall[setmetatable]index=package[float]xpcall=number(-391553+419267)getinfo=-421003+30728525390960 m=package[export]arr=m(xpcall,getinfo)parse=index[arr]arr=package[float]xpcall=package[export]gethook=number(165461+-137528)getinfo=xpcall(gethook,path)path=number(374670-347114)m=arr[getinfo]module=double(module)xpcall=package[float]getinfo=package[export]gethook=getinfo(path,directory)arr=xpcall[gethook]directory=number(-91115-(-119146))next=-389885+6354284527243 getinfo=package[float]yield=nil gethook=package[export]path=gethook(directory,tostring)xpcall=getinfo[path]tostring=number(806696+-779086)setmetatable=number(238317-210612)gethook=package[float]path=package[export]directory=path(tostring,next)getinfo=gethook[directory]path=package[float]next=number(240278+-212743)directory=package[export]tostring=directory(next,require)gethook=path[tostring]setmetatable=value[setmetatable]path=false array=double(array)index={[m]=arr,[xpcall]=getinfo,[gethook]=path}xpcall=7365334478912-959195 setmetatable=setmetatable(value,parse,index)parse=loadlib(-286034+491744,{count,float,export,load,bytecode})value=number(6302+21422)value=setmetatable[value]value=value(setmetatable,parse)arr=number(-1032439+1060156)parse=package[float]index=package[export]getinfo=20816172355107-(-612282)m=index(arr,xpcall)setmetatable=parse[m]value=pcall[setmetatable]assert=number(-590275+617963)require=636598+7654556079926 xpcall=number(-14171-(-41989))index=package[float]m=package[export]gethook=number(985627+-958075)arr=m(xpcall,getinfo)parse=index[arr]arr=package[float]path=21007799785902-(-183432)xpcall=package[export]getinfo=xpcall(gethook,path)m=arr[getinfo]tostring=-844427+3759749130593 xpcall=package[float]path=number(698056+-670079)getinfo=package[export]directory=-1006466+26112985729793 next=number(748401-720779)gethook=getinfo(path,directory)rawlen=25212041157607-486923 arr=xpcall[gethook]getinfo=package[float]gethook=package[export]directory=number(231690+-203786)path=gethook(directory,tostring)xpcall=getinfo[path]getinfo=package[count]path=package[float]directory=package[export]tostring=directory(next,require)gethook=path[tostring]tostring=package[float]path=true next=package[export]require=next(assert,rawlen)directory=tostring[require]tostring={}setmetatable=number(658667-631153)setmetatable=value[setmetatable]index={[m]=arr,[xpcall]=getinfo,[gethook]=path,[directory]=tostring}xpcall=11293254692344-(-91794)setmetatable=setmetatable(value,parse,index)gethook=number(385326-357798)parse=package[float]arr=number(149721-122065)index=package[export]m=index(arr,xpcall)setmetatable=parse[m]value=pcall[setmetatable]getinfo=169407946923-(-843683)index=package[float]xpcall=number(-1014652+1042603)m=package[export]arr=m(xpcall,getinfo)assert=number(227180-199392)parse=index[arr]directory=914511+528785738919 require=553970+25592658672283 arr=package[float]rawnew={}path=298085+23443825368639 tostring=1703244197876-945371 setmetatable=number(63296+-35591)xpcall=package[export]getinfo=xpcall(gethook,path)path=number(-879064-(-906609))m=arr[getinfo]xpcall=package[float]getinfo=package[export]gethook=getinfo(path,directory)arr=xpcall[gethook]gsub=double(gsub)getinfo=package[float]directory=number(287062+-259489)gethook=package[export]next=-207016+18987978754865 path=gethook(directory,tostring)tostring=number(-898148-(-925902))xpcall=getinfo[path]gethook=package[float]path=package[export]directory=path(tostring,next)getinfo=gethook[directory]path=package[float]directory=package[export]next=number(235474+-207695)tostring=directory(next,require)gethook=path[tostring]path=false index={[m]=arr,[xpcall]=getinfo,[gethook]=path}setmetatable=value[setmetatable]directory=217025+10558415864691 wrap=double(wrap)setmetatable=setmetatable(value,parse,index)value=number(840983+-813259)parse=loadlib(14881750-(-111947),{popen,float;export;load,bytecode})getinfo=714838+12395451215414 arr=number(467910-439861)xpcall=10029628681119-(-747167)isWindows=double(isWindows)value=setmetatable[value]value=value(setmetatable,parse)parse=package[float]index=package[export]m=index(arr,xpcall)setmetatable=parse[m]value=pcall[setmetatable]index=package[float]tostring=749235+14098694433522 require=701701+7099478087652 xpcall=number(230852-203368)gethook=number(-224493-(-252516))m=package[export]arr=m(xpcall,getinfo)setmetatable=number(-851004+878518)parse=index[arr]path=23295873264124-917405 rawget=number(465351+-437628)arr=package[float]xpcall=package[export]next=number(-124296+152298)getinfo=xpcall(gethook,path)setmetatable=value[setmetatable]m=arr[getinfo]xpcall=package[float]path=number(62462+-34839)getinfo=package[export]gethook=getinfo(path,directory)arr=xpcall[gethook]getinfo=package[float]gethook=package[export]directory=number(204339-176597)path=gethook(directory,tostring)xpcall=getinfo[path]getinfo=package[coroutine]path=package[float]directory=package[export]tostring=directory(next,require)gethook=path[tostring]call=nil rawlen=-418352+966703621106 path=true tostring=package[float]next=package[export]require=next(assert,rawlen)directory=tostring[require]require=25263147780565-72673 i=double(i)tostring={}index={[m]=arr;[xpcall]=getinfo;[gethook]=path;[directory]=tostring}getinfo=779247+24344565516377 path=-439837+32913647022587 arr=number(864444+-836760)setmetatable=setmetatable(value,parse,index)parse=package[float]directory=7320856292846-1040541 xpcall=23082497222612-212440 index=package[export]m=index(arr,xpcall)setmetatable=parse[m]xpcall=number(964104-936225)value=pcall[setmetatable]index=package[float]assert=-761706+20782348780855 m=package[export]arr=m(xpcall,getinfo)parse=index[arr]arr=package[float]xpcall=package[export]setmetatable=number(-151889-(-179871))gethook=number(158644+-130809)getinfo=xpcall(gethook,path)m=arr[getinfo]rawlen=784212+18403203066405 tostring=19522527291662-(-424564)path=number(-774440-(-802043))setmetatable=value[setmetatable]xpcall=package[float]getinfo=package[export]gethook=getinfo(path,directory)arr=xpcall[gethook]getinfo=package[float]directory=number(-700476+728222)gethook=package[export]count=double(count)path=gethook(directory,tostring)xpcall=getinfo[path]char=double(char)tostring=number(1057598-1029788)gmod=nil next=-725891+6745518923720 gethook=package[float]path=package[export]directory=path(tostring,next)getinfo=gethook[directory]next=number(-507233-(-535290))path=package[float]directory=package[export]tostring=directory(next,require)dir=400517+25024722080000 gethook=path[tostring]require=number(-545650+573353)directory=package[float]tostring=package[export]increment=nil next=tostring(require,assert)path=directory[next]assert=number(255130-227271)tostring=package[float]next=package[export]require=next(assert,rawlen)directory=tostring[require]require=package[float]tostring=false assert=package[export]rawlen=assert(rawget,dir)next=require[rawlen]require=false index={[m]=arr,[xpcall]=getinfo;[gethook]=path,[directory]=tostring,[next]=require}setmetatable=setmetatable(value,parse,index)parse=package[float]index=package[export]path=671046+32388731960740 arr=number(1025194-997196)xpcall=32508437100768-(-967233)bytecode=double(bytecode)m=index(arr,xpcall)setmetatable=parse[m]getinfo=-338440+12371656818825 value=pcall[setmetatable]index=package[float]next=number(617748-589801)xpcall=number(-981378-(-1008879))m=package[export]arr=m(xpcall,getinfo)parse=index[arr]gethook=number(-833307-(-860839))arr=package[float]xpcall=package[export]getinfo=xpcall(gethook,path)path=number(-589231+616932)m=arr[getinfo]xpcall=package[float]directory=9092103958631-(-172066)getinfo=package[export]dir=576709+1525811803649 gethook=getinfo(path,directory)arr=xpcall[gethook]getinfo=package[float]setlocal=nil tostring=-695430+23902089119744 directory=number(750708-723040)gethook=package[export]path=gethook(directory,tostring)assert=198436+27840162491264 xpcall=getinfo[path]rawlen=7613482120424-321295 path=package[float]require=-876463+6549186898840 getinfo=796694+-796694 setmetatable=number(-970217+998199)directory=package[export]tostring=directory(next,require)require=number(677006-649432)gethook=path[tostring]directory=package[float]tostring=package[export]next=tostring(require,assert)path=directory[next]tostring=package[float]assert=number(950631+-922593)next=package[export]require=next(assert,rawlen)rawget=number(-790505+818305)directory=tostring[require]setmetatable=value[setmetatable]tostring=true require=package[float]assert=package[export]rawlen=assert(rawget,dir)next=require[rawlen]require=false index={[m]=arr,[xpcall]=getinfo;[gethook]=path;[directory]=tostring;[next]=require}setmetatable=setmetatable(value,parse,index)xpcall=32411648999115-(-97321)parse=package[float]require=-664740+21848772725858 index=package[export]gethook=number(459751-431893)arr=number(655533+-627912)m=index(arr,xpcall)setmetatable=parse[m]getinfo=17437860441904-544632 value=pcall[setmetatable]next=10291816927315-458139 index=package[float]m=package[export]xpcall=number(1074184-1046393)arr=m(xpcall,getinfo)path=262186039046-(-985460)setmetatable=number(-859654-(-887359))parse=index[arr]arr=package[float]setmetatable=value[setmetatable]directory=-334003+9453320464869 xpcall=package[export]getinfo=xpcall(gethook,path)m=arr[getinfo]path=number(-594448+622030)getmetatable=raise[number(474472+-446820)]xpcall=package[float]getinfo=package[export]gethook=getinfo(path,directory)directory=number(510310-482407)arr=xpcall[gethook]getinfo=package[float]gethook=package[export]tostring=-806167+17289907367050 path=gethook(directory,tostring)xpcall=getinfo[path]gethook=package[float]tostring=number(995723+-967731)path=package[export]directory=path(tostring,next)getinfo=gethook[directory]path=package[float]directory=package[export]coroutine=double(coroutine)next=number(-647049+674709)tostring=directory(next,require)gethook=path[tostring]path=false index={[m]=arr;[xpcall]=getinfo;[gethook]=path}setmetatable=setmetatable(value,parse,index)value=number(199277-171553)directory=11085573534951-139453 parse=j(9892286-(-869252),{popen,float,export,load;type})value=setmetatable[value]value=value(setmetatable,parse)parse=package[float]path=263777+9510559927019 index=package[export]xpcall=-750526+21245223770723 arr=number(-595125+623067)m=index(arr,xpcall)gethook=number(-947465+974970)setmetatable=parse[m]value=pcall[setmetatable]index=package[float]getinfo=6781584009150-580457 xpcall=number(-161487-(-189433))signed=nil m=package[export]tostring=236797+4105649154682 arr=m(xpcall,getinfo)parse=index[arr]arr=package[float]xpcall=package[export]getinfo=xpcall(gethook,path)m=arr[getinfo]path=number(367953-340090)xpcall=package[float]getinfo=package[export]setmetatable=number(-105030+132735)gethook=getinfo(path,directory)arr=xpcall[gethook]setmetatable=value[setmetatable]getinfo=package[float]gethook=package[export]directory=number(-858765+886245)path=gethook(directory,tostring)xpcall=getinfo[path]getinfo=false index={[m]=arr,[xpcall]=getinfo}setmetatable=setmetatable(value,parse,index)xpcall=221440+16627119144254 value=number(335015-307291)parse=ipairs(16496106-745671,{popen;float;export})value=setmetatable[value]value=value(setmetatable,parse)setmetatable=977001-977000 value=number(-780884+808617)value=newpath[value]value=value(newpath,setmetatable)setmetatable=package[lines]value=number(-894947-(-922548))value=tmpfile[value]value=value(tmpfile,setmetatable)value=number(-595111+622712)getinfo=-665705+12534141910837 setmetatable=package[lines]value=code[value]value=value(code,setmetatable)value=number(-764696+792508)value=tmpfile[value]value=value(tmpfile)arr=number(91291+-63320)parse=package[float]index=package[export]value=number(757818-730011)m=index(arr,xpcall)setmetatable=parse[m]xpcall=number(115422+-87486)flush=double(flush)value=code[value]value=value(code,setmetatable)value=number(735787+-707980)lines=double(lines)load=double(load)index=package[float]m=package[export]arr=m(xpcall,getinfo)parse=index[arr]value=tmpfile[value]newpath=nil getinfo=844670+17756808314062 setmetatable=parse..new value=value(tmpfile,setmetatable)io=nil index=package[float]m=package[export]value=number(235248-207305)xpcall=number(-719127+747022)popen=double(popen)arr=m(xpcall,getinfo)parse=index[arr]type=double(type)setmetatable=pcall[parse]xpcall=number(-216265-(-243816))value=code[value]value=value(code,setmetatable)index=package[float]m=package[export]value=number(-714244-(-741981))value=tmpfile[value]getinfo=26918935373190-(-461681)float=double(float)code=nil arr=m(xpcall,getinfo)parse=index[arr]setmetatable=pcall[parse]value=value(tmpfile,setmetatable)export=double(export)pcall=nil new=nil value=number(642923+-615348)value=tmpfile[value]value=value(tmpfile)tmpfile=nil else rawnew={}getmetatable=raise[number(-184634-(-212247))]end end end else if getmetatable<-846607+16309636 then if getmetatable<15745782-336798 then if getmetatable<15665168-295627 then if getmetatable<709690+14641867 then lines=number(-162292+189826)rename=23675086832163-972563 io=getmetatable i=number(-45258+72850)yield=raise[i]size=24461980587038-763808 tmpfile=package[length[658302+-658300]]gmod=package[length[215788+-215785]]increment=gmod(lines,size)module=flush i=tmpfile[increment]new=yield[i]size=number(-865730-(-893600))gmod=package[length[388623-388621]]increment=package[length[137338+-137335]]lines=increment(size,rename)tmpfile=gmod[lines]size=number(-307789-(-335396))i=signed[tmpfile]gmod=package[length[16862-16860]]increment=package[length[-730914-(-730917)]]rename=27822635523684-666569 lines=increment(size,rename)tmpfile=gmod[lines]yield=new(i,tmpfile)char=not yield rawnew=char getmetatable=char and 667213+8192792 or 11638815-(-52221)else getmetatable=11706780-(-671054)export=nil signed=nil io=nil end else wrap=getuservalue()call=key(660075+2523428,{float,export;module})package[wrap]=call type=package[float]call=table(13642485-629154,{float;export,char,wrap})setlocal=package[export]gsub=179399+7710378234175 isWindows=number(749927-722191)value=setlocal(isWindows,gsub)popen=type[value]bytecode=yield[popen]type=number(869524+-841832)popen=getuservalue()coroutine=18374025185023-337299 array=number(-411132+438902)package[popen]=bytecode bytecode=raise[type]value=package[float]isWindows=package[export]type=number(2300+25707)type=bytecode[type]gsub=isWindows(array,coroutine)setlocal=value[gsub]type=type(bytecode,setlocal)bytecode=getuservalue()package[bytecode]=type count=569980+28948840464940 getmetatable=-629632+4683309 coroutine=number(905050-877383)setlocal=number(-72504+100196)type=raise[setlocal]isWindows=package[float]gsub=package[export]array=gsub(coroutine,count)setlocal=number(-349063+377070)value=isWindows[array]array=number(944875-916995)setlocal=type[setlocal]index=7779276482914-678716 setlocal=setlocal(type,value)type=getuservalue()gsub=number(-651434+679479)package[type]=setlocal value=nil setlocal=nil parse=number(1038210-1010379)isWindows=getuservalue()package[isWindows]=value value=raise[gsub]gsub=raise[array]count=package[float]array=number(811920-784341)array=gsub[array]randomseed=package[export]setmetatable=randomseed(parse,index)coroutine=count[setmetatable]count=number(970380-942901)array=array(gsub,coroutine)count=array[count]count={count(array)}coroutine=count[299075-299073]gsub=count[314893+-314892]end else if getmetatable<15603315-144138 then flush=package[length[-115454-(-115460)]]float=flush==rawequal rawnew=float getmetatable=9005619-533398 else rawequal=package[length[-744768+744769]]flush=package[length[1029215+-1029213]]signed=number(-335229+362756)char=number(-404573-(-432132))new=-1034857+8106499774759 export=package[length[142251+-142248]]io=7562983489667-(-904510)module=export(signed,io)float=flush[module]rawnew=rawequal[float]export=number(-305693-(-333321))flush=raise[export]module=package[length[-408487-(-408489)]]signed=package[length[752547-752544]]io=signed(char,new)export=module[io]io=number(509885-481991)float=flush[export]char=868802+24720721341237 export=package[length[-368874+368876]]module=package[length[204007+-204004]]signed=module(io,char)flush=export[signed]rawequal=float[flush]getmetatable=rawnew==rawequal getmetatable=getmetatable and 14971378-446050 or 4086+8060565 end end else if getmetatable<614150+14862193 then if getmetatable<16430659-960447 then rawequal=package[length[-92935-(-92936)]]rawnew=#rawequal rawequal=-962030+962030 getmetatable=rawnew==rawequal getmetatable=getmetatable and-584956+14103849 or 4836444-611947 else yield=27503624766841-(-863374)new=number(-262360-(-289921))export=package[length[-626142-(-626143)]]signed=package[length[-108333-(-108335)]]io=package[length[-484067+484070]]char=io(new,yield)module=signed[char]flush=export[module]module=package[length[254581-254579]]new=8639258905206-277184 char=number(315617-288073)signed=package[length[224768-224765]]io=signed(char,new)export=module[io]float=flush[export]rawnew=not float getmetatable=rawnew and 16314242-763865 or 4343079-716457 end else if getmetatable<15060222-(-431185)then rawnew=number(-77444+105495)getmetatable=rawequal raise[rawnew]=getmetatable getmetatable=7969299-(-216648)else rawequal=rawset[695962-695961]getmetatable=not rawequal getmetatable=getmetatable and 473428+9419637 or-1016392+15080928 end end end end else if getmetatable<16730123-637885 then if getmetatable<838270+15097006 then if getmetatable<15502131-(-255826)then if getmetatable<15103769-(-585897)then if getmetatable<15013942-(-538595)then rawequal=nil getmetatable=raise[number(-92724+120414)]rawnew={}else rawequal=nil char=number(566699+-538974)float=getuservalue()getmetatable=nil package[float]=getmetatable flush=package[length[-432355+432356]]module=package[length[177900+-177898]]signed=package[length[-607627+607630]]new=8983802454223-626808 io=signed(char,new)export=module[io]rawnew=flush[export]export=package[length[-297897+297899]]module=package[length[469674-469671]]char=17245088325099-818829 io=number(620694+-592979)signed=module(io,char)flush=export[signed]getmetatable=rawnew[flush]rawnew=number(-87686-(-115427))flush=c(-798721+5532346,{length[24133-24129];length[1022347+-1022345],length[-248705-(-248708)];float,length[-560678-(-560683)]})rawnew=getmetatable[rawnew]rawnew=rawnew(getmetatable,flush)package[float]=rawnew rawnew={}getmetatable=raise[number(-1018075-(-1045968))]float=double(float)end else io=21882215663995-(-1007186)rawnew=package[length[-385643+385644]]flush=package[length[-569717-(-569719)]]export=package[length[-17941-(-17944)]]rawequal=rawset[-694393-(-694394)]signed=number(52752-24987)module=export(signed,io)io=443198+8289933478870 signed=number(20695-(-7222))float=flush[module]getmetatable=rawnew[float]flush=package[length[-663803-(-663805)]]export=package[length[-978277+978280]]module=export(signed,io)rawnew=number(-87822-(-115355))rawnew=getmetatable[rawnew]float=flush[module]rawnew=rawnew(getmetatable,float)float=rawnew getmetatable=float and 11540384-(-667034)or 14289743-(-828794)end else if getmetatable<15442387-(-322060)then getmetatable=char getmetatable=576594+11152658 else call=double(call)load=double(load)pcall=double(pcall)getmetatable=-1070+166336 wrap=double(wrap)hooks=double(hooks)newpath=double(newpath)bytecode=nil end end else if getmetatable<-1017430+17067824 then if getmetatable<15757589-(-268825)then if getmetatable<-11957+15974374 then rawnew=-461225+11503923 float=number(496080+-468276)flush=771271+10348294 rawequal=float^flush getmetatable=rawnew-rawequal rawnew=number(-602237+630031)rawequal=getmetatable getmetatable=rawnew/rawequal rawnew={getmetatable}getmetatable=raise[number(-486408-(-513926))]else getmetatable=new getmetatable=rawnew and 1880941-(-426441)or 450982+1517590 end else flush=package[length[985849-985848]]module=package[length[124175-124173]]char=number(-468405+495998)new=242948+25297341102335 signed=package[length[-34220-(-34223)]]io=signed(char,new)export=module[io]float=flush[export]export=package[length[-959275+959277]]char=33249118836188-661858 io=number(1013495-985640)module=package[length[468347-468344]]signed=module(io,char)flush=export[signed]rawequal=float[flush]getmetatable=rawequal and 9934239-722871 or-755298+8628161 rawnew=rawequal end else if getmetatable<17117430-1042656 then getmetatable=-346286+5462422 else io=getmetatable rename=-237662+1141667177073 i=package[length[848801-848800]]size=number(-993678-(-1021197))gmod=package[length[-493961-(-493963)]]increment=package[length[317512+-317509]]lines=increment(size,rename)tmpfile=gmod[lines]yield=i[tmpfile]tmpfile=package[length[-478936+478938]]size=30248147813646-(-831991)lines=number(394996-367480)gmod=package[length[705622-705619]]increment=gmod(lines,size)i=tmpfile[increment]new=yield[i]char=not new rawnew=char getmetatable=char and 1152309-(-582496)or 910235+9574277 end end end else if getmetatable<16141481-(-157870)then if getmetatable<818291+15439817 then if getmetatable<-852910+17096540 then if getmetatable<372518+15810308 then code=#gmod lines=181507+-181506 increment=flush(lines,code)lines=signed(gmod,increment)increment=nil code=package[tmpfile]newpath=827509+-827508 hooks=lines-newpath pcall=io(hooks)code[lines]=pcall lines=nil getmetatable=12937972-547157 else parse,index=value(setmetatable,parse)getmetatable=parse and 10798647-178119 or 2177183-(-851893)end else getmetatable=764725-764725 i=12147181700639-733191 rawequal=getmetatable module=package[length[-887431+887432]]io=package[length[21279-21277]]yield=number(-499639+527453)char=package[length[-414581-(-414584)]]new=char(yield,i)signed=io[new]yield=24608976988628-261393 export=module[signed]new=number(972087+-944196)signed=package[length[415552+-415550]]io=package[length[-329637+329640]]char=io(new,yield)module=signed[char]flush=export[module]float=not flush getmetatable=float and-26992+7694349 or 126290+8600101 rawnew=float end else if getmetatable<15301724-(-995611)then value=-346058+24270066562031 bytecode=number(-637632+665660)call=raise[bytecode]tonumber=27348696993372-793757 popen=package[float]type=package[export]upvaluejoin=number(310572+-282940)setlocal=type(upvaluejoin,tonumber)bytecode=popen[setlocal]wrap=call[bytecode]tonumber=-373118+32255636450346 popen=package[float]upvaluejoin=number(1934+26001)type=package[export]setlocal=type(upvaluejoin,tonumber)bytecode=popen[setlocal]call=wrap(bytecode,io)popen=number(-191123+219151)bytecode=raise[popen]type=package[float]setlocal=package[export]tonumber=number(3037-(-24660))upvaluejoin=setlocal(tonumber,value)setupvalue=211062+10467051002516 popen=type[upvaluejoin]tonumber=number(85467-57543)wrap=bytecode[popen]type=package[float]value=12418191110803-(-615427)setlocal=package[export]upvaluejoin=setlocal(tonumber,value)popen=type[upvaluejoin]bytecode=wrap(popen,call)wrap=getuservalue()tonumber=number(521618-493883)value=32121080765789-926448 package[wrap]=bytecode bytecode=package[wrap]type=package[float]setlocal=package[export]upvaluejoin=setlocal(tonumber,value)gsub=number(991192+-963381)popen=type[upvaluejoin]upvaluejoin=number(323345+-295335)setlocal=raise[upvaluejoin]tonumber=package[float]value=package[export]isWindows=value(gsub,setupvalue)upvaluejoin=tonumber[isWindows]type=setlocal[upvaluejoin]upvaluejoin=76208.5-76208 tonumber=631749+-631748.5 setupvalue=1039303+32029704052347 value=919199+26598896871875 setlocal=type(upvaluejoin,tonumber)bytecode[popen]=setlocal tonumber=number(-266990+294588)gsub=number(-554028-(-582068))bytecode=package[wrap]type=package[float]setlocal=package[export]upvaluejoin=setlocal(tonumber,value)popen=type[upvaluejoin]upvaluejoin=number(-360705-(-388293))setlocal=raise[upvaluejoin]tonumber=package[float]value=package[export]isWindows=value(gsub,setupvalue)value=89282-89232 upvaluejoin=tonumber[isWindows]tonumber=-546967-(-547017)type=setlocal[upvaluejoin]upvaluejoin=258378+-258328 gsub=number(-644267+672095)setlocal=type(upvaluejoin,tonumber,value)bytecode[popen]=setlocal bytecode=package[wrap]type=package[float]tonumber=number(-16701+44467)value=6795395220143-(-838061)setlocal=package[export]upvaluejoin=setlocal(tonumber,value)popen=type[upvaluejoin]value=-54829+25739999773951 type=.2 bytecode[popen]=type tonumber=number(-763843-(-791666))bytecode=package[wrap]type=package[float]setlocal=package[export]upvaluejoin=setlocal(tonumber,value)popen=type[upvaluejoin]setupvalue=5790878775986-(-446422)upvaluejoin=number(-228630-(-256328))setlocal=raise[upvaluejoin]tonumber=package[float]value=package[export]isWindows=value(gsub,setupvalue)upvaluejoin=tonumber[isWindows]type=setlocal[upvaluejoin]upvaluejoin=-939531+939531.5 tonumber=718180-718180 isWindows=92948+-92948 value=.05 setlocal=type(upvaluejoin,tonumber,value,isWindows)setupvalue=734302+22869609388 bytecode[popen]=setlocal bytecode=package[wrap]type=package[float]setlocal=package[export]value=942801+30280531137603 tonumber=number(-515856-(-543341))gsub=number(-682555-(-710171))upvaluejoin=setlocal(tonumber,value)popen=type[upvaluejoin]upvaluejoin=number(96175+-68477)setlocal=raise[upvaluejoin]tonumber=package[float]value=package[export]isWindows=value(gsub,setupvalue)upvaluejoin=tonumber[isWindows]tonumber=-999285-(-999330)isWindows=946311+-946266 type=setlocal[upvaluejoin]upvaluejoin=-240934-(-240934)value=-473523+473523 setlocal=type(upvaluejoin,tonumber,value,isWindows)bytecode[popen]=setlocal bytecode=package[wrap]type=package[float]tonumber=number(-8157+36089)setupvalue=10856712186302-(-141825)value=24696881375597-1031297 setlocal=package[export]upvaluejoin=setlocal(tonumber,value)popen=type[upvaluejoin]setlocal=package[float]value=number(222181+-194598)isWindows=30296234520492-194705 upvaluejoin=package[export]tonumber=upvaluejoin(value,isWindows)type=setlocal[tonumber]value=22654320826445-683800 tonumber=number(-685652-(-713410))bytecode[popen]=type bytecode=package[wrap]type=package[float]setlocal=package[export]upvaluejoin=setlocal(tonumber,value)value=number(313539-285576)popen=type[upvaluejoin]type=.2 bytecode[popen]=type type=number(-334908-(-362936))popen=raise[type]setlocal=package[float]isWindows=-820878+6829410521850 upvaluejoin=package[export]tonumber=upvaluejoin(value,isWindows)type=setlocal[tonumber]gsub=number(756048+-728357)isWindows=58589+32743075436210 bytecode=popen[type]setlocal=package[float]value=number(560235-532633)upvaluejoin=package[export]tonumber=upvaluejoin(value,isWindows)type=setlocal[tonumber]setlocal=package[wrap]popen=bytecode(type,setlocal)value=-560835+21001316922614 type=package[float]setlocal=package[export]tonumber=number(969198+-941578)upvaluejoin=setlocal(tonumber,value)bytecode=type[upvaluejoin]upvaluejoin=number(866974-839002)setlocal=raise[upvaluejoin]tonumber=package[float]value=package[export]isWindows=value(gsub,setupvalue)upvaluejoin=tonumber[isWindows]type=setlocal[upvaluejoin]upvaluejoin=-183020+183020 tonumber=131733+-131729 setlocal=type(upvaluejoin,tonumber)popen[bytecode]=setlocal gsub=30444178934173-(-372163)array=25239612606658-(-533799)isWindows=number(-908656-(-936452))setlocal=number(838987+-810959)type=raise[setlocal]upvaluejoin=package[float]tonumber=package[export]value=tonumber(isWindows,gsub)isWindows=number(-811646-(-839431))setlocal=upvaluejoin[value]setupvalue=number(-664559+692268)gsub=834635+11466729724048 bytecode=type[setlocal]upvaluejoin=package[float]tonumber=package[export]value=tonumber(isWindows,gsub)setlocal=upvaluejoin[value]upvaluejoin=package[wrap]type=bytecode(setlocal,upvaluejoin)setlocal=package[float]upvaluejoin=package[export]isWindows=-108221+9579107547177 value=number(-151730-(-179381))tonumber=upvaluejoin(value,isWindows)bytecode=setlocal[tonumber]tonumber=number(940647-913059)upvaluejoin=raise[tonumber]value=package[float]isWindows=package[export]gsub=isWindows(setupvalue,array)tonumber=value[gsub]value=-56655+56705 setlocal=upvaluejoin[tonumber]isWindows=427835-427785 tonumber=554565-554515 setupvalue=number(-302747+330347)upvaluejoin=setlocal(tonumber,value,isWindows)type[bytecode]=upvaluejoin setlocal=package[float]upvaluejoin=package[export]isWindows=24564868358829-(-18945)value=number(864705-836857)tonumber=upvaluejoin(value,isWindows)value=number(-920946+948844)array=24631052645376-640819 bytecode=setlocal[tonumber]setlocal=.8 isWindows=17609232159330-(-331173)type[bytecode]=setlocal setlocal=package[float]upvaluejoin=package[export]tonumber=upvaluejoin(value,isWindows)bytecode=setlocal[tonumber]tonumber=number(-357659+385357)upvaluejoin=raise[tonumber]value=package[float]isWindows=package[export]gsub=isWindows(setupvalue,array)tonumber=value[gsub]setlocal=upvaluejoin[tonumber]isWindows=.2 tonumber=.2 value=-644381-(-644381)gsub=131638+-131638 array=481604+32405595840942 upvaluejoin=setlocal(tonumber,value,isWindows,gsub)type[bytecode]=upvaluejoin setlocal=package[float]setupvalue=number(44008-16400)upvaluejoin=package[export]value=number(782941+-755280)isWindows=18572021363560-(-781920)tonumber=upvaluejoin(value,isWindows)bytecode=setlocal[tonumber]tonumber=number(248117+-220419)upvaluejoin=raise[tonumber]value=package[float]isWindows=package[export]gsub=isWindows(setupvalue,array)tonumber=value[gsub]value=-381664+381664 setlocal=upvaluejoin[tonumber]tonumber=.6 gsub=-78362-(-78362)isWindows=.6 upvaluejoin=setlocal(tonumber,value,isWindows,gsub)type[bytecode]=upvaluejoin setlocal=package[float]setupvalue=24569920281791-(-151538)upvaluejoin=package[export]gsub=94883+31603593643737 isWindows=7082794534893-(-967925)value=number(395931-367870)tonumber=upvaluejoin(value,isWindows)bytecode=setlocal[tonumber]isWindows=number(466194-438447)upvaluejoin=package[float]tonumber=package[export]value=tonumber(isWindows,gsub)gsub=number(-702611-(-730246))setlocal=upvaluejoin[value]upvaluejoin=number(962526+-934498)type[bytecode]=setlocal setlocal=raise[upvaluejoin]tonumber=package[float]value=package[export]isWindows=value(gsub,setupvalue)upvaluejoin=tonumber[isWindows]bytecode=setlocal[upvaluejoin]tonumber=package[float]value=package[export]setupvalue=4154058457872-(-1016958)gsub=number(776783+-748852)coroutine=570404+1803739483939 isWindows=value(gsub,setupvalue)gsub=-465445+20689288314823 upvaluejoin=tonumber[isWindows]isWindows=number(-449166+476713)setlocal=bytecode(upvaluejoin,type)upvaluejoin=package[float]tonumber=package[export]array=number(74752-46699)value=tonumber(isWindows,gsub)bytecode=upvaluejoin[value]value=number(-863806-(-891778))tonumber=raise[value]isWindows=package[float]gsub=package[export]setupvalue=gsub(array,coroutine)value=isWindows[setupvalue]setupvalue=number(798757-771204)isWindows=200297-200293 upvaluejoin=tonumber[value]value=-103124+103124 tonumber=upvaluejoin(value,isWindows)array=1203+1090767207752 setlocal[bytecode]=tonumber upvaluejoin=package[lines]value=package[float]isWindows=package[export]gsub=isWindows(setupvalue,array)tonumber=value[gsub]value=242498+-242497 bytecode=upvaluejoin[tonumber]upvaluejoin=number(-1628+29403)coroutine=31156339404722-325382 upvaluejoin=bytecode[upvaluejoin]upvaluejoin=upvaluejoin(bytecode)bytecode=getuservalue()package[bytecode]=upvaluejoin array=number(908047+-880371)tonumber=package[bytecode]upvaluejoin=tonumber[value]isWindows=package[float]gsub=package[export]tonumber=number(812849-785316)tonumber=upvaluejoin[tonumber]setupvalue=gsub(array,coroutine)value=isWindows[setupvalue]tonumber=tonumber(upvaluejoin,value)getmetatable=tonumber and-849943+9979801 or 2693482-(-97512)else getmetatable=lines getmetatable=tmpfile and 13419910-461388 or-276625+3749156 end end else if getmetatable<17528935-974917 then if getmetatable<282216+16034788 then float=number(259464+-231817)flush=16275022-593240 rawequal=float^flush rawnew=3138033-239181 getmetatable=rawnew-rawequal rawnew=number(907222+-879556)rawequal=getmetatable getmetatable=rawnew/rawequal rawnew={getmetatable}getmetatable=raise[number(441147-413437)]else getmetatable=package[length[618440-618433]]getmetatable=getmetatable and 8609916-709646 or 8110501-(-9718)end else if getmetatable<15914408-(-755010)then index,m=value(parse,index)getmetatable=index and-277055+1025249 or 14742140-(-468728)else getmetatable=6403452-(-211098)end end end end end end end end end getmetatable=#bool return program(rawnew)end,function(raise,number)local program=flush(number)local rawset=function(rawset,length,bool,getlocal,rawnew)return getmetatable(raise,{rawset,length;bool;getlocal,rawnew},number,program)end return rawset end,function(raise)local getmetatable,number=-409965+409966,raise[325862+-325861]while number do rawequal[number],getmetatable=rawequal[number]-(-990008+990009),getmetatable+(894152-894151)if rawequal[number]==809553+-809553 then rawequal[number],package[number]=nil,nil end number=raise[getmetatable]end end,function(raise,number)local program=flush(number)local rawset=function(rawset,length,bool,getlocal)return getmetatable(raise,{rawset,length;bool;getlocal},number,program)end return rawset end,function(raise,number)local program=flush(number)local rawset=function(...)return getmetatable(raise,{...},number,program)end return rawset end,function(raise,number)local program=flush(number)local rawset=function(rawset,length)return getmetatable(raise,{rawset,length},number,program)end return rawset end,function(raise)rawequal[raise]=rawequal[raise]-(940774+-940773)if rawequal[raise]==490973-490973 then rawequal[raise],package[raise]=nil,nil end end,function(raise,number)local program=flush(number)local rawset=function(rawset,length,bool,getlocal,rawnew,package,rawequal)return getmetatable(raise,{rawset;length,bool,getlocal;rawnew,package;rawequal},number,program)end return rawset end,function(raise,number)local program=flush(number)local rawset=function(rawset,length,bool,getlocal,rawnew,package)return getmetatable(raise,{rawset,length,bool;getlocal;rawnew;package},number,program)end return rawset end,function(raise,number)local program=flush(number)local rawset=function(rawset)return getmetatable(raise,{rawset},number,program)end return rawset end,{},function(raise)for getmetatable=157765+-157764,#raise,133434-133433 do rawequal[raise[getmetatable]]=rawequal[raise[getmetatable]]+(-607816-(-607817))end if rawset then local getmetatable=rawset(true)local program=bool(getmetatable)program[number(-581485-(-609283))],program[number(22863+4888)],program[number(24045+3564)]=raise,export,function()return 1071160-146242 end return getmetatable else return length({},{[number(891547-863796)]=export,[number(-502253-(-530051))]=raise;[number(-235344+262953)]=function()return 626581-(-298337)end})end end,function(raise,number)local program=flush(number)local rawset=function()return getmetatable(raise,{},number,program)end return rawset end,function()float=(361046-361045)+float rawequal[float]=-552428-(-552429)return float end return(module(4216313-155377,{}))(program(rawnew))end)(getfenv and getfenv()or _ENV,unpack or table[number(950029+-922405)],newproxy,setmetatable,getmetatable,select,{...})end)(...)
