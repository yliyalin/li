return(function(...)local char={"\111\105\114\072\049\108\061\061";"\078\075\119\109\086\054\107\051\100\100\088\061","\077\052\057\108\106\070\057\061","\057\047\068\078";"\110\055\088\073\082\087\073\086";"\088\103\101\043\088\073\101\117\056\103\109\061";"\078\054\069\106\120\108\061\061","\084\098\111\080\106\107\107\075";"\077\107\048\108";"\056\108\061\061";"\055\066\117\087\116\117\061\061","\057\083\053\049\055\099\077\047\088\069\066\118\122\117\061\061","\076\117\061\061";"\071\116\048\077\074\103\100\090\111\084\103\057","\077\054\085\101\073\082\111\081\103\119\079\083\053\108\061\061","\056\110\066\049\105\052\061\061","\119\105\118\086\049\079\069\073\103\053\121\061";"\105\073\103\121\108\104\067\053\098\083\117\069\053\097\088\049\070\108\090\068\099\106\069\107\088\080\090\101\120\066\118\111";"\102\079\120\078\115\075\116\061";"\047\097\107\057\047\108\061\061","\101\070\083\051\068\122\052\061";"\109\080\102\067\053\053\066\116\122\082\107\061","\051\051\074\087\104\052\061\061";"\107\084\109\086\097\119\102\105","\119\099\053\106\088\053\088\107\109\120\111\105\088\069\054\079\122\121\107\061";"\047\110\099\076\086\066\109\061","\055\082\081\047\108\101\118\068\047\053\051\088\089\115\076\061","\101\099\077\082\100\083\070\084\056\069\053\113\119\052\061\061";"\111\071\087\080\087\111\078\085\071\079\112\078\098\122\079\068\055\108\061\061","\057\083\053\049\101\069\070\065\111\099\053\118","\069\111\047\113\119\108\061\061","\074\084\048\089\111\074\106\078\100\069\090\115\076\097\097\043\076\048\075\105\102\066\082\090\075\108\061\061";"\099\043\113\105\082\085\050\051\076\121\088\061";"\066\066\084\082\075\079\057\061","\089\102\121\103\072\071\105\119\069\089\108\087\120\053\067\061","\110\104\070\122\049\118\057\061";"\122\079\071\106\119\053\048\076\097\052\115\061";"\090\069\082\053\102\101\110\090\105\116\115\061","\098\116\102\053\077\108\061\061","\056\104\100\052\069\108\067\061";"\106\056\114\101\082\048\084\086","\100\073\077\049\111\117\061\061";"\115\068\103\111","\102\112\061\061";"\071\057\122\098\110\112\048\115\120\108\061\061";"\101\069\077\084\111\067\111\054\088\073\050\049\117\110\074\113\111\051\050\049\056\103\115\061","\073\066\075\103\100\108\061\061","\056\084\073\049","\066\098\086\121\072\081\080\071\118\120\109\061","\105\051\050\069\105\110\114\077","\076\067\089\084\097\079\103\107";"\113\087\049\057\077\066\109\061";"\052\073\098\103\071\053\049\061","\117\110\101\121\057\083\053\113\119\099\077\068\056\112\061\061","\115\088\116\071\116\077\084\067\103\043\119\054\111\087\113\047\089\050\085\069\121\047\072\065\090\052\061\061","\055\098\071\069\051\074\099\109\113\108\061\061";"\050\054\112\087\083\117\061\061";"\086\048\066\104\086\075\113\047\090\101\047\085\088\112\061\061","\083\098\113\106\051\047\073\122";"\106\111\097\072\105\053\100\082\109\105\108\061";"\088\083\053\049\056\110\053\049\100\051\101\043\100\069\114\077";"\116\113\084\119";"\079\074\090\089\107\055\106\085\122\057\065\061";"\065\049\122\113\103\108\061\061";"\106\104\103\049\106\103\106\066\105\086\077\109\048\082\050\068\085\072\054\109\078\112\061\061","\122\053\116\061","\085\101\106\115\077\112\061\061","\111\073\050\078\117\053\072\101\053\078\072\097\111\049\090\043\100\108\061\061","\099\088\055\107","\047\085\099\114\118\052\061\061";"\071\117\061\061";"\105\080\050\065\087\054\053\084\103\085\047\116";"\110\049\055\102\078\057\088\113\075\098\103\121\072\053\117\061","\080\107\066\074\078\057\116\061";"\090\122\088\106\084\072\069\072\086\073\049\099\082\112\052\061";"\110\104\111\072\081\073\076\120\070\120\077\049","\101\051\119\109\085\049\090\055\122\113\101\114\085\110\054\101\105\049\116\061","\071\077\048\089\116\083\117\099";"\071\085\080\109\078\114\115\100\082\115\065\057\047\052\061\061";"\053\053\066\051\088\083\054\051\088\077\072\090\119\077\053\082\119\052\061\061","\074\118\065\075\097\097\105\113";"\098\086\084\090\052\088\087\051\098\102\065\061","\085\077\050\098\055\121\101\077\100\083\070\121\111\117\061\061","\088\069\053\114\119\110\053\082\119\052\061\061","\076\121\117\117\077\104\065\054\071\088\052\061","\117\083\070\065\056\103\115\082","\100\100\113\052\111\081\075\077\081\110\068\043\086\069\086\101";"\078\113\069\065\043\052\061\061","\072\084\098\083\065\068\065\061";"\071\081\112\101\086\077\068\116\055\088\070\105\088\112\061\061","\116\083\115\115\115\084\088\048\048\067\075\050\115\100\117\068";"\101\100\084\070\113\120\072\048\121\114\053\107\082\065\088\082\088\113\051\087\121\086\102\043\100\081\113\043\052\049\048\056\049\057\074\053\099\084\075\065\097\115\088\097\098\048\055\108\106\073\050\054\119\113\069\057\055\049\103\052\113\076\087\052\113\103\097\054\105\102\121\102\050\109\077\071\083\083\099\084\043\104\073\080\119\067\111\084\121\065\121\115\052\081\055\057\108\069\111\079\088\083\075\106\119\099\071\070\083\086\122\113\090\107\121\043\071\113\100\061";"\099\119\117\082\114\090\053\072\098\100\080\077\080\081\106\118\051\108\067\088\051\117\052\122\085\113\108\116\081\055\101\068\105\110\110\100","\105\110\109\108\105\069\090\100\057\053\072\053\111\067\070\054\111\108\061\061";"\047\066\087\100\104\104\089\067\043\056\068\098\108\052\061\061","\065\052\061\061","\102\105\113\101\117\081\066\049\057\053\114\083\078\043\051\116\066\112\061\061";"\043\067\043\115\050\083\067\061";"\052\087\105\078\108\070\117\083\090\066\057\050","\088\069\053\090\056\103\111\077";"\110\071\070\112\090\067\090\089\067\112\061\061";"\122\098\120\070\080\113\083\102\081\108\061\061";"\089\048\103\048\054\108\066\101\122\078\098\118";"\075\118\107\057\085\105\113\107\074\121\084\056\122\085\052\061","\099\099\107\078\050\069\086\077\065\097\053\101\055\100\108\061","\111\083\120\043\119\099\050\076","\076\077\073\107\065\104\118\117\086\104\086\104\090\117\061\061","\079\075\121\061";"\097\102\120\113\086\098\055\047\103\050\108\061","\070\043\052\080\048\105\108\061";"\055\049\054\043\117\057\116\120\110\110\121\074\100\057\114\084\057\117\061\061";"\088\099\050\043\056\099\108\061";"\075\107\100\102\089\081\048\043\122\080\108\083\078\078\104\085\098\057\068\050\090\108\061\061";"\108\070\070\077\115\108\061\061","\053\089\108\051\104\081\057\061";"\118\057\103\055\085\075\052\061","\109\067\117\103\105\082\117\049\119\106\066\107\119\067\121\083","\056\073\101\103\075\115\067\081\070\100\078\097\081\070\110\113\083\079\065\061";"\066\089\077\122\108\054\057\109\081\075\047\051\050\078\075\055\107\050\048\110\108\117\061\061","\119\110\074\108\100\110\050\097","\117\073\053\054\056\099\101\104\056\073\101\077\088\069\111\043\100\083\053\055\111\110\050\049\105\110\070\084";"\051\104\073\099\099\055\089\089\048\110\079\089\115\114\052\118\101\066\047\068","\056\069\053\107\119\052\061\061","\048\052\049\078\074\108\061\061","\047\121\071\109\069\052\061\061";"\072\087\118\103\087\056\069\089\047\117\106\083\077\106\118\101\083\089\103\098\083\078\079\057\099\052\061\061","\118\078\110\043\114\065\102\072\068\113\080\056\116\047\081\073","\101\069\077\084\111\067\111\054\088\073\050\049\117\083\043\054\056\099\117\061","\114\118\068\122\052\098\051\070\081\073\088\061","\112\050\083\065\089\104\068\082\116\070\089\113\075\106\051\087\102\111\043\112\112\070\051\047\079\069\076\081\076\113\075\116\084\116\071\067\076\120\084\119\099\105\082\053\048\052\061\061","\119\099\070\084\119\110\120\047\111\051\115\061","\088\082\111\050\119\083\121\103\100\121\101\120\110\069\116\074\055\073\109\061","\055\083\074\078\105\099\066\084\111\083\053\121","\077\118\111\047\084\048\074\071\065\053\048\087\119\081\067\061";"\050\077\068\100\047\078\097\121\048\118\069\075\113\097\047\086\054\043\111\108\072\054\066\087\122\075\067\054\080\108\061\061","\088\078\111\109\122\121\074\110\055\099\090\101\102\067\119\051\117\112\061\061";"\089\078\071\100\106\105\073\108\099\117\065\081\076\108\061\061","\088\117\061\061","\086\048\083\057\121\068\081\048\054\052\061\061","\050\043\107\102","\089\115\122\117\088\052\061\061","\109\086\099\071\080\104\088\112\054\112\061\061","\051\098\087\088\114\055\065\061";"\051\120\070\073\100\108\061\061";"\055\099\070\043\111\067\066\120\119\099\070\065\056\083\066\121\117\083\070\084\111\069\077\073","\067\120\101\072\068\052\061\061";"\097\086\087\054\105\103\065\061","\101\083\053\049\057\083\053\118\119\069\077\113\111\117\061\061";"\090\099\110\101\085\069\068\065\085\051\100\061","\085\065\048\114\110\080\052\057\048\114\071\048\082\052\061\061","\099\051\085\090\086\052\118\070\116\097\122\078\078\053\087\097\105\104\085\122\069\088\106\086\089\052\061\061";"\074\098\088\084\065\119\066\072\081\107\120\080\097\089\090\075\098\117\061\061","\100\073\056\066\065\085\120\097\121\088\053\078\079\074\116\120\056\108\061\061";"\116\072\057\120\070\052\061\061";"\065\118\069\104\075\121\055\102\052\086\107\061","\088\106\072\065\105\099\100\049\053\066\121\049\101\057\074\049\105\108\061\061","\118\048\052\099\056\073\112\090\116\097\078\118\118\117\061\061","\054\083\050\121\121\103\110\078\116\057\099\102\111\053\104\104\083\084\119\065\072\108\070\105\054\105\080\100\110\097\117\116\087\074\069\080\118\086\100\061";"\111\106\104\043\111\120\050\049\100\051\104\049";"\114\122\111\076\080\114\108\061";"\101\069\077\118\111\053\050\077\088\073\111\077\088\112\061\061","\089\049\072\066\080\097\079\100\043\106\065\088";"\110\103\074\081\088\048\107\061";"\056\101\106\076\090\119\048\080\057\050\053\076\052\056\077\083\068\099\049\061","\111\083\066\090\111\117\061\061";"\101\071\049\090\112\090\103\117";"\112\112\061\061";"\079\066\052\048\102\101\066\120\055\107\114\085";"\052\115\053\087\105\120\099\118\080\052\061\061","\114\054\067\074\052\052\061\061","\119\054\043\055\100\121\110\049";"\110\065\089\085\057\085\068\049\069\072\084\116\055\107\100\061","\088\108\061\061","\050\077\101\053\105\120\101\115\056\051\101\089\053\082\043\111";"\069\121\047\115\115\057\109\054\069\081\066\101\073\108\061\061","\106\108\061\061","\111\083\053\049\111\083\053\084\119\112\061\061";"\054\085\107\057\107\104\087\117\106\120\105\048\104\102\075\097\075\097\099\076\120\118\056\084\049\050\048\114\065\114\074\112\054\115\107\104\066\112\115\061","\117\083\070\084\056\069\053\113\119\052\061\061";"\079\098\117\050\099\070\052\051\055\097\057\061","\056\052\068\068\087\067\089\120\081\066\087\119\072\052\061\061";"\043\054\097\122\110\118\073\056";"\109\073\072\117\085\077\111\053\102\057\119\050\109\078\050\086";"\049\114\120\080\065\098\087\099\104\108\061\061","\117\069\108\103\055\106\066\079\085\057\115\074\055\069\100\103\101\057\088\061";"\114\048\057\081\077\052\061\061","\071\102\056\073\104\113\079\081\121\110\067\056\073\121\076\074\122\113\116\061";"\077\054\088\086\069\098\088\114\121\117\121\081\069\053\121\061";"\047\088\122\077\107\112\061\061";"\122\069\050\079\057\057\066\083\050\120\101\090\057\067\066\102\111\082\115\061","\108\075\051\077\114\117\061\061";"\053\057\101\054\056\055\115\061";"\071\072\102\074\107\077\081\101","\099\068\069\081\089\079\067\069\084\109\077\088\082\075\065\061";"\121\065\051\051\043\048\110\081\119\065\052\061","\101\099\053\082\119\106\104\068\122\117\061\061";"\088\069\066\084\111\099\070\090","\066\079\057\075";"\049\051\114\100\085\072\109\061";"\117\110\101\121\101\106\104\068\088\099\101\068\119\083\107\061";"\085\086\052\056\107\048\079\074\084\081\119\107\081\117\061\061","\087\084\089\065\069\108\078\109\097\121\084\072";"\075\084\053\068\054\057\088\061","\078\070\052\051\103\052\084\089\121\090\055\106\084\121\108\061","\089\099\112\051\079\122\080\087\122\076\111\079\102\114\082\067\070\077\113\103\074\055\079\076\112\090\117\088\107\043\111\052\085\111\070\102\054\047\120\122\097\055\087\075\057\051\102\050\051\100\050\078\090\085\043\080\086\086\119\057\099\087\074\113\103\049\115\050\118\080\083\067\122\090\098\102\082\073\083\078\100\076\109\052\107\103\081\074\113\072\067\086\076\119\099\069\102\105\098\054\086\056\079\109\057\102\115\066\098\070\082\074","\052\106\047\098\100\052\077\117\121\108\061\061","\082\084\076\061","\098\072\074\052\106\080\049\061","\053\119\070\056\114\118\049\061";"\119\090\113\100\069\074\067\053\112\108\061\061","\117\083\112\107\057\049\111\068\050\120\043\043\105\120\111\110\102\057\066\103","\113\082\108\101\107\110\107\061";"\052\085\080\083\047\098\083\069\109\114\080\083\066\080\072\084\084\076\085\114\050\050\107\080";"\078\079\100\088\081\108\061\061";"\122\101\078\074\115\052\061\061","\082\071\056\066\056\108\061\061","\109\056\067\108\087\052\061\061";"\078\101\101\089\114\107\047\122\067\043\110\120\118\100\107\061";"\057\082\066\077\109\082\053\121\122\110\107\049\102\110\104\053\053\117\061\061","\051\120\070\090\111\051\101\043\119\099\066\047\056\099\057\061";"\076\086\107\090\118\121\109\061","\075\088\085\071\110\056\120\047\052\072\088\061","\067\121\053\098\043\108\061\061","\111\119\104\082\074\069\085\078\054\052\119\112","\053\081\110\104\053\099\052\079\077\112\061\061";"\082\079\084\087\067\052\118\051\057\108\061\061";"\087\079\119\119\047\117\061\061","\056\107\108\117\081\057\097\068\076\073\117\122","\083\051\087\109\104\043\117\061";"\120\119\118\104\086\047\101\069\051\052\061\061";"\043\115\086\122\069\108\061\061";"\057\070\119\065\103\052\061\061";"\109\098\081\099\111\088\109\061";"\121\073\114\087\108\054\047\065","\117\110\101\121\053\099\066\047";"\100\049\073\104\111\104\047\106\065\108\061\061";"\078\097\055\090\100\089\108\061","\085\113\043\054\088\083\050\077\088\052\061\061","\115\078\088\089\122\089\121\099\084\088\056\076\098\052\061\061";"\099\118\052\070\105\079\113\056\097\071\115\061","\115\106\109\120\066\084\117\061";"\072\057\078\066\117\098\113\115\086\105\085\079","\053\121\090\053\055\099\114\050\101\078\043\065\109\083\114\103\111\112\061\061";"\082\105\048\101","\074\047\076\105\104\071\068\111\117\110\088\104\078\108\061\061";"\056\078\067\061";"\116\047\067\066\118\082\074\104\043\109\056\121\065\081\112\061";"\050\106\104\055\056\067\070\117\122\121\114\117\100\082\111\054","\073\104\080\084\072\087\112\106\113\103\049\061";"\055\082\121\107\066\088\114\085\057\117\087\099\079\049\055\075\102\074\066\107","\104\108\054\109\066\080\103\081\108\117\061\061","\111\105\112\077\111\117\061\061";"\108\102\107\105\072\110\106\082\089\065\043\076\101\097\103\072\100\066\106\050\049\086\053\070\077\115\053\071\047\120\073\079\082\106\107\066\122\072\103\052\068\105\056\102\054\098\113\107\104\087\048\068\066\057\056\068\049\114\119\120\078\067\082\053\071\055\050\119\089\109\120\053\054\050\054\106\071\067\069\103\081\113\049\079\114\104\052\104\102\079\107\061";"\082\065\080\079\069\097\085\075\098\115\043\055\110\119\085\102","\080\067\080\090\106\117\061\061","\049\072\084\106\122\099\051\114\083\084\114\066\116\112\061\061","\074\078\086\087\065\108\116\048\071\119\047\122\102\072\107\069";"\065\071\118\103\083\065\048\051\065\065\109\061";"\050\082\119\085\122\069\070\100\119\106\117\120\109\082\050\117\122\112\061\061";"\085\082\069\083","\102\050\104\069\097\118\099\118\076\122\068\082\119\116\067\061";"\053\052\112\107\051\082\081\053\110\100\122\051\102\119\043\099\083\112\061\061";"\085\076\108\115\052\117\061\061","\075\066\119\097\067\085\090\103\049\099\112\061","\102\047\112\077\111\089\076\054\102\112\061\061";"\067\067\107\071\084\086\052\061";"\076\069\055\084\082\056\089\052\051\074\117\061","\070\043\087\052\071\081\088\061","\105\108\054\115\049\075\103\099","\066\108\068\103";"\111\069\114\068\056\103\115\061","\120\047\050\072\074\088\088\061";"\072\050\084\077\079\053\077\052";"\098\102\088\082\105\105\098\116\048\052\061\061","\097\050\081\085\089\082\071\104\067\099\051\051\075\117\087\043","\057\083\053\084\111\067\090\077\122\057\053\083\111\110\074\049";"\117\049\111\118\100\110\120\077";"\048\106\066\116\084\072\116\087\104\069\074\047\082\053\086\057\119\112\061\061";"\107\084\117\067\113\075\116\061","\066\101\104\105\043\084\052\061";"\119\068\097\049","\117\110\101\121\085\110\074\108\119\051\117\061","\117\073\053\049\119\099\070\084\109\077\053\108";"\121\048\066\089\105\112\061\061","\108\065\078\065\052\112\088\061";"\107\065\118\108\066\107\088\061";"\102\076\104\073\052\117\061\061","\070\057\089\116\119\099\101\087\052\120\077\120\085\111\111\113\080\117\121\061";"\088\082\067\083\111\069\104\118\053\049\119\078\111\103\100\074","\074\048\102\119\078\086\115\061","\113\052\061\061","\050\101\077\114\080\112\107\061","\105\077\119\109\085\110\101\067\109\073\077\048\057\069\074\073";"\048\120\084\098\065\071\099\107\054\111\104\086\108\072\052\061","\117\078\054\070\076\098\098\065\055\086\067\086\113\043\080\081\099\071\065\111\072\121\079\043\054\117\061\061","\087\076\073\102\068\081\066\051\081\072\108\082\073\122\079\090\067\047\117\089";"\086\082\052\089\109\113\115\109\114\052\061\061";"\108\116\120\115\117\116\103\070\076\116\053\102","\072\056\075\087\110\114\077\049\072\052\061\061";"\117\073\053\054\056\099\101\078\056\083\074\069\105\110\119\055\111\110\050\049\105\110\070\084","\043\053\097\057\068\053\043\082\097\066\071\069\053\112\061\061","\088\100\071\089\086\049\056\056\106\084\117\061";"\054\116\119\087";"\073\077\105\043\069\086\053\081\112\072\115\108\097\105\119\050","\056\103\051\088\053\052\061\061";"\116\082\074\054\069\052\061\061";"\101\083\104\055\055\055\119\120\055\049\043\105\057\067\111\055\057\112\061\061";"\074\102\083\107\077\077\110\089\054\052\061\061";"\057\073\111\086\122\069\120\084\085\053\119\085\119\055\101\049\100\117\061\061";"\066\076\070\082\053\065\108\108";"\113\118\072\082\106\055\118\086\052\082\050\089\099\078\084\084\048\111\116\055","\043\055\066\050\051\048\055\053\076\106\057\061","","\043\048\067\054\048\112\106\080\074\088\089\075\114\112\061\061";"\053\099\066\090\088\099\053\118\115\067\101\077\119\099\053\113\119\099\053\121\115\117\061\061","\088\069\053\043\111\099\111\054\056\099\057\061";"\090\120\073\089\067\107\110\047\120\112\117\061";"\050\115\055\115\067\090\084\048\067\043\065\105\118\112\061\061";"\056\110\108\100\113\117\061\061","\116\120\107\114\081\072\112\061","\113\047\053\098\120\048\066\078\073\112\061\061";"\056\057\114\111\056\113\100\107\111\106\077\068\085\113\067\061","\075\073\099\054\106\053\098\051\053\108\061\061","\053\077\077\113\105\073\101\047\100\073\052\082\088\069\120\066";"\100\113\066\101\085\078\077\099\110\053\101\098\088\106\115\120\117\051\112\061","\088\055\051\066\086\078\111\074\097\069\117\061";"\111\106\104\043\111\120\101\068\111\083\119\065\111\117\061\061","\089\070\099\068\051\103\053\106\102\101\049\061","\069\111\121\085\069\050\089\073\070\052\067\061","\077\113\109\070\082\065\057\072\116\052\067\080\107\048\065\061";"\106\071\114\108\051\068\079\078\110\113\117\061","\090\076\048\071\047\049\052\061","\047\108\061\061";"\055\077\104\104\056\106\043\085\117\057\121\082\053\053\072\089\117\069\116\061","\069\054\111\107\080\089\078\098\100\052\097\117","\068\051\056\120\043\108\061\061";"\067\073\098\114\099\109\112\061";"\106\116\100\101\117\051\105\090\114\120\116\061","\103\099\070\111\090\120\102\076\119\113\121\061","\075\102\117\069\109\101\102\077\082\099\114\087\050\103\056\106\077\053\117\054\047\112\061\061";"\119\073\109\049","\090\047\118\076\097\108\061\061";"\079\057\055\069\057\077\115\066\077\114\079\106\055\120\050\081";"\089\047\108\057\066\076\109\075\118\112\061\061","\121\119\114\068\100\052\061\061";"\111\069\077\118\111\051\072\118\056\103\043\054\056\110\077\049\122\051\072\118\056\083\120\108\119\052\061\061";"\048\051\097\076\120\056\105\101\048\080\103\083\047\066\106\054\075\099\051\078\087\057\121\061";"\077\115\052\118\068\117\061\061";"\076\077\079\097\115\108\061\061";"\120\121\072\066";"\051\080\047\122\075\052\100\073";"\065\119\119\111","\077\076\103\087\043\122\051\120\069\055\111\101\098\052\061\061","\077\080\082\087\078\056\117\120\116\111\115\061","\057\083\053\065\111\110\050\049\053\099\066\047";"\052\076\101\057\056\048\099\078\107\101\075\110\101\110\107\061";"\120\049\117\102\073\052\061\061","\075\071\049\085\054\065\120\108\118\089\099\119\047\065\048\116\098\082\100\078","\112\122\055\103\084\117\061\061";"\103\114\050\118","\105\083\088\074";"\056\099\053\084","\050\090\116\053\097\114\078\054\080\056\047\047\073\116\109\061","\122\048\056\078\120\065\067\122\113\083\069\077\053\112\083\057\102\108\061\061";"\081\113\066\086\076\052\061\061";"\088\049\074\073\056\051\050\065\109\055\066\118\119\099\111\077";"\084\047\083\065\043\101\052\061","\087\077\111\065\079\117\061\061","\115\117\061\061";"\069\047\051\071\048\082\043\057\114\043\114\110\099\047\052\117\118\112\061\061";"\080\101\100\110\056\111\082\114\081\108\065\061","\083\051\075\120\107\077\074\110";"\088\103\101\118\105\110\074\073";"\066\117\061\061";"\048\114\121\054\106\102\100\116\071\081\111\087\071\079\082\113\104\077\057\052\084\052\061\061","\088\121\116\118\103\086\099\078";"\085\051\050\072";"\111\106\104\043\111\049\077\084\088\106\053\049";"\088\106\072\097\056\077\117\074\088\051\052\108\111\110\111\098","\089\083\083\119\101\076\122\047\071\084\113\057\085\117\061\061";"\066\122\057\089\086\083\115\061";"\108\067\111\052","\101\110\074\120\056\117\061\061";"\119\073\111\109\053\049\111\043\100\110\066\083\117\069\053\066";"\055\099\101\110\109\066\119\057\088\067\104\107\102\110\065\082\105\077\109\061","\053\069\053\113\119\099\070\118\109\112\061\061";"\119\099\066\082\105\108\061\061";"\087\087\107\121\070\103\115\061","\107\099\066\101\106\112\061\061";"\121\114\068\102\067\121\049\061","\085\049\067\066\085\083\112\110\101\116\081\052","\110\084\079\074\049\082\122\083\043\068\057\061";"\079\110\116\122\054\121\080\048\098\078\116\089\084\054\087\083";"\087\097\056\089\104\052\061\061";"\116\070\110\111\054\081\109\061";"\103\089\076\111","\070\072\122\070\101\098\052\122\113\097\103\120\116\088\055\097";"\069\078\120\102\066\122\115\100\052\121\101\056\121\052\061\061";"\053\069\053\113\119\099\070\118\109\108\061\061";"\121\080\112\051\057\112\061\061";"\105\057\090\085\109\055\111\065\111\099\049\083\111\055\053\097\055\108\061\061";"\075\110\057\090\070\052\061\061";"\051\120\070\054\056\069\101\077\122\052\061\061";"\120\052\084\121\113\067\088\086\121\108\061\061","\054\047\056\112\079\104\056\110\108\108\061\061";"\109\084\119\119\112\119\057\061";"\057\056\068\055\073\113\121\067\072\051\083\043\108\048\106\075\076\117\078\087\078\052\061\061","\101\083\053\049\117\083\043\054\056\099\101\118\111\110\107\061";"\107\070\099\086\116\117\061\061","\098\073\075\069\072\055\100\061","\108\048\048\114\069\109\099\089\078\116\069\120\115\053\097\108\099\069\086\074\118\048\066\078\122\067\057\097\078\108\079\083\098\090\057\104\082\081\055\105\077\112\077\081\117\071\083\112\080\071\098\105\089\119\047\114\105\118\085\068\079\100\085\050\097\112\061\061","\048\118\082\083\075\107\056\101\107\098\107\118\085\080\105\057\115\048\108\052","\113\117\097\101\121\079\099\119\073\104\080\120\047\088\054\120\099\103\081\065\113\113\073\072\105\075\097\083\105\052\061\061","\047\079\052\068\100\108\061\061","\119\099\066\047\056\099\057\061","\075\118\083\117\103\113\076\061";"\085\114\116\080\111\052\061\061","\084\070\067\087\108\108\115\085\097\117\061\061";"\111\051\104\118\056\103\115\061","\113\051\101\065\110\087\117\078\090\066\108\061";"\066\073\121\085\110\108\061\061","\079\043\075\072\077\111\083\100\074\098\057\061";"\054\099\089\105\072\072\072\071\086\049\113\086";"\119\069\120\105\105\049\117\049\105\083\112\114\055\083\070\105";"\119\071\081\065\087\074\079\098\102\052\061\061";"\101\099\098\069\073\056\080\102\102\117\061\061","\072\077\106\100\048\121\098\043\114\077\055\080\109\099\052\061","\101\078\108\071\076\105\070\107\043\065\057\061","\119\083\070\118\105\103\050\108\100\110\050\077","\105\057\082\049\074\110\121\054\101\067\107\117\043\081\110\102\120\099\074\117\066\112\061\061","\089\118\070\054\055\066\105\119";"\043\080\121\065";"\105\114\121\075";"\088\073\056\116\112\119\100\121\050\121\087\108\078\100\120\101\067\112\061\061","\111\113\066\085\053\067\114\100\119\051\101\055\105\099\108\108\102\052\061\061","\100\057\049\103\056\051\077\076\050\053\111\072\102\055\101\065\057\099\117\061";"\111\078\119\050\119\055\043\047\119\069\104\115\050\053\067\114\110\112\061\061","\056\072\115\043\054\107\111\057\077\052\052\117\057\048\085\088\113\052\061\061","\081\057\065\121\112\043\050\112\104\069\122\054";"\097\050\090\066\051\053\108\113\100\050\103\090\110\104\119\076\119\119\122\117\090\084\055\047\088\117\111\072\071\074\088\086\103\088\048\074\097\048\078\074\066\085\089\104\105\112\075\098\079\111\107\116\048\117\119\097\085\100\102\055\098\085\098\057\108\115\105\065\109\118\119\112\055\102\109\101\085\105\084\117\073\086\090\073\051\056\105\084\057\119\097\079\047\056\068\070\068\117\061\061","\117\110\101\121\053\099\070\073\111\083\114\077";"\051\119\066\104\101\068\049\061","\056\066\104\069\111\103\050\069\053\067\114\114\057\121\077\073\056\055\052\061";"\073\053\105\103\051\052\061\061","\100\083\043\043\088\112\061\061";"\103\077\087\055\081\112\061\061";"\101\069\077\084\111\067\111\054\088\073\050\049\117\083\043\054\056\099\101\098\111\121\050\065\100\051\050\082","\121\083\103\054\053\117\061\061";"\056\098\047\121\111\089\117\061","\099\087\108\112\052\085\079\047\081\068\074\071\119\049\098\088\079\102\075\111\101\071\101\043\104\112\061\061","\052\079\047\043\049\090\116\061";"\116\052\118\106\113\052\061\061","\090\078\086\118\074\070\111\102\050\118\105\113","\057\057\050\114\055\049\120\109\111\049\074\083\057\121\111\050\110\117\061\061","\117\085\077\115\080\118\117\061";"\110\099\119\113\109\106\072\068\117\110\077\077\109\049\090\073";"\076\057\084\074\055\080\116\061";"\122\099\067\107\111\083\066\050\050\049\104\097\100\082\066\077\053\066\052\061","\107\119\048\108\074\075\081\084\106\068\110\067","\106\119\047\084\101\087\120\048\087\066\047\112\090\106\067\061";"\110\110\085\110\072\088\069\081\098\117\061\061","\047\053\083\087\066\113\108\061","\081\047\101\090\043\120\076\061";"\098\072\050\117\106\086\111\097\105\065\090\075\043\084\084\086\100\047\118\116\087\084\090\117\079\077\118\077\048\055\097\082\114\090\115\080\100\119\055\114\066\065\086\105\053\077\043\074\121\054\056\116","\115\079\084\119\099\108\061\061";"\110\084\076\111\119\085\100\057\115\108\061\061","\049\054\083\098","\109\103\115\049\057\121\101\089\102\053\043\110\088\067\053\082\057\099\112\061";"\051\120\070\065\111\110\107\061";"\101\083\053\049\057\106\104\068\088\099\053\118\119\106\077\078\105\099\066\084\111\083\053\121\057\083\077\073\056\069\066\065";"\119\070\116\075\100\117\061\061","\100\043\117\056\047\105\117\074\056\117\061\061","\085\110\074\082\119\099\066\084\100\083\057\061","\089\113\109\117";"\117\100\120\079\115\079\117\061";"\088\055\121\118\050\053\104\083\117\113\119\082\109\083\111\076\100\108\061\061";"\119\121\066\089\055\069\077\073\105\069\114\057\085\083\050\049\105\057\108\061","\108\097\107\075\122\083\087\118";"\072\112\080\053\065\121\051\120\118\048\078\076\118\109\068\083\078\120\089\121\081\108\061\061","\107\101\074\116","\056\078\115\061","\097\087\114\052\070\080\111\114\118\099\076\061";"\117\103\104\077\100\051\101\077\053\083\077\084\111\099\070\103","\105\111\118\120\088\122\113\111\051\117\061\061","\056\099\070\043\111\106\050\049\088\069\077\084\111\108\061\061","\107\104\073\050\101\105\086\065\074\066\043\102\117\050\085\083\108\079\081\057\048\071\119\083\098\112\061\061","\057\057\077\084\101\057\114\077\050\083\104\121\105\120\112\083\100\057\107\061","\121\084\084\071\052\057\108\057\112\052\061\061";"\049\054\066\053\080\080\086\105\068\116\052\100\083\121\079\055\082\121\076\061";"\074\069\043\090";"\122\052\117\083\047\085\121\054\101\106\088\061";"\121\071\107\102";"\085\106\101\049\088\067\119\077\119\052\061\061";"\111\103\050\120\100\112\061\061","\048\076\119\114\069\068\043\068\077\112\061\061";"\122\080\068\054\053\084\108\061";"\084\121\050\082\116\048\067\061","\053\106\054\118\119\103\119\075\055\066\077\110\050\069\120\065","\055\114\089\049\084\109\097\110\070\067\109\049\115\047\048\076","\109\121\050\121\085\106\104\090\053\069\114\079\050\049\104\120\057\117\061\061";"\102\051\104\108\100\049\054\079\122\057\074\073\050\106\067\118";"\073\087\065\104\100\101\065\061";"\101\082\065\112\104\103\086\099\055\108\107\061","\101\122\054\088\053\048\081\104\101\079\101\052\079\074\076\061","\073\108\090\097\051\052\061\061","\057\113\111\106\105\103\067\103\057\083\070\109\117\069\090\121\105\110\088\061";"\069\075\098\117\115\055\056\072\086\066\069\043\119\120\056\110\108\069\070\109\054\076\110\051\114\118\087\050\074\074\080\065\054\112\100\061";"\109\106\077\052\106\083\073\049\085\107\078\076\105\049\076\049\100\083\065\068\083\067\079\078\108\087\089\109\054\105\112\117";"\111\078\101\113\119\082\066\051\117\053\077\082\088\106\072\110\101\099\076\061","\076\068\057\056\056\116\056\108\087\056\082\109\054\101\116\061","\090\119\067\075\086\101\114\075\085\070\071\049";"\119\099\070\082\119\106\104\054\056\069\088\061";"\053\057\101\054\056\117\061\061","\097\081\084\050\099\108\061\061","\108\108\073\048\079\052\061\061";"\099\047\098\119\052\089\055\099\122\113\083\088\120\110\056\121\068\100\069\119\048\117\061\061","\105\089\121\086\102\071\117\110\055\071\090\084";"\085\077\068\114\073\118\054\053\083\052\061\061","\080\116\113\097\052\118\066\080\072\076\102\056\105\043\082\109\103\068\083\053\101\089\079\051\114\054\068\112\077\114\118\054","\110\072\090\115","\072\098\106\108\086\113\108\061","\101\051\066\120\105\051\072\057\056\083\070\065";"\117\067\069\056\098\102\055\108\111\115\116\061","\112\079\049\117\076\097\052\061";"\101\083\053\049\101\099\053\082\100\083\053\084\111\099\066\084\119\106\109\061","\111\068\112\105\111\100\107\061","\100\083\070\084\100\083\066\049";"\055\073\105\089\043\108\061\061","\110\081\078\084\050\100\100\061","\089\052\048\118\086\052\061\061";"\067\049\108\055\050\052\061\061","\074\105\121\115\104\066\054\054\049\098\114\067\084\067\109\061","\047\109\118\066\113\049\121\061","\111\098\114\084\090\115\087\070\121\083\080\108","\118\052\111\101\052\106\057\067\083\043\117\061","\081\115\052\105\122\098\076\061";"\075\056\077\066\081\100\051\065\070\065\110\051","\057\084\084\082\101\110\052\047","\088\066\101\107\050\049\111\077\105\113\072\086\085\120\072\048","\067\068\120\082\105\074\089\075\067\117\061\061";"\085\110\119\084\056\103\104\077\053\099\043\077\056\110\053\055\111\051\101\049\105\110\074\073\088\108\061\061";"\053\083\066\054\119\067\111\068\088\121\050\076\105\110\114\121";"\082\082\109\074\057\121\077\043\089\073\104\077\047\100\072\067\106\113\051\117\103\117\061\061","\117\073\053\049\119\099\070\084\109\121\101\068\119\083\107\061";"\048\107\107\118\122\097\098\087\088\111\116\081\104\047\065\081\107\082\057\084","\085\065\066\106\073\108\061\061","\052\069\049\061";"\055\109\077\118\082\056\119\106\107\089\052\061","\079\083\099\072\055\106\073\107";"\072\085\049\052\112\117\061\061";"\115\047\102\073\088\081\106\048\099\100\121\061","\109\043\083\084\108\105\109\049\068\089\052\122\090\107\115\061";"\120\078\088\107\076\118\107\074\088\121\108\088\079\076\109\117\071\081\115\061";"\113\110\053\057\043\104\122\072\082\111\121\061";"\049\104\121\089\073\073\086\071\122\084\087\057\048\047\067\061";"\119\115\053\075\070\112\061\061";"\116\076\078\069\057\078\068\097";"\079\085\047\074\100\120\100\061","\088\121\101\120\056\121\043\079\102\067\104\098\088\120\111\115\100\120\121\061","\103\106\071\065\120\050\057\102\105\066\080\073\048\113\117\061";"\120\052\077\105\050\052\061\061";"\056\057\065\113\121\053\101\121\052\083\116\088\104\122\043\065\053\105\066\066\113\079\115\061"}local function signed(signed)return char[signed-(461560+-425279)]end for signed,key in ipairs({{-687796+687797,-531830+532392};{140648+-140647;-412985+413455},{-473631-(-474102);377533+-376971}})do while key[647034-647033]<key[-221236+221238]do char[key[-196557-(-196558)]],char[key[930576-930574]],key[591082-591081],key[701666+-701664]=char[key[1006902+-1006900]],char[key[793453-793452]],key[522930+-522929]+(906350-906349),key[-325511-(-325513)]-(-728397+728398)end end do local signed=function(...)local v0={};return (function(...)v0["69AX"]={...};v0["42BF"]=v0["69AX"][2 -1 ][2] or "" ;v0["AB21"]="";for v4,v5 in ipairs(v0["69AX"][1][2 -1 ]) do v0["95CAC"]=0 -0 ;while true do if (v0["95CAC"]==0) then if (v0["AB21"]~="") then v0["AB21"]=v0["AB21"]   .. v0["42BF"] ;end v0["AB21"]=v0["AB21"]   .. v5 ;break;end end end return v0["AB21"];end)({...});end local key=type local yield={t=329208-329148,h=-503109-(-503118);j=157349-157342;U=355309-355291;P=464620-464557,b=-614838+614853;["\057"]=240215-240195;K=-754578+754589,k=-495943-(-495999),["\050"]=847116-847103;m=831612+-831600;D=749544+-749497;O=1038036+-1037994,X=-236029-(-236057),z=-48297-(-48327);B=-758911-(-758916),v=-303952-(-304002),x=792985+-792932;n=-346067-(-346089),c=48841+-48835,w=940493-940464;Q=1040019-1039957,l=-269590+269638,p=846484-846452;S=823654-823600,F=455227+-455166;W=-222220-(-222251);["\054"]=300562-300521,["\048"]=-876409+876419,I=-13721+13760;["\047"]=-956601-(-956635);r=905978+-905929;J=699692-699635,["\056"]=936281+-936254;C=106915+-106911;M=270268+-270231;R=-876868-(-876919),["\043"]=-846377+846410,["\052"]=154380-154380;i=997140+-997114;N=-241376+241379;d=236800-236776;g=-933076+933131;L=510554+-510514,u=-902563+902579,a=-666536+666579,o=-37913-(-37938),["\049"]=-929171+929223,f=-777656-(-777670);H=-439010-(-439011),q=-340375-(-340410),y=341771-341735,Y=25256+-25254;T=93321+-93275,G=-963295-(-963354),Z=974808+-974763;["\051"]=261566-261543;s=-553429-(-553437);A=-613673+613717,e=-144440-(-144457),E=156151+-156113,["\055"]=250826+-250807;V=-1007423+1007481;["\053"]=882068-882047}local module=math.floor local debug=char local roblox=string.char local seek=string.sub local value=table.insert local loadlib=string.len for char=-1039382+1039383,#debug,-395679+395680 do local path=debug[char]if key(path)=="\115\116\114\105\110\103"then local key=loadlib(path)local c={}local loader=-400872-(-400873)local float=-115323+115323 local onload=-830143-(-830143)while loader<=key do local char=seek(path,loader,loader)local signed=yield[char]if signed then float=float+signed*(-830376+830440)^((417554+-417551)-onload)onload=onload+(-778228-(-778229))if onload==827240+-827236 then onload=-664585-(-664585)local char=module(float/(96204-30668))local signed=module((float%(-380636-(-446172)))/(-23026+23282))local key=float%(81131+-80875)value(c,roblox(char,signed,key))float=-217392+217392 end elseif char=="\061"then value(c,roblox(module(float/(709368-643832))))if loader>=key or seek(path,loader+(55976-55975),loader+(-691406-(-691407)))~="\061"then value(c,roblox(module((float%(132759+-67223))/(986971-986715))))end break end loader=loader+(638522-638521)end debug[char]=signed(c)end end end return(function(char,yield,module,debug,roblox,seek,value,path,upvalueid,index,newpath,obj,key,c,onload,float,loader,readlines,getlocal,gfind,int,getuservalue,loadlib)float,gfind,index,readlines,key,getuservalue,upvalueid,newpath,getlocal,loader,c,path,int,onload,obj,loadlib=function(char)for signed=565530+-565529,#char,697366-697365 do path[char[signed]]=path[char[signed]]+(-970317+970318)end if module then local key=module(true)local yield=roblox(key)yield[signed(-890319+926911)],yield[signed(-306411-(-342744))],yield[signed(1039908-1003250)]=char,onload,function()return-33287+-3114641 end return key else return debug({},{[signed(-983858-(-1020191))]=onload,[signed(-42381+78973)]=char,[signed(-170024+206682)]=function()return-4152408-(-1004480)end})end end,function(char,signed)local yield=float(signed)local module=function(module,debug,roblox,seek)return key(char,{module;debug;roblox;seek},signed,yield)end return module end,function(char,signed)local yield=float(signed)local module=function(module)return key(char,{module},signed,yield)end return module end,function(char,signed)local yield=float(signed)local module=function(module,debug,roblox,seek,value,loadlib)return key(char,{module,debug,roblox;seek,value,loadlib},signed,yield)end return module end,function(key,module,debug,roblox)local next,onload,const,tmpfile,popen,length,getinfo,a,rawget,float,close,hookfunction,count,sethook,pcall,coroutine,export,print,setmetatable,size,i,setvbuf,table,type,factory,newpath,parse,getupvalue,delete,program,rawequal,byte,create,long,call,rawlen,os,idx,path,isWindows,raise,setlocal,iterator,resume,gsub,value,hooks,imports,loader,io,package,increment,ipairs,error,remove,arr,object,hasnext,randomseed while key do if key<7391959-(-1004657)then if key<-140593+4023416 then if key<1403578-(-615942)then if key<1381853-437017 then if key<1169673-610833 then if key<731299-380996 then if key<457394-240675 then if key<383346+-227824 then if key<-93396-(-230426)then key=true key=key and-289695+10889497 or-208711+2898011 else value={}key=char[signed(32934+3691)]end else package=signed(968931+-932400)error=signed(-398682+435258)iterator=char[error]coroutine=19413777848744-128600 ipairs=loadlib[debug[910504-910502]]hasnext=loadlib[debug[991440+-991437]]gsub=18757555887943-818473 setmetatable=hasnext(package,gsub)error=ipairs[setmetatable]key=4484270-(-387087)arr=iterator[error]iterator=arr()error=loadlib[debug[-147721-(-147726)]]hasnext=loadlib[debug[805352+-805350]]setmetatable=loadlib[debug[310472-310469]]gsub=signed(-838373-(-874942))package=setmetatable(gsub,coroutine)ipairs=hasnext[package]gsub=21383052109273-278260 iterator=error[ipairs]package=signed(-116710-(-153292))ipairs=loadlib[debug[-371856-(-371858)]]hasnext=loadlib[debug[-538140+538143]]setmetatable=hasnext(package,gsub)error=ipairs[setmetatable]arr=iterator[error]iterator=signed(-220540+256890)iterator=arr[iterator]iterator=iterator(arr,call)end else if key<1141637-824994 then value={}key=char[signed(558494+-521718)]else loader=nil float=nil key=char[signed(-422122-(-458788))]value={}path=nil end end else if key<794585-324776 then if key<-38615+486646 then if key<478539-44163 then onload=signed(672009+-635442)float=char[onload]loader=path==float value=loader key=loader and 337687+585350 or 698542+8604491 else count=signed(-170319-(-207037))popen=loadlib[loader]idx=12193814968105-(-286469)getupvalue=loadlib[onload]key=6443462-449868 hooks=getupvalue(count,idx)tmpfile=popen[hooks]a=randomseed[tmpfile]rawequal=-743934+8052986505379 increment=signed(741624-704874)popen=loadlib[size]hooks=loadlib[loader]count=loadlib[onload]idx=count(increment,rawequal)getupvalue=hooks[idx]tmpfile=popen[getupvalue]io=a==tmpfile setlocal=io end else key=loadlib[debug[-704714-(-704718)]]value=signed(668065+-631680)value=key[value]value=value(key)key=loadlib[debug[179900+-179895]]value=signed(-755805+792584)value=key[value]value=value(key)key=10451411-(-681540)end else if key<-559309+1098614 then gsub=not i hasnext=gsub key=-919991+9620995 else setmetatable=not hasnext iterator=iterator+ipairs value=iterator<=error value=setmetatable and value setmetatable=iterator>=error setmetatable=hasnext and setmetatable value=setmetatable or value setmetatable=705573+6103153 key=value and setmetatable value=15995033-(-22930)key=key or value end end end else if key<1497752-744763 then if key<1019152+-357497 then if key<1040621+-423151 then if key<91116+472851 then value={}key=char[signed(-211392+248035)]else imports=nil key=457710+7971161 call=nil newpath=nil end else factory=signed(834610+-798006)table=char[factory]factory=signed(917273+-880964)pcall=table[factory]key=550240+11616325 length=pcall end else if key<1286999-546593 then increment=signed(13057+23540)idx=loadlib[tmpfile]key=-384421+13329053 increment=idx[increment]increment=increment(idx)count=#increment idx=384943+-384942 hooks=count>=idx popen=hooks else value={}key=char[signed(826702+-790270)]end end else if key<895043-119212 then if key<-262859-(-1022244)then value=-510858+510860 key=float[value]loader=key key=15755646-539602 else loader=signed(33119-(-3457))value=char[loader]float=loadlib[debug[-955770-(-955772)]]imports=-1033287+3291943438915 call=signed(246090+-209316)onload=loadlib[debug[619957-619954]]newpath=onload(call,imports)loader=float[newpath]onload=signed(-168276+204990)key=value[loader]value=key()value=signed(-868361-(-904673))key=char[value]value=loadlib[debug[-756006+756010]]onload=value[onload]onload={onload(value)}loader=onload[120679-120678]float=onload[-403899+403901]onload=key key=-419311+10773712 end else if key<1422130-550990 then newpath=float factory=7883455038108-128069 imports=signed(515364+-478798)length=loadlib[debug[-392044+392046]]imports=call[imports]getinfo=loadlib[debug[-437738-(-437741)]]table=signed(-705411+741850)pcall=getinfo(table,factory)sethook=length[pcall]imports=imports(call,sethook)value=not imports key=value and 14637479-(-571738)or 12623413-227761 else float=signed(-554122-(-590638))key=9654612-351579 loader=char[float]value=loader end end end end else if key<812479+535827 then if key<336270-(-878035)then if key<-774896+1810461 then if key<704532+295825 then if key<434292+530350 then loadlib[loader]=iterator key=loadlib[loader]key=key and 621703+7728177 or-943938+4311189 else key=char[signed(29817+7011)]value={loader}end else i=-402387+402388 iterator=-313169+313229 factory+=i arr=factory>=iterator key=arr and 436420+5972345 or 456875-259887 end else if key<542054-(-562827)then key=length key=value and 513387+3842012 or-889990+7965637 else gsub=signed(822851-786389)value=loadlib[debug[70862+-70857]]factory=signed(8199+28398)factory=value[factory]factory=factory(value)length=factory size=15328491400593-954800 arr=signed(-607562+644329)i=char[arr]export=signed(69570+-33075)iterator=loadlib[debug[1012214+-1012212]]setmetatable=29326611208487-844751 error=loadlib[debug[-641056+641059]]hasnext=signed(-871815+908590)ipairs=error(hasnext,setmetatable)hasnext=24492979163612-779599 arr=iterator[ipairs]factory=i[arr]arr=751589-751588 iterator=#length i=factory(arr,iterator)value=length[i]getinfo=value ipairs=signed(505878+-469090)arr=loadlib[debug[44279-44277]]iterator=loadlib[debug[333447+-333444]]error=iterator(ipairs,hasnext)iterator=signed(-84090-(-120678))coroutine=32556126485948-(-720252)i=arr[error]factory=getinfo[i]setmetatable=signed(-564966-(-601436))arr=char[iterator]package=4588306212698-204546 error=loadlib[debug[-633899+633901]]ipairs=loadlib[debug[-754034+754037]]hasnext=ipairs(setmetatable,package)iterator=error[hasnext]isWindows=4126787902260-988083 i=arr[iterator]ipairs=signed(973207+-936440)error=char[ipairs]hasnext=loadlib[debug[-575340+575342]]setmetatable=loadlib[debug[-306198-(-306201)]]package=setmetatable(gsub,coroutine)ipairs=hasnext[package]iterator=error[ipairs]coroutine=loadlib[debug[-866324-(-866326)]]print=loadlib[debug[56616-56613]]resume=print(export,isWindows)gsub=coroutine[resume]package=getinfo[gsub]isWindows=2096046138036-(-499996)export=signed(-523467-(-559832))coroutine=loadlib[debug[860581+-860579]]print=loadlib[debug[-579701-(-579704)]]resume=print(export,isWindows)gsub=coroutine[resume]setmetatable=package[gsub]hasnext=-setmetatable setmetatable=-578838-(-578840)ipairs=hasnext/setmetatable coroutine=loadlib[debug[-623325-(-623327)]]export=signed(800328-763884)print=loadlib[debug[356560+-356557]]isWindows=86591+23982741051744 resume=print(export,isWindows)gsub=coroutine[resume]package=getinfo[gsub]isWindows=32180202559205-400476 coroutine=loadlib[debug[994945-994943]]print=loadlib[debug[1041230+-1041227]]export=signed(330842-294020)resume=print(export,isWindows)gsub=coroutine[resume]setmetatable=package[gsub]package=-250603+250605 hasnext=setmetatable/package print=24287717082668-(-304641)error=iterator(ipairs,hasnext)coroutine=signed(-172425-(-208723))setmetatable=loadlib[debug[935441+-935439]]package=loadlib[debug[-103606+103609]]gsub=package(coroutine,print)hasnext=setmetatable[gsub]ipairs=getinfo[hasnext]print=4675769698772-934227 coroutine=signed(403142+-366780)setmetatable=loadlib[debug[-716685-(-716687)]]os=signed(598029-561310)package=loadlib[debug[38286+-38283]]gsub=package(coroutine,print)resume=33830414474664-(-565217)hasnext=setmetatable[gsub]iterator=ipairs[hasnext]setmetatable=signed(253441+-216674)hasnext=char[setmetatable]package=loadlib[debug[929862+-929860]]gsub=loadlib[debug[680385-680382]]print=signed(-877972+914639)coroutine=gsub(print,resume)setmetatable=package[coroutine]ipairs=hasnext[setmetatable]resume=loadlib[debug[-857663+857665]]export=loadlib[debug[-42221-(-42224)]]isWindows=export(os,size)print=resume[isWindows]size=-99382+15024565985162 coroutine=getinfo[print]resume=loadlib[debug[-561184+561186]]os=signed(-428517-(-464873))export=loadlib[debug[778499-778496]]isWindows=export(os,size)os=signed(-175309+211612)print=resume[isWindows]gsub=coroutine[print]package=-gsub gsub=739-737 setmetatable=package/gsub resume=loadlib[debug[380806+-380804]]size=5453717332573-596082 export=loadlib[debug[-733182-(-733185)]]isWindows=export(os,size)print=resume[isWindows]coroutine=getinfo[print]resume=loadlib[debug[14816-14814]]size=31219955235369-(-474784)os=signed(951064-914501)export=loadlib[debug[1016958-1016955]]isWindows=export(os,size)print=resume[isWindows]gsub=coroutine[print]coroutine=374585+-374583 package=gsub/coroutine hasnext={ipairs(setmetatable,package)}arr=i(error,iterator,yield(hasnext))value=factory+arr factory=signed(810588+-774287)pcall=value value=char[factory]i=int(319783+14618651,{debug[-656160+656164],debug[-105024+105026];debug[991673+-991670],call})factory=value(i)table=factory value=not table key=value and-585432+9025016 or 1023264+2293031 end end else if key<-469438+1740444 then if key<2194566-957157 then if key<465202-(-762032)then float=loadlib[debug[-791522-(-791528)]]loader=float==path key=527366+1226326 value=loader else imports=34793589312410-(-340912)path=loadlib[debug[-33944+33945]]call=signed(-939033-(-975409))float=loadlib[debug[513470+-513468]]onload=loadlib[debug[1038767-1038764]]newpath=onload(call,imports)sethook=signed(-975162+1011904)length=1070629386707-407521 onload=signed(987004+-950432)loader=float[newpath]value=path[loader]float=char[onload]newpath=loadlib[debug[994466+-994464]]call=loadlib[debug[-394604-(-394607)]]imports=call(sethook,length)onload=newpath[imports]loader=float[onload]onload=loadlib[debug[-359427-(-359429)]]sethook=1033561+25883334175163 imports=signed(728629-692088)newpath=loadlib[debug[-332949+332952]]call=newpath(imports,sethook)float=onload[call]path=loader[float]key=value==path key=key and-229467+7433422 or-773298+11929913 end else key=11509320-781196 end else if key<862542+470332 then loader=loadlib[debug[268371+-268370]]onload=loadlib[debug[-639991+639993]]sethook=140598+14293089400009 newpath=loadlib[debug[-225932-(-225935)]]imports=signed(-719658+756272)call=newpath(imports,sethook)float=onload[call]path=loader[float]float=loadlib[debug[711521-711519]]onload=loadlib[debug[922382+-922379]]call=signed(736722+-700138)imports=967766+815363947813 newpath=onload(call,imports)loader=float[newpath]value=path[loader]key=not value key=key and 9999105-677973 or 1316018-(-43083)else loader=loadlib[debug[-193186-(-193188)]]key=5954812-871182 float=loadlib[debug[-727428-(-727431)]]path=loader==float value=path end end end else if key<136243+1662134 then if key<636294-(-960514)then if key<1908286-349465 then if key<-81995+1475362 then path=signed(394500-357924)value=char[path]call=-839928+29500947367585 loader=loadlib[debug[-492661+492663]]float=loadlib[debug[-591660-(-591663)]]newpath=signed(-309181+345968)onload=float(newpath,call)path=loader[onload]key=value[path]path=upvalueid(13226379-(-627193),{debug[174704+-174699];debug[-914037-(-914039)],debug[338053+-338050]})value=key(path)value={}key=char[signed(-427457+463831)]else imports=nil key=8610549-483979 length=nil sethook=nil getinfo=nil end else key=956836-956835 loader=-472217+472277 path+=key value=path>=loader key=value and 8268322-454583 or 11243812-136453 end else if key<1729171-(-25083)then key=9175+5467337 path=nil loadlib[debug[976493-976488]]=value else onload=loadlib[debug[1018943+-1018939]]length=signed(-714247-(-750785))getinfo=34348368256870-24812 call=loadlib[debug[707007-707005]]imports=loadlib[debug[-479255+479258]]sethook=imports(length,getinfo)newpath=call[sethook]float=onload[newpath]newpath=loadlib[debug[-869520+869522]]length=32679674398187-100986 key=5459767-(-232446)call=loadlib[debug[527799-527796]]sethook=signed(311300+-274464)imports=call(sethook,length)onload=newpath[imports]loader=float==onload value=loader end end else if key<1803909-(-145738)then if key<1119767-(-784718)then float=loadlib[debug[-430256+430257]]sethook=signed(-89272+126058)length=4033474767283-369245 newpath=loadlib[debug[-912511-(-912513)]]call=loadlib[debug[250189+-250186]]imports=call(sethook,length)sethook=29655769780275-268866 onload=newpath[imports]imports=signed(760452-724042)loader=float[onload]onload=loadlib[debug[151965-151963]]newpath=loadlib[debug[-812955+812958]]call=newpath(imports,sethook)float=onload[call]value=loader[float]key=not value key=868709-108986 else key=true value={key}key=char[signed(-18501+55024)]end else if key<-377347+2377778 then imports=signed(-521660-(-558249))length=signed(-212772-(-249091))onload=loadlib[debug[105360-105358]]sethook=-961487+3523460510263 newpath=loadlib[debug[535681-535678]]call=newpath(imports,sethook)float=onload[call]loader=path[float]imports=signed(898429-861831)onload=loadlib[debug[218253-218251]]newpath=loadlib[debug[142370-142367]]sethook=25847200915843-(-871809)call=newpath(imports,sethook)float=onload[call]value=loader[float]float=loadlib[debug[175718+-175717]]call=loadlib[debug[872517+-872515]]imports=loadlib[debug[-1008120+1008123]]getinfo=-950726+25407569653757 sethook=imports(length,getinfo)newpath=call[sethook]sethook=signed(-654318+690714)onload=float(newpath)newpath=loadlib[debug[-346186-(-346188)]]length=-232882+16352944515952 call=loadlib[debug[-72306-(-72309)]]imports=call(sethook,length)float=newpath[imports]loader=onload[float]key=value~=loader key=key and-80679+3907229 or 314107+1627437 else i=loadlib[debug[790975+-790973]]arr=loadlib[debug[1031134+-1031131]]ipairs=7168909593404-392754 error=signed(74688+-38265)table=signed(-726651-(-763382))iterator=arr(error,ipairs)factory=i[iterator]table=path[table]ipairs=502358+27254236694333 table=table(path,factory)i=loadlib[debug[884587-884585]]coroutine=signed(869875-833255)error=signed(864764+-827939)arr=loadlib[debug[-258050+258053]]iterator=arr(error,ipairs)ipairs=-728749+33890550127698 factory=i[iterator]pcall=table[factory]length=pcall i=loadlib[debug[-591114+591116]]arr=loadlib[debug[83055-83052]]table=signed(245946+-209215)error=signed(-307675-(-344348))iterator=arr(error,ipairs)table=path[table]print=15973040193321-8731 error=signed(272435-236005)factory=i[iterator]table=table(path,factory)ipairs=32577599304404-653202 i=loadlib[debug[143604+-143602]]arr=loadlib[debug[797155-797152]]iterator=arr(error,ipairs)arr=signed(-879954+916274)factory=i[iterator]pcall=table[factory]i=char[arr]table=key getinfo=pcall ipairs=loadlib[debug[629989+-629988]]setmetatable=loadlib[debug[-293747+293749]]package=loadlib[debug[-245281-(-245284)]]gsub=package(coroutine,print)coroutine=4376116235101-(-1047704)hasnext=setmetatable[gsub]gsub=signed(-412523+448980)error=ipairs[hasnext]hasnext=loadlib[debug[307701-307699]]setmetatable=loadlib[debug[-65144+65147]]package=setmetatable(gsub,coroutine)ipairs=hasnext[package]iterator=error[ipairs]arr=i(iterator)iterator=signed(401935+-365615)i=char[iterator]iterator=i(length)factory=arr<=iterator pcall=factory key=factory and 7964370-(-685891)or 997664+10430238 end end end end end else if key<-364066+3372280 then if key<2747364-141059 then if key<2455676-170916 then if key<1298667-(-843818)then if key<2810473-728951 then if key<407955+1631588 then value=signed(846299-809979)sethook=signed(-718673-(-754974))key=char[value]onload=signed(-20992-(-57693))path=loadlib[debug[-117072-(-117076)]]float=char[onload]length=int(13203977-331957,{})imports=char[sethook]sethook={imports(length)}imports=-957317-(-957319)call={yield(sethook)}newpath=call[imports]onload=float(newpath)float=signed(-838140+874594)loader=path(onload,float)path={loader()}value=key(yield(path))path=value loader=loadlib[debug[-251230+251235]]value=loader key=loader and 307793+911795 or-603969+2357661 else i=720101+-720100 factory+=i iterator=874700-874640 arr=factory>=iterator key=arr and 93467+9406815 or-268023+11136470 end else hasnext=not factory table=hasnext key=-630845+4310253 end else if key<2468602-227419 then float=loadlib[debug[-656757-(-656761)]]newpath=loadlib[debug[909545-909543]]length=14725994691938-(-957799)sethook=signed(198330-161793)call=loadlib[debug[-620148-(-620151)]]imports=call(sethook,length)onload=newpath[imports]loader=float[onload]sethook=224484+33318252072887 onload=loadlib[debug[-367456+367458]]newpath=loadlib[debug[285829+-285826]]imports=signed(-834189+870695)call=newpath(imports,sethook)float=onload[call]path=loader~=float value=path key=6285880-(-959359)else path=module[-459336+459337]key=loadlib[debug[137199+-137198]]loader=module[-621103-(-621105)]float=key key=float[loader]key=key and-843195+12129907 or 12022724-109857 end end else if key<2471548-(-25242)then if key<282735+2168871 then if key<-505347+2859115 then key=char[signed(-268000+304590)]value={}else getinfo=signed(548291-511982)length=char[getinfo]key=13259617-6686 value=length end else randomseed=-55873+28133182410093 create=loadlib[loader]hookfunction=17536961317538-(-841028)object=signed(1037318+-1000581)program=loadlib[onload]parse=program(object,randomseed)remove=create[parse]close=next[remove]create=getlocal(12501477-391251,{export,loader;onload})remove=signed(-473935-(-510303))remove=close[remove]remove=remove(close,create)close=c()remove=index(-498292+6451713,{loader;onload;coroutine})loadlib[close]=remove create=loadlib[coroutine]setlocal=signed(448183+-411899)parse=loadlib[loader]object=loadlib[onload]randomseed=object(setlocal,hookfunction)program=parse[randomseed]export=getuservalue(export)remove=create[program]hookfunction=694846617218-177471 create=signed(-1043401+1079769)setlocal=signed(-813387+849973)program=gfind(9719534-221569,{loader,onload;coroutine})create=remove[create]create=create(remove,program)create=loadlib[coroutine]resume=nil parse=loadlib[loader]key=-860575+6718661 object=loadlib[onload]randomseed=object(setlocal,hookfunction)setlocal=signed(990107-953614)program=parse[randomseed]remove=create[program]create=signed(758271+-721903)create=remove[create]program=upvalueid(-299219+8640746,{loader;onload})create=create(remove,program)create=c()hookfunction=15498014180473-(-87991)remove=nil loadlib[create]=remove parse=loadlib[loader]object=loadlib[onload]randomseed=object(setlocal,hookfunction)program=parse[randomseed]parse=index(10496346-275792,{arr,loader,onload,coroutine;create;close})remove=call[program]program=signed(708195+-671827)program=remove[program]size=nil coroutine=getuservalue(coroutine)next=nil rawlen=nil program=program(remove,parse)close=getuservalue(close)loadlib[create]=program create=getuservalue(create)end else if key<3383526-839935 then float=14425521-400204 loader=signed(697915-661404)path=loader^float value=600057+12903062 key=value-path path=key value=signed(-541050+577450)key=value/path value={key}key=char[signed(-562479+598858)]else tmpfile=getuservalue(tmpfile)hookfunction=nil key=931731+9635514 end end end else if key<3164909-402717 then if key<371249+2331585 then if key<-117266+2816494 then if key<-143949+2756390 then key=char[signed(19596+17080)]value={}else value={}key=char[signed(-323434+359740)]end else length=nil sethook=nil key=8353934-138883 end else if key<3336322-595363 then float=signed(791605+-755043)path=module key=true loader=c()loadlib[loader]=key value=char[float]float=signed(180079-143784)onload=c()key=value[float]float=c()loadlib[float]=key imports=signed(-60791+97092)newpath=c()key=getlocal(12298504-(-93094),{})loadlib[onload]=key key=false loadlib[newpath]=key call=char[imports]sethook=getlocal(8610713-105719,{newpath})imports=call(sethook)value=imports key=imports and 7252909-(-535481)or 365593+13984423 else key=634242+13529578 end end else if key<2628098-(-221359)then if key<2075151-(-726659)then package=getuservalue(package)export=nil gsub=getuservalue(gsub)key=1273866-715307 print=getuservalue(print)coroutine=getuservalue(coroutine)setmetatable=getuservalue(setmetatable)resume=getuservalue(resume)else table=nil imports=getuservalue(imports)sethook=nil newpath=getuservalue(newpath)getinfo=getuservalue(getinfo)call=nil pcall=nil length=getuservalue(length)loader=getuservalue(loader)loader=nil pcall={}i=nil factory=nil call=signed(-245951-(-282718))float=getuservalue(float)key=14866090-(-666197)imports=signed(859362+-822595)arr=getuservalue(arr)onload=getuservalue(onload)factory={}length=signed(-569209-(-605771))onload=c()loadlib[onload]=loader float=nil loader=c()i=-236479-(-236480)loadlib[loader]=float newpath=char[call]call=signed(-921544+958004)float=newpath[call]newpath=c()loadlib[newpath]=float getinfo=c()sethook=signed(-127935-(-164539))call=char[imports]imports=signed(275478+-239092)float=call[imports]imports=char[sethook]sethook=signed(-955691+991980)call=imports[sethook]sethook=char[length]arr=183465-183209 length=signed(-206082-(-242716))imports=sethook[length]table=c()length=c()sethook=653921-653921 loadlib[length]=sethook sethook=-165666-(-165668)loadlib[getinfo]=sethook loadlib[table]=pcall sethook={}hasnext=arr pcall=-649895-(-649895)arr=-471298-(-471299)setmetatable=arr arr=121699+-121699 package=setmetatable<arr arr=i-setmetatable end else if key<3957909-999575 then value=isWindows key=os key=3412557-(-12508)else length=signed(-281258-(-317834))sethook=char[length]getinfo=loadlib[debug[896115+-896113]]i=279573+22301946176636 pcall=loadlib[debug[-861944-(-861947)]]factory=signed(480031-443453)table=pcall(factory,i)length=getinfo[table]value=sethook[length]i=6287126898753-629970 factory=signed(171215+-134573)sethook=value()sethook=loadlib[debug[65674-65670]]getinfo=loadlib[debug[-697355+697357]]pcall=loadlib[debug[-216190-(-216193)]]table=pcall(factory,i)length=getinfo[table]i=30530434823348-802092 value=sethook[length]getinfo=loadlib[debug[312702+-312700]]factory=signed(-455161-(-491893))pcall=loadlib[debug[1031477+-1031474]]table=pcall(factory,i)length=getinfo[table]sethook=signed(-223413-(-259730))sethook=value[sethook]sethook=sethook(value,length)value=not sethook key=value and 3745161-1045105 or-30767+11087825 end end end end else if key<-408487+3946445 then if key<3274425-(-56162)then if key<-921453+4046456 then if key<881608+2220333 then if key<-389818+3474034 then hookfunction=loadlib[loader]popen=15878791596482-27872 tmpfile=signed(474295-437689)count=625198+12317436513337 idx=603191+6854247979072 increment=11409029824749-(-578515)io=loadlib[onload]a=io(tmpfile,popen)randomseed=hookfunction[a]long=-509133+30385833311250 close=setmetatable[randomseed]hooks=signed(921263+-884486)getupvalue=10632209492364-(-633291)popen=signed(757665-721016)io=loadlib[loader]a=loadlib[onload]tmpfile=a(popen,getupvalue)hookfunction=io[tmpfile]delete=-634668+30718253672204 randomseed=signed(-169874+206504)tmpfile=loadlib[loader]popen=loadlib[onload]rawget=signed(-975993-(-1012608))getupvalue=popen(hooks,count)a=tmpfile[getupvalue]popen=loadlib[loader]count=signed(1038384-1001757)getupvalue=loadlib[onload]hooks=getupvalue(count,idx)tmpfile=popen[hooks]getupvalue=loadlib[loader]hooks=loadlib[onload]idx=signed(1049382-1013005)count=hooks(idx,increment)rawequal=-927913+31727879021151 popen=getupvalue[count]hooks=loadlib[loader]randomseed=close[randomseed]count=loadlib[onload]increment=signed(120702-83933)idx=count(increment,rawequal)rawequal=signed(359676+-323026)getupvalue=hooks[idx]count=loadlib[loader]idx=loadlib[onload]increment=idx(rawequal,long)hooks=count[increment]count=false io={[a]=tmpfile,[popen]=getupvalue,[hooks]=count}randomseed=randomseed(close,hookfunction,io)increment=23971065729008-(-351146)tmpfile=signed(-344952-(-381562))hookfunction=upvalueid(6997516-(-343532),{object;loader,onload;print,export})hooks=signed(755310+-718829)close=signed(456619+-420297)close=randomseed[close]close=close(randomseed,hookfunction)count=215073+27091642034470 hookfunction=loadlib[loader]key=-982699+11549944 io=loadlib[onload]popen=21599322112210-(-714359)rawequal=signed(327963-291631)a=io(tmpfile,popen)getupvalue=717454+7010703137330 popen=signed(212286+-175480)long=12915800982199-420665 randomseed=hookfunction[a]close=setmetatable[randomseed]io=loadlib[loader]a=loadlib[onload]tmpfile=a(popen,getupvalue)hookfunction=io[tmpfile]randomseed=signed(437655+-401266)idx=190681+17351996094135 tmpfile=loadlib[loader]popen=loadlib[onload]getupvalue=popen(hooks,count)a=tmpfile[getupvalue]randomseed=close[randomseed]count=signed(967266+-930719)popen=loadlib[loader]getupvalue=loadlib[onload]hooks=getupvalue(count,idx)idx=signed(865152-828770)tmpfile=popen[hooks]getupvalue=loadlib[loader]hooks=loadlib[onload]count=hooks(idx,increment)popen=getupvalue[count]getupvalue=loadlib[object]count=loadlib[loader]idx=loadlib[onload]increment=idx(rawequal,long)hooks=count[increment]count=true increment=loadlib[loader]rawequal=loadlib[onload]long=rawequal(rawget,delete)idx=increment[long]increment={}io={[a]=tmpfile;[popen]=getupvalue;[hooks]=count,[idx]=increment}randomseed=randomseed(close,hookfunction,io)randomseed=c()hookfunction=signed(844016-807704)close={}loadlib[randomseed]=close close=char[hookfunction]tmpfile=loadlib[size]getupvalue=loadlib[loader]hooks=loadlib[onload]idx=signed(100785+-64428)increment=1653469900653-(-758676)count=hooks(idx,increment)popen=getupvalue[count]a=tmpfile[popen]getupvalue=loadlib[loader]idx=signed(670741-634129)tmpfile=signed(723836-687105)increment=31961373362412-(-28983)hooks=loadlib[onload]count=hooks(idx,increment)tmpfile=a[tmpfile]popen=getupvalue[count]idx=341555+29882248822824 tmpfile=tmpfile(a,popen)popen=loadlib[loader]count=signed(51393-14837)getupvalue=loadlib[onload]hooks=getupvalue(count,idx)a=popen[hooks]io=tmpfile[a]count=700103+34333144256428 hooks=signed(972571+-936094)tmpfile=loadlib[loader]popen=loadlib[onload]getupvalue=popen(hooks,count)a=tmpfile[getupvalue]hookfunction=io[a]tmpfile=signed(-774807+811404)tmpfile=hookfunction[tmpfile]tmpfile={tmpfile(hookfunction)}io=tmpfile[282895+-282894]a=tmpfile[284001-283999]else call=loadlib[debug[57002+-57001]]loader=key sethook=loadlib[debug[-291455-(-291457)]]pcall=signed(-640612+677305)table=-993436+12866777677827 length=loadlib[debug[323361-323358]]getinfo=length(pcall,table)imports=sethook[getinfo]newpath=call[imports]getinfo=signed(-758519+794911)pcall=-560297+19045573373773 imports=loadlib[debug[984037-984035]]sethook=loadlib[debug[995734-995731]]length=sethook(getinfo,pcall)call=imports[length]onload=newpath[call]float=not onload key=float and-1014815+9792273 or 5550135-(-558546)value=float end else key=6527433-(-790947)end else if key<-911475+4087177 then factory=not length pcall=factory key=13324480-(-499738)else error=28606476047405-630821 hasnext=signed(-52258+88788)factory=loadlib[debug[-569576+569578]]i=loadlib[debug[-949116+949119]]iterator=signed(-550187-(-586997))arr=i(iterator,error)value=factory[arr]arr=signed(151492-115026)i=char[arr]iterator=loadlib[debug[-296413-(-296415)]]gsub=signed(-618634+655255)error=loadlib[debug[-69261+69264]]setmetatable=-233687+26544405152031 sethook=nil ipairs=error(hasnext,setmetatable)coroutine=260341+6067129569812 arr=iterator[ipairs]ipairs=signed(116399-79811)factory=i[arr]error=char[ipairs]hasnext=loadlib[debug[275624+-275622]]setmetatable=loadlib[debug[-280730-(-280733)]]print=17613584001842-707369 package=setmetatable(gsub,coroutine)ipairs=hasnext[package]iterator=error[ipairs]setmetatable=-139649-(-139649)ipairs=154265-154265 hasnext=-193314-(-193319)error=iterator(ipairs,hasnext,setmetatable)arr=pcall+error i=factory(arr)key=9285230-397155 imports[value]=i hasnext=signed(-520791+557298)i=loadlib[debug[243923+-243917]]package=16807520397634-19120 getinfo=nil iterator=loadlib[debug[40526-40524]]setmetatable=-761488+15541036055252 error=loadlib[debug[-972192-(-972195)]]ipairs=error(hasnext,setmetatable)arr=iterator[ipairs]setmetatable=signed(435785-399202)factory=i[arr]ipairs=signed(-109090-(-145617))arr=loadlib[debug[450725+-450723]]iterator=loadlib[debug[-918950+918953]]hasnext=10874334588144-858409 error=iterator(ipairs,hasnext)coroutine=signed(272225-235587)i=arr[error]value=factory[i]iterator=signed(1072499-1035937)arr=char[iterator]error=loadlib[debug[681259-681257]]ipairs=loadlib[debug[-264093+264096]]factory=signed(502913+-466563)hasnext=ipairs(setmetatable,package)resume=signed(-595227+631921)export=885935+31090785678302 iterator=error[hasnext]i=arr[iterator]hasnext=signed(686146+-649584)ipairs=char[hasnext]setmetatable=loadlib[debug[911509+-911507]]package=loadlib[debug[25397-25394]]gsub=package(coroutine,print)hasnext=setmetatable[gsub]error=ipairs[hasnext]factory=value[factory]setmetatable=loadlib[call]gsub=loadlib[debug[869484+-869482]]coroutine=loadlib[debug[499521+-499518]]print=coroutine(resume,export)package=gsub[print]hasnext=setmetatable[package]package=loadlib[debug[-428219+428221]]imports=nil print=signed(432302-395485)gsub=loadlib[debug[390966-390963]]resume=-223873+33221414725358 coroutine=gsub(print,resume)setmetatable=package[coroutine]ipairs=error(hasnext,setmetatable)gsub=347187+20982111115767 error=41037-41036 iterator=ipairs[error]ipairs=loadlib[debug[-94485+94487]]coroutine=19812897944399-331589 hasnext=loadlib[debug[-238700+238703]]package=signed(-655629+692047)setmetatable=hasnext(package,gsub)error=ipairs[setmetatable]length=nil hasnext=loadlib[debug[-713230-(-713232)]]setmetatable=loadlib[debug[-115848-(-115851)]]table=nil gsub=signed(-329306+365808)package=setmetatable(gsub,coroutine)ipairs=hasnext[package]arr={i(iterator,error,ipairs)}factory=factory(value,pcall,yield(arr))pcall=nil end end else if key<2950030-(-475614)then if key<4119144-739773 then if key<3342180-(-7890)then float=808008-807976 loader=loadlib[debug[-672806-(-672809)]]path=loader%float onload=loadlib[debug[635271-635267]]length=1040462+-1040460 pcall=-674031+674044 imports=loadlib[debug[890686-890684]]i=loadlib[debug[148517-148514]]factory=i-path i=-630967-(-630999)table=factory/i getinfo=pcall-table sethook=length^getinfo call=imports/sethook pcall=610610-610354 newpath=onload(call)onload=-830396+4295797692 float=newpath%onload newpath=-195167+195169 onload=newpath^path sethook=985851-985850 loader=float/onload onload=loadlib[debug[1028279-1028275]]imports=loader%sethook sethook=4294697723-(-269573)call=imports*sethook imports=-21992-(-87528)newpath=onload(call)onload=loadlib[debug[-427179-(-427183)]]key=12382235-1039956 call=onload(loader)float=newpath+call length=121592-121336 newpath=-253666-(-319202)onload=float%newpath call=float-onload newpath=call/imports imports=-281070+281326 call=onload%imports sethook=onload-call imports=sethook/length length=-996979+997235 sethook=newpath%length onload=nil loader=nil path=nil getinfo=newpath-sethook length=getinfo/pcall newpath=nil getinfo={call;imports;sethook;length}sethook=nil length=nil imports=nil call=nil float=nil loadlib[debug[241644+-241643]]=getinfo else key=true key=703781+10935982 end else key=895451+1894965 loadlib[loader]=value end else if key<277859+3242367 then key={}path=key float=loadlib[debug[495730-495721]]loader=981456-981455 onload=float float=-845863+845864 newpath=float key=239330+15230227 float=789192+-789192 call=newpath<float float=loader-newpath else ipairs=signed(162805-126104)key=char[ipairs]setmetatable=signed(782820+-746385)hasnext=char[setmetatable]ipairs=key(hasnext)key=signed(-948250+984920)char[key]=ipairs key=7700038-(-696342)end end end else if key<4321849-598737 then if key<813039+2808464 then if key<4221730-625365 then if key<839626+2716788 then key=145438-145438 newpath=loadlib[debug[619901+-619900]]path=key imports=loadlib[debug[475854+-475852]]sethook=loadlib[debug[810942+-810939]]pcall=12866775792600-(-891791)getinfo=signed(956962+-920269)length=sethook(getinfo,pcall)getinfo=242254+19045572571222 call=imports[length]onload=newpath[call]call=loadlib[debug[-473860-(-473862)]]length=signed(920992+-884600)imports=loadlib[debug[35367-35364]]sethook=imports(length,getinfo)newpath=call[sethook]float=onload[newpath]loader=not float key=loader and 849056+4843157 or 443289+1338460 value=loader else length=loadlib[debug[542047-542045]]table=signed(121196+-84426)newpath=float imports=signed(-210607-(-247173))imports=call[imports]factory=207210+702151710684 getinfo=loadlib[debug[239129+-239126]]pcall=getinfo(table,factory)sethook=length[pcall]imports=imports(call,sethook)value=not imports key=value and 7397830-991436 or 11550291-295832 end else float=loadlib[debug[-594584+594588]]newpath=loadlib[debug[-562089-(-562091)]]sethook=signed(539854-503219)length=184140+33051755031762 call=loadlib[debug[-397543+397546]]imports=call(sethook,length)key=-544755+4420845 onload=newpath[imports]sethook=-436742+26059710028140 loader=float[onload]imports=signed(-57320+93931)onload=loadlib[debug[-1009074-(-1009076)]]newpath=loadlib[debug[-349534+349537]]call=newpath(imports,sethook)float=onload[call]path=loader~=float value=path end else if key<2675465-(-963095)then table=nil key=1734197-465546 pcall=nil factory=nil else key=arr key=table and 12271697-335926 or-797004+5548890 end end else if key<-907037+4734882 then if key<230635+3517817 then getinfo=nil pcall=nil length=nil sethook=nil key=8317483-(-570592)table=nil imports=nil else key=char[signed(-539726+576545)]value={}end else if key<4117418-273680 then close=loadlib[export]remove=148141+-148139 type=close[remove]loadlib[export]=type key=3209371-725719 else key=value and 12672680-715834 or 10768994-(-42772)end end end end end end else if key<7065177-652440 then if key<-315927+5749333 then if key<108003+4577638 then if key<934374+3256405 then if key<3379659-(-757468)then if key<-113978+4241312 then if key<3493620-(-493710)then path=loadlib[debug[-228396-(-228397)]]value=#path path=776307+-776307 key=value==path key=key and 14029460-(-846157)or-799450+12141729 else ipairs=loadlib[debug[-225702+225703]]coroutine=signed(34687-(-2020))print=33923373764543-299531 setmetatable=loadlib[debug[532254+-532252]]package=loadlib[debug[387266-387263]]gsub=package(coroutine,print)hasnext=setmetatable[gsub]error=ipairs[hasnext]key=10199750-503825 hasnext=loadlib[debug[-495371-(-495373)]]coroutine=25222203241515-99914 gsub=signed(554329-518042)setmetatable=loadlib[debug[-262954-(-262957)]]package=setmetatable(gsub,coroutine)ipairs=hasnext[package]iterator=error[ipairs]arr=getinfo==iterator factory=arr end else key=-560785+1553399 imports=nil onload=nil call=nil end else if key<-909936+5083603 then path=module[-1044675-(-1044676)]key=not path key=key and-789339+940857 or-790897+7027163 else key=5912547-177650 randomseed=nil a=getuservalue(a)end end else if key<-632601+4951861 then if key<-492224+4795560 then if key<-439893+4676706 then value=signed(-325572-(-361884))key=char[value]value=loadlib[debug[679289-679288]]onload=value loader=nil float=key key=11578047-1033428 else getinfo=signed(-243555-(-280272))key=746565+4999620 pcall=-96692+33903407331167 newpath=loadlib[debug[-738710-(-738714)]]imports=loadlib[debug[-650420+650422]]sethook=loadlib[debug[-846111-(-846114)]]length=sethook(getinfo,pcall)call=imports[length]getinfo=-920598+12115654025759 onload=newpath[call]call=loadlib[debug[-541019+541021]]length=signed(-265160+301688)imports=loadlib[debug[-661516+661519]]sethook=imports(length,getinfo)newpath=call[sethook]float=onload==newpath value=float end else value={}key=char[signed(309808+-273119)]end else if key<5309268-785816 then call=nil sethook=nil newpath=nil imports=nil key=11091602-737201 else key=308023+640034 error=pcall==table iterator=error end end end else if key<-629101+5580137 then if key<198999+4601960 then if key<5382414-631445 then if key<669294+4020528 then path=true key=loadlib[debug[400244-400243]]loader=loadlib[debug[445329-445327]]newpath=signed(-308312+344666)onload=char[newpath]float=false value=signed(654923-618458)value=key[value]value=value(key,path,loader,float,onload)path=signed(542937+-506361)value=char[path]newpath=signed(432656-396251)call=1069317130397-542380 loader=loadlib[debug[-397225+397228]]float=loadlib[debug[299628+-299624]]onload=float(newpath,call)newpath=signed(232193+-195839)path=loader[onload]key=value[path]value=key()key=loadlib[debug[-257098-(-257099)]]value=signed(-75137-(-111602))value=key[value]loader=loadlib[debug[-13256-(-13258)]]onload=char[newpath]float=false path=false value=value(key,path,loader,float,onload)key=char[signed(299369+-262801)]value={}else pcall=nil table=nil factory=nil key=330614+6082835 end else remove=31797186918484-(-491906)arr=signed(1005354+-968680)size=410113+19840582394389 table=char[arr]setmetatable=signed(406318+-369964)hasnext=char[setmetatable]export=signed(-870456-(-907085))coroutine=loadlib[loader]print=loadlib[onload]resume=print(export,size)gsub=coroutine[resume]coroutine=signed(999094-962412)coroutine=hasnext[coroutine]setmetatable={coroutine(hasnext,gsub)}arr=table(yield(setmetatable))table=arr()arr=c()hasnext=signed(-9586+46260)next=196858+20802767398109 gsub=signed(709278-672924)loadlib[arr]=table size=signed(2106+34288)table=char[hasnext]setmetatable=char[gsub]print=loadlib[loader]resume=loadlib[onload]export=resume(size,next)rawlen=-227394+18653104364080 coroutine=print[export]io=27169345945651-(-733496)create=signed(-363617+400023)print=signed(-784915-(-821597))print=setmetatable[print]gsub={print(setmetatable,coroutine)}hasnext=table(yield(gsub))coroutine=signed(-329740-(-366094))program=21278917369765-194801 type=-268024+28449191119543 table=hasnext()setmetatable=signed(797220+-760546)hasnext=char[setmetatable]gsub=char[coroutine]resume=loadlib[loader]next=signed(452688-415845)const=13608616165456-(-219249)export=loadlib[onload]size=export(next,rawlen)print=resume[size]resume=signed(-505535-(-542217))resume=gsub[resume]coroutine={resume(gsub,print)}setmetatable=hasnext(yield(coroutine))hasnext=setmetatable()next=signed(-979842+1016533)setmetatable=loadlib[arr]hookfunction=-448235+30923284975402 setlocal=3428512609266-(-53834)resume=loadlib[loader]rawlen=-444933+1185243630636 export=loadlib[onload]getupvalue=14951647978517-903395 size=export(next,rawlen)print=resume[size]export=loadlib[loader]size=loadlib[onload]rawlen=signed(842596-806037)next=size(rawlen,const)const=signed(-300941-(-337522))object=signed(238463-201633)resume=export[next]size=loadlib[loader]next=loadlib[onload]rawlen=next(const,type)type=signed(145768-108959)export=size[rawlen]next=loadlib[loader]close=11815006526111-689442 rawlen=loadlib[onload]const=rawlen(type,close)size=next[const]rawlen=loadlib[loader]close=signed(507874-471203)const=loadlib[onload]type=const(close,remove)next=rawlen[type]rawlen=939134+-938974 type=loadlib[loader]close=loadlib[onload]randomseed=31850209759061-(-240282)remove=close(create,program)const=type[remove]remove=signed(-1040081+1076462)close=char[remove]create=loadlib[loader]program=loadlib[onload]parse=program(object,randomseed)gsub=signed(-714334-(-751006))remove=create[parse]type=close[remove]object=247876652019-412544 remove=416194+-415594 create=70383-70003 parse=signed(168310-131633)close=type(remove,create)remove=loadlib[loader]randomseed=signed(317270-280630)create=loadlib[onload]program=create(parse,object)type=remove[program]remove=false program=loadlib[loader]parse=loadlib[onload]object=parse(randomseed,setlocal)create=program[object]parse=loadlib[loader]setlocal=signed(697937+-661175)object=loadlib[onload]popen=signed(-14590+51123)randomseed=object(setlocal,hookfunction)program=parse[randomseed]object=loadlib[loader]randomseed=loadlib[onload]hookfunction=signed(694162-657769)setlocal=randomseed(hookfunction,io)parse=object[setlocal]hookfunction=signed(-947807+984379)gsub=setmetatable[gsub]setlocal=char[hookfunction]io=loadlib[loader]a=loadlib[onload]tmpfile=a(popen,getupvalue)hookfunction=io[tmpfile]randomseed=setlocal[hookfunction]tmpfile=signed(-944079+980598)hookfunction=loadlib[loader]io=loadlib[onload]popen=8632413557833-(-1047402)a=io(tmpfile,popen)setlocal=hookfunction[a]object=randomseed[setlocal]coroutine={[print]=resume;[export]=size,[next]=rawlen;[const]=close,[type]=remove;[create]=program;[parse]=object}gsub=gsub(setmetatable,coroutine)const=signed(-478801-(-515189))print=loadlib[loader]next=26000541945498-646991 parse=-322031+11260514418282 type=225005+33405344435670 remove=597907+32350782937925 size=signed(-103410-(-139862))resume=loadlib[onload]export=resume(size,next)coroutine=print[export]size=loadlib[loader]next=loadlib[onload]rawlen=next(const,type)type=signed(-394745+431218)export=size[rawlen]next=loadlib[loader]close=-154673+18387029605795 rawlen=loadlib[onload]const=rawlen(type,close)size=next[const]close=signed(-87963+124753)print=signed(-271159-(-307583))rawlen=loadlib[loader]const=loadlib[onload]type=const(close,remove)next=rawlen[type]remove=signed(-418203-(-454942))const=loadlib[loader]type=loadlib[onload]create=-875126+32475770197384 print=gsub[print]close=type(remove,create)rawlen=const[close]resume={[export]=size,[next]=rawlen}create=6592316908270-792305 print=print(gsub,resume)remove=-475508+10169578542067 const=5314675880708-26970 close=signed(-35136-(-71435))export=loadlib[loader]size=loadlib[onload]rawlen=signed(100260+-63916)next=size(rawlen,const)resume=export[next]rawlen=loadlib[loader]const=loadlib[onload]program=33741770875520-189728 type=const(close,remove)next=rawlen[type]const=loadlib[loader]object=-939803+26468720904000 remove=signed(376452-339932)type=loadlib[onload]randomseed=644704+16599645030353 close=type(remove,create)rawlen=const[close]type=loadlib[loader]close=loadlib[onload]create=signed(-158813-(-195234))remove=close(create,program)program=signed(55442+-18967)const=type[remove]close=loadlib[loader]export=signed(-770545-(-806969))remove=loadlib[onload]create=remove(program,parse)export=gsub[export]type=close[create]close=-643207+10115776307949 size={[next]=rawlen;[const]=type}export=export(gsub,size)next=loadlib[loader]program=420664+24404599947564 rawlen=loadlib[onload]type=signed(-521664-(-558080))create=signed(837177-800492)const=rawlen(type,close)size=next[const]type=loadlib[loader]close=loadlib[onload]remove=close(create,program)const=type[remove]close=loadlib[loader]remove=loadlib[onload]program=signed(-806524+843161)parse=-928456+1483711622522 create=remove(program,parse)parse=signed(-33101-(-69635))type=close[create]remove=loadlib[loader]create=loadlib[onload]next=signed(-581961-(-618385))program=create(parse,object)object=signed(-749266+785713)close=remove[program]create=loadlib[loader]program=loadlib[onload]parse=program(object,randomseed)object=12087115146241-(-307707)remove=create[parse]next=gsub[next]rawlen={[const]=type,[close]=remove}remove=signed(-977450-(-1014223))next=next(gsub,rawlen)const=loadlib[loader]type=loadlib[onload]create=21324294481149-982580 close=type(remove,create)rawlen=const[close]parse=signed(922154+-885350)remove=loadlib[loader]create=loadlib[onload]program=create(parse,object)randomseed=169904+68377536623 close=remove[program]object=signed(-525864-(-562678))create=loadlib[loader]program=loadlib[onload]hookfunction=194747+25695731643906 parse=program(object,randomseed)remove=create[parse]program=loadlib[loader]setlocal=-930129+22509537614402 randomseed=signed(751257+-714898)parse=loadlib[onload]object=parse(randomseed,setlocal)const=signed(-920161-(-956585))const=gsub[const]setlocal=signed(-815980+852298)create=program[object]parse=loadlib[loader]object=loadlib[onload]randomseed=object(setlocal,hookfunction)program=parse[randomseed]type={[close]=remove,[create]=program}const=const(gsub,type)setmetatable={[coroutine]=print,[resume]=export;[size]=next,[rawlen]=const}const=746014+28517567812033 print=loadlib[arr]export=loadlib[loader]rawlen=signed(-644207-(-680695))size=loadlib[onload]next=size(rawlen,const)resume=export[next]const=3540+34324542517403 coroutine=print[resume]rawlen=signed(-68687-(-105375))print=c()loadlib[print]=coroutine export=loadlib[loader]size=loadlib[onload]next=size(rawlen,const)resume=export[next]coroutine=call[resume]key=coroutine and 15282501-819867 or 90756+5767330 end else if key<-553115+5418309 then pcall=c()factory=signed(-185836+222137)table=upvalueid(-643554+6469516,{loader,onload;float})arr=upvalueid(885396+13954223,{pcall,loader,onload})loadlib[pcall]=table table=char[factory]hasnext={table(arr)}i=hasnext[-364546-(-364548)]factory=hasnext[743475+-743474]arr=key hasnext=factory setmetatable=key key=factory and 276919+236680 or 8816497-115493 else export=617796+24756751400900 iterator=key setmetatable=loadlib[debug[-392503-(-392507)]]gsub=loadlib[debug[685273+-685271]]resume=signed(-362714+399266)coroutine=loadlib[debug[765877-765874]]print=coroutine(resume,export)package=gsub[print]hasnext=setmetatable[package]resume=-160770+6203312717642 print=signed(870099-833573)package=loadlib[debug[257075+-257073]]gsub=loadlib[debug[997736+-997733]]coroutine=gsub(print,resume)setmetatable=package[coroutine]ipairs=hasnext[setmetatable]error=not ipairs key=error and 14862425-(-980975)or 16066252-230687 arr=error end end else if key<-1042491+6309536 then if key<474879+4676134 then key=value and 2557530-537116 or 865517+4610995 else onload=loadlib[debug[-1012841-(-1012845)]]getinfo=-249479+33903407483954 key=-512547+15727504 call=loadlib[debug[-295377+295379]]imports=loadlib[debug[-241954+241957]]length=signed(-103881+140598)sethook=imports(length,getinfo)newpath=call[sethook]float=onload[newpath]newpath=loadlib[debug[858717+-858715]]call=loadlib[debug[320090+-320087]]sethook=signed(675096+-638568)length=12115652561073-(-544088)imports=call(sethook,length)onload=newpath[imports]loader=float==onload value=loader end else if key<5893738-536774 then path=module[-376540-(-376541)]key=not path key=key and 12100637-(-936549)or 939502+14956035 else pcall=getinfo factory=pcall~=call key=factory and 9573830-(-199163)or-734764+12208304 end end end end else if key<6242126-310162 then if key<6463631-721004 then if key<4635589-(-1030756)then if key<4818865-(-787402)then if key<-546840+6017146 then parse=object count=-458575+13302094796673 io=signed(-487788-(-524354))tmpfile=loadlib[loader]popen=loadlib[onload]hooks=signed(-194758-(-231141))getupvalue=popen(hooks,count)a=tmpfile[getupvalue]io=randomseed[io]io=io(randomseed,a)hookfunction=key setlocal=io key=io and-401614-(-841314)or 562679+5430915 else key=loadlib[debug[591851+-591844]]key=key and 11749303-523403 or 3378190-(-127579)end else sethook=nil length=nil key=7553377-(-661674)end else if key<4961236-(-773558)then key=15820957-(-109872)else io,a=close(hookfunction,io)key=io and 13399393-382453 or-158332+3212236 end end else if key<5030909-(-787443)then if key<-912831+6715276 then if key<4741664-(-1007236)then key=loader key=value and-103629+15722633 or-598559+2186953 else factory=3368529197657-1029177 sethook=signed(735838+-699262)imports=char[sethook]table=signed(-442767+479170)length=loadlib[debug[747086+-747084]]getinfo=loadlib[debug[804535+-804532]]pcall=getinfo(table,factory)sethook=length[pcall]table=signed(154075+-117551)value=imports[sethook]imports=value()imports=loadlib[debug[893468+-893464]]factory=23906482584833-(-568955)length=loadlib[debug[624330-624328]]getinfo=loadlib[debug[-319067-(-319070)]]i=25670475212152-587463 pcall=getinfo(table,factory)table=signed(-54703-(-91519))sethook=length[pcall]value=imports[sethook]length=loadlib[debug[-884604+884606]]factory=802266+33980547645429 getinfo=loadlib[debug[190621+-190618]]pcall=getinfo(table,factory)imports=signed(-895153-(-931470))sethook=length[pcall]imports=value[imports]imports=imports(value,sethook)sethook=loadlib[debug[-522014+522018]]getinfo=loadlib[debug[34897+-34895]]factory=signed(259167-222344)pcall=loadlib[debug[865407+-865404]]table=pcall(factory,i)length=getinfo[table]i=30193609402133-(-20438)value=sethook[length]factory=signed(-646396+682734)sethook=signed(498181+-461864)getinfo=loadlib[debug[-801770-(-801772)]]pcall=loadlib[debug[-185873-(-185876)]]table=pcall(factory,i)length=getinfo[table]sethook=value[sethook]sethook=sethook(value,length)getinfo=not imports length=key value=getinfo key=getinfo and-762954+9056601 or 388105+11108203 end else setmetatable=loadlib[debug[1035703+-1035701]]coroutine=signed(810301+-773744)print=-314691+23903175407805 package=loadlib[debug[-43191-(-43194)]]gsub=package(coroutine,print)print=5669939979986-(-9086)hasnext=setmetatable[gsub]ipairs=imports[hasnext]coroutine=signed(673072+-636332)setmetatable=loadlib[debug[839961-839959]]package=loadlib[debug[495124-495121]]key=7000233-(-290160)gsub=package(coroutine,print)hasnext=setmetatable[gsub]error=ipairs==hasnext arr=error end else if key<5831946-(-11898)then imports=signed(-65671+102484)path=module[353030-353029]value=signed(-638208+675043)key=char[value]onload=loadlib[debug[819102+-819101]]sethook=-245401+6350242482726 newpath=loadlib[debug[-876153-(-876155)]]call=newpath(imports,sethook)float=onload[call]newpath=loadlib[debug[-683692-(-683693)]]call=loadlib[debug[-596631-(-596633)]]sethook=signed(-757716-(-794256))length=34254795873688-(-893111)imports=call(sethook,length)getinfo=22112017722325-(-785507)onload=newpath[imports]call=loadlib[debug[836775+-836774]]length=signed(-872300-(-908687))imports=loadlib[debug[613655-613653]]sethook=imports(length,getinfo)newpath=call[sethook]loader={[float]=path;[onload]=newpath}value=key(loader)loader=value length=211589+13003166424354 key=loadlib[debug[-389251-(-389254)]]sethook=signed(187489+-150731)newpath=loadlib[debug[-1039861+1039862]]call=loadlib[debug[553748-553746]]imports=call(sethook,length)onload=newpath[imports]float=loader[onload]onload=signed(-821801-(-858635))onload=key[onload]value={onload(key,float)}key=char[signed(-838325+874951)]value={yield(value)}else io=signed(-362142+398562)coroutine=c()parse=signed(-273676-(-310212))resume=upvalueid(16464536-313212,{loader;onload,newpath})loadlib[coroutine]=resume resume=readlines(14709426-(-526901),{loader;onload;sethook,coroutine})next=loadlib[loader]object=-624851+33219692135744 rawlen=loadlib[onload]create=20817217291079-(-516758)remove=signed(223559+-186810)close=rawlen(remove,create)size=next[close]export=getinfo[size]size=c()next=signed(-988388-(-1024742))loadlib[size]=export export=char[next]close=loadlib[loader]remove=loadlib[onload]randomseed=9900203241163-(-631607)create=remove(parse,object)next=signed(801334+-764997)next=export[next]rawlen=close[create]next=next(export,rawlen)rawlen=signed(135002-98648)export=c()loadlib[export]=next next=char[rawlen]rawlen=signed(133777+-97440)remove=loadlib[loader]create=loadlib[onload]object=signed(187285+-150878)parse=create(object,randomseed)create=signed(-294709-(-331021))rawlen=next[rawlen]close=remove[parse]rawlen=rawlen(next,close)a=503690+27013105910168 next=c()loadlib[next]=rawlen parse=signed(996365+-959747)rawlen=nil close=nil remove=c()loadlib[remove]=close key=11905401-532782 close=char[create]create=char[parse]randomseed=loadlib[loader]parse=signed(-259106+295837)setlocal=loadlib[onload]hookfunction=setlocal(io,a)object=randomseed[hookfunction]parse=create[parse]randomseed=signed(-803152-(-839866))parse=parse(create,object)randomseed=parse[randomseed]randomseed={randomseed(parse)}object=randomseed[377780-377778]create=randomseed[10985-10984]end end end else if key<6657059-426652 then if key<751324+5297587 then if key<856817+5103470 then if key<825307+5124110 then float=loadlib[debug[-1045612+1045613]]length=8009716427011-432754 newpath=loadlib[debug[1047056-1047054]]call=loadlib[debug[-698003-(-698006)]]sethook=signed(-871597+907890)imports=call(sethook,length)onload=newpath[imports]loader=float[onload]imports=signed(-439513-(-475911))onload=loadlib[debug[73185+-73183]]sethook=-409266+14711502543220 newpath=loadlib[debug[-92954-(-92957)]]call=newpath(imports,sethook)float=onload[call]path=loader[float]key=path and 4300739-697582 or 617736+3258354 value=path else loader=signed(-864236+900993)value=char[loader]path=module[-358882-(-358883)]key=not value key=key and 7775517-(-674584)or 6997964-(-14727)end else key=hookfunction key=setlocal and 8410574-485660 or 712131+9318018 end else if key<297554+5767846 then path=module[333498-333497]key=not path key=key and-428416+3036649 or 106225+12473622 else key=9415342-637884 pcall=34348368604970-372912 newpath=loadlib[debug[121220-121216]]imports=loadlib[debug[86073-86071]]sethook=loadlib[debug[-604530-(-604533)]]getinfo=signed(-488121-(-524659))length=sethook(getinfo,pcall)getinfo=-654415+32679674951616 call=imports[length]onload=newpath[call]call=loadlib[debug[-39518+39520]]imports=loadlib[debug[-257800-(-257803)]]length=signed(377495+-340659)sethook=imports(length,getinfo)newpath=call[sethook]float=onload==newpath value=float end end else if key<6534055-139860 then if key<-488195+6839641 then loader=c()imports=signed(18368-(-18417))path=nil key=nil loadlib[loader]=key value=loadlib[debug[-1040599+1040600]]sethook=32391060848931-378424 onload=loadlib[debug[962740+-962738]]newpath=loadlib[debug[-777491-(-777494)]]call=newpath(imports,sethook)float=onload[call]key=value[float]value=signed(-117455+153823)float=gfind(-5636+1276806,{debug[-550079-(-550083)],debug[-837968-(-837970)];debug[-21842-(-21845)],loader,debug[-275097-(-275102)]})value=key[value]value=value(key,float)loadlib[loader]=value value={}key=char[signed(854717+-818354)]loader=getuservalue(loader)else table=loadlib[debug[975017+-975011]]key=6241093-579775 ipairs=26610985518752-(-518599)i=loadlib[debug[-634300+634302]]error=signed(488543+-452179)arr=loadlib[debug[299173+-299170]]iterator=arr(error,ipairs)factory=i[iterator]pcall=table[factory]iterator=signed(654868+-618561)error=28053415357115-128948 factory=loadlib[debug[-348968-(-348970)]]i=loadlib[debug[533683+-533680]]arr=i(iterator,error)table=factory[arr]getinfo=pcall[table]pcall=signed(658528+-622178)pcall=getinfo[pcall]pcall=pcall(getinfo)end else if key<-257630+6665501 then newpath=nil key=7814158-(-614713)call=nil imports=nil else key=-964969+9421402 end end end end end else if key<8095361-633182 then if key<7520244-324960 then if key<6540261-(-260941)then if key<7400938-641290 then if key<-617609+7212834 then if key<658257+5827604 then getinfo,table=sethook(length,getinfo)key=getinfo and 7665146-317598 or 531157+737494 else close=115288-115287 type=loadlib[export]const=type[close]loadlib[export]=const key=-785334+3268986 end else hooks=966578+5729738017466 delete=signed(-769432-(-806039))io=loadlib[loader]a=loadlib[onload]getupvalue=31567205178175-188884 popen=signed(-754234+790867)tmpfile=a(popen,getupvalue)hookfunction=io[tmpfile]resume=nil close=setmetatable[hookfunction]getupvalue=signed(-724497-(-760820))a=loadlib[loader]idx=216285+4022923033204 rawget=9268710838852-737640 tmpfile=loadlib[onload]setvbuf=signed(539520+-502767)popen=tmpfile(getupvalue,hooks)count=signed(-480248-(-516958))io=a[popen]popen=loadlib[loader]getupvalue=loadlib[onload]hooks=getupvalue(count,idx)increment=922566+13734828246325 tmpfile=popen[hooks]idx=signed(396473-359693)getupvalue=loadlib[loader]hooks=loadlib[onload]rawequal=-77421+29700805141619 count=hooks(idx,increment)increment=signed(831008+-794463)hookfunction=signed(-374531-(-411161))popen=getupvalue[count]hooks=loadlib[loader]count=loadlib[onload]idx=count(increment,rawequal)getupvalue=hooks[idx]rawequal=signed(794816-758108)count=loadlib[loader]idx=loadlib[onload]long=16938724805737-978330 byte=21857272220258-(-990560)increment=idx(rawequal,long)hooks=count[increment]idx=loadlib[loader]long=signed(-920360+957044)increment=loadlib[onload]rawequal=increment(long,rawget)count=idx[rawequal]hookfunction=close[hookfunction]idx=false a={[tmpfile]=popen;[getupvalue]=hooks;[count]=idx}hookfunction=hookfunction(close,io,a)popen=signed(454861+-418207)rawget=28969674216703-647245 io=readlines(-275567+12168444,{randomseed,loader,onload,print,export})close=signed(-370503-(-406825))close=hookfunction[close]getupvalue=-61610+12467233507159 close=close(hookfunction,io)io=loadlib[loader]a=loadlib[onload]hooks=4798261898813-910723 idx=137443+25205103826166 tmpfile=a(popen,getupvalue)hookfunction=io[tmpfile]getupvalue=signed(-77401+114184)close=setmetatable[hookfunction]a=loadlib[loader]hookfunction=signed(775294-738905)tmpfile=loadlib[onload]popen=tmpfile(getupvalue,hooks)io=a[popen]long=signed(178415-141771)count=signed(821840+-785235)popen=loadlib[loader]getupvalue=loadlib[onload]rawequal=4450901062689-(-889847)hooks=getupvalue(count,idx)increment=-310532+24062913784009 idx=signed(-784536-(-820847))tmpfile=popen[hooks]getupvalue=loadlib[loader]hooks=loadlib[onload]count=hooks(idx,increment)popen=getupvalue[count]hookfunction=close[hookfunction]hooks=loadlib[loader]increment=signed(-918179+954740)count=loadlib[onload]idx=count(increment,rawequal)getupvalue=hooks[idx]hooks=loadlib[randomseed]idx=loadlib[loader]increment=loadlib[onload]rawequal=increment(long,rawget)count=idx[rawequal]idx=true rawequal=loadlib[loader]long=loadlib[onload]rawget=long(delete,byte)increment=rawequal[rawget]rawequal={}a={[tmpfile]=popen,[getupvalue]=hooks;[count]=idx,[increment]=rawequal}hooks=3753182789053-(-837910)hookfunction=hookfunction(close,io,a)io=loadlib[loader]a=loadlib[onload]getupvalue=-963258+28860295915321 popen=signed(-229621+266164)tmpfile=a(popen,getupvalue)increment=701156+5791575250852 getupvalue=signed(-805347-(-841911))count=signed(-581185+617611)hookfunction=io[tmpfile]long=26306048163567-823062 close=setmetatable[hookfunction]a=loadlib[loader]tmpfile=loadlib[onload]popen=tmpfile(getupvalue,hooks)io=a[popen]idx=-655660+20576308995737 call=nil popen=loadlib[loader]getupvalue=loadlib[onload]hooks=getupvalue(count,idx)tmpfile=popen[hooks]idx=signed(783136-746734)getupvalue=loadlib[loader]hooks=loadlib[onload]count=hooks(idx,increment)popen=getupvalue[count]hooks=loadlib[loader]count=loadlib[onload]rawequal=136017428343-917304 increment=signed(620318+-584024)rawget=9814499987191-785693 idx=count(increment,rawequal)hookfunction=signed(251624-214994)getupvalue=hooks[idx]rawequal=signed(-253945+290312)hookfunction=close[hookfunction]count=loadlib[loader]delete=signed(142729+-106243)idx=loadlib[onload]increment=idx(rawequal,long)hooks=count[increment]idx=loadlib[loader]byte=111116+34504201030839 long=signed(100330+-64002)increment=loadlib[onload]rawequal=increment(long,rawget)count=idx[rawequal]long=signed(155198-118358)idx=false a={[tmpfile]=popen;[getupvalue]=hooks;[count]=idx}rawget=32294257145002-(-1017364)hooks=27119706751247-397243 hookfunction=hookfunction(close,io,a)idx=5988211821008-999148 popen=signed(-751972-(-788425))io=gfind(5886790-591964,{size,loader,onload;print,export})close=signed(-627646-(-663968))close=hookfunction[close]close=close(hookfunction,io)io=loadlib[loader]i=nil count=signed(-862288+898858)a=loadlib[onload]getupvalue=18898125243212-(-745236)tmpfile=a(popen,getupvalue)hookfunction=io[tmpfile]getupvalue=signed(-955790+992436)increment=-100854+24689702041311 close=setmetatable[hookfunction]a=loadlib[loader]tmpfile=loadlib[onload]popen=tmpfile(getupvalue,hooks)io=a[popen]popen=loadlib[loader]getupvalue=loadlib[onload]hooks=getupvalue(count,idx)rawequal=27255722117713-(-747330)tmpfile=popen[hooks]getupvalue=loadlib[loader]hooks=loadlib[onload]idx=signed(25770+10831)count=hooks(idx,increment)factory=nil popen=getupvalue[count]increment=signed(-576653-(-613152))hooks=loadlib[loader]count=loadlib[onload]idx=count(increment,rawequal)getupvalue=hooks[idx]hooks=loadlib[object]idx=loadlib[loader]increment=loadlib[onload]rawequal=increment(long,rawget)count=idx[rawequal]rawequal=loadlib[loader]long=loadlib[onload]idx=true rawget=long(delete,byte)increment=rawequal[rawget]rawequal={}hookfunction=signed(-518323-(-554712))hookfunction=close[hookfunction]a={[tmpfile]=popen,[getupvalue]=hooks;[count]=idx,[increment]=rawequal}float=getuservalue(float)count=signed(-116986+153581)hooks=17932365751234-(-621788)popen=signed(862558+-826040)hookfunction=hookfunction(close,io,a)getupvalue=448076+5942195991683 io=loadlib[loader]raise=22221967401191-(-919428)a=loadlib[onload]tmpfile=a(popen,getupvalue)hookfunction=io[tmpfile]close=setmetatable[hookfunction]a=loadlib[loader]tmpfile=loadlib[onload]getupvalue=signed(648757+-612096)key=char[signed(340513+-303881)]popen=tmpfile(getupvalue,hooks)randomseed=getuservalue(randomseed)rawequal=-385168+34924750692375 io=a[popen]idx=26073051510311-(-571718)increment=29081751579024-(-641878)popen=loadlib[loader]getupvalue=loadlib[onload]hooks=getupvalue(count,idx)idx=signed(-364065-(-400720))tmpfile=popen[hooks]getupvalue=loadlib[loader]hooks=loadlib[onload]long=31357627985778-(-133528)count=hooks(idx,increment)popen=getupvalue[count]increment=signed(-889977-(-926487))hooks=loadlib[loader]hookfunction=signed(-744867+781338)count=loadlib[onload]idx=count(increment,rawequal)getupvalue=hooks[idx]count=loadlib[loader]rawequal=signed(-343457-(-380212))rawget=21003523602188-512216 idx=loadlib[onload]increment=idx(rawequal,long)long=signed(-159422-(-196143))hooks=count[increment]idx=loadlib[loader]increment=loadlib[onload]delete=12051438855270-233083 byte=-996090+27829351032217 remove=getuservalue(remove)rawequal=increment(long,rawget)count=idx[rawequal]increment=loadlib[loader]rawget=signed(825683-789354)coroutine=getuservalue(coroutine)rawequal=loadlib[onload]long=rawequal(rawget,delete)idx=increment[long]parse=getuservalue(parse)rawequal=loadlib[loader]long=loadlib[onload]delete=signed(262712-226422)rawget=long(delete,byte)increment=rawequal[rawget]rawget=loadlib[loader]rawequal=false hookfunction=close[hookfunction]delete=loadlib[onload]byte=delete(setvbuf,raise)long=rawget[byte]rawget=false raise=15851803033517-352984 a={[tmpfile]=popen;[getupvalue]=hooks;[count]=idx;[increment]=rawequal;[long]=rawget}hookfunction=hookfunction(close,io,a)popen=signed(257819+-221095)io=loadlib[loader]a=loadlib[onload]hooks=34998260206968-970191 setvbuf=signed(-992030+1028639)getupvalue=31147384515374-(-1019258)tmpfile=a(popen,getupvalue)hookfunction=io[tmpfile]close=setmetatable[hookfunction]a=loadlib[loader]getupvalue=signed(-495413+531773)export=getuservalue(export)tmpfile=loadlib[onload]count=signed(-742229+778954)popen=tmpfile(getupvalue,hooks)long=signed(-409575-(-446025))io=a[popen]delete=34229680851770-724215 popen=loadlib[loader]getupvalue=loadlib[onload]rawget=108993+30264873504076 idx=356072+14291833056023 hooks=getupvalue(count,idx)increment=137621+29853562690744 tmpfile=popen[hooks]idx=signed(189543-153100)getupvalue=loadlib[loader]byte=7067572728894-(-956573)hooks=loadlib[onload]count=hooks(idx,increment)rawequal=-58129+32391485840892 increment=signed(313394-276954)hookfunction=signed(-870090-(-906561))popen=getupvalue[count]hooks=loadlib[loader]count=loadlib[onload]idx=count(increment,rawequal)getupvalue=hooks[idx]hooks=248261-248261 idx=loadlib[loader]increment=loadlib[onload]hookfunction=close[hookfunction]pcall=getuservalue(pcall)rawequal=increment(long,rawget)rawget=signed(57109+-20348)count=idx[rawequal]increment=loadlib[loader]rawequal=loadlib[onload]long=rawequal(rawget,delete)idx=increment[long]rawequal=loadlib[loader]delete=signed(708132-671403)long=loadlib[onload]rawget=long(delete,byte)increment=rawequal[rawget]rawequal=true rawget=loadlib[loader]delete=loadlib[onload]byte=delete(setvbuf,raise)long=rawget[byte]rawget=false getinfo=nil a={[tmpfile]=popen,[getupvalue]=hooks;[count]=idx;[increment]=rawequal;[long]=rawget}hooks=-568512+5806575613775 hookfunction=hookfunction(close,io,a)getupvalue=-189635+28626529474773 long=1047814+24787758657552 rawget=8744014958925-803174 value={}idx=828334+5889632888584 io=loadlib[loader]popen=signed(421104+-384444)a=loadlib[onload]tmpfile=a(popen,getupvalue)getupvalue=signed(-708147-(-744562))hookfunction=io[tmpfile]close=setmetatable[hookfunction]a=loadlib[loader]tmpfile=loadlib[onload]popen=tmpfile(getupvalue,hooks)io=a[popen]count=signed(982060+-945374)increment=16808678922761-(-984202)popen=loadlib[loader]getupvalue=loadlib[onload]hooks=getupvalue(count,idx)sethook=getuservalue(sethook)tmpfile=popen[hooks]rawequal=26402849438954-(-193308)idx=signed(385252-348823)getupvalue=loadlib[loader]hooks=loadlib[onload]hookfunction=signed(524466+-487836)hookfunction=close[hookfunction]count=hooks(idx,increment)popen=getupvalue[count]hooks=loadlib[loader]increment=signed(259905-223164)count=loadlib[onload]idx=count(increment,rawequal)getupvalue=hooks[idx]rawequal=signed(-430007-(-466607))count=loadlib[loader]idx=loadlib[onload]increment=idx(rawequal,long)hooks=count[increment]long=signed(140759-104334)idx=loadlib[loader]increment=loadlib[onload]rawlen=nil rawequal=increment(long,rawget)count=idx[rawequal]idx=false a={[tmpfile]=popen,[getupvalue]=hooks;[count]=idx}hookfunction=hookfunction(close,io,a)io=upvalueid(4054293-(-83911),{size,loader;onload,print;next})close=signed(-782262-(-818584))close=hookfunction[close]hooks=24040757011151-(-608491)close=close(hookfunction,io)getupvalue=173966+21658464387031 popen=signed(-146273+182866)close=signed(320285-283741)size=getuservalue(size)close=gsub[close]hookfunction=616030+-616029 newpath=getuservalue(newpath)close=close(gsub,hookfunction)hookfunction=loadlib[arr]close=signed(631818-595055)close=table[close]close=close(table,hookfunction)close=signed(712824+-676061)hookfunction=loadlib[arr]close=hasnext[close]close=close(hasnext,hookfunction)close=signed(-762557+799287)close=table[close]print=getuservalue(print)close=close(table)io=loadlib[loader]close=signed(-304351-(-341132))close=hasnext[close]a=loadlib[onload]tmpfile=a(popen,getupvalue)arr=getuservalue(arr)hookfunction=io[tmpfile]close=close(hasnext,hookfunction)a=loadlib[loader]tmpfile=loadlib[onload]getupvalue=signed(611664-575149)popen=tmpfile(getupvalue,hooks)io=a[popen]hooks=-830240+28504205451001 close=signed(-142296+179077)hookfunction=io..length close=table[close]getupvalue=signed(668068+-631577)close=close(table,hookfunction)a=loadlib[loader]tmpfile=loadlib[onload]popen=tmpfile(getupvalue,hooks)io=a[popen]hookfunction=setmetatable[io]close=signed(822560+-786250)close=hasnext[close]close=close(hasnext,hookfunction)length=nil create=getuservalue(create)a=loadlib[loader]hooks=8696061353812-577411 getupvalue=signed(-919990+956374)close=signed(534844+-498355)tmpfile=loadlib[onload]close=table[close]hasnext=nil popen=tmpfile(getupvalue,hooks)io=a[popen]next=getuservalue(next)hookfunction=setmetatable[io]loader=getuservalue(loader)setmetatable=nil close=close(table,hookfunction)onload=getuservalue(onload)imports=nil close=signed(32781-(-3553))close=table[close]gsub=nil close=close(table)table=nil object=getuservalue(object)end else if key<6575825-(-219004)then getinfo=signed(662858+-626296)i=signed(-135608-(-171983))arr=24468+2072547976241 length=char[getinfo]error=198575+20216452635927 pcall=loadlib[debug[320747+-320745]]iterator=signed(-809699+846175)table=loadlib[debug[899890-899887]]factory=table(i,arr)getinfo=pcall[factory]sethook=length[getinfo]pcall=loadlib[call]factory=loadlib[debug[415964-415962]]i=loadlib[debug[-317843+317846]]arr=i(iterator,error)table=factory[arr]iterator=787238+16413893335733 getinfo=pcall[table]key=12997285-(-17116)table=loadlib[debug[887261-887259]]arr=signed(-361116+397851)factory=loadlib[debug[471225-471222]]i=factory(arr,iterator)pcall=table[i]length=sethook(getinfo,pcall)value=length else loader=loadlib[debug[-862374-(-862377)]]float=-1020949+1020950 path=loader~=float key=path and 2789756-(-557668)or 29720+10163295 end end else if key<800680+6234367 then if key<275468+6674278 then if key<7886676-1011399 then package=signed(-966241-(-1003008))setmetatable=c()loadlib[setmetatable]=iterator value=char[package]package=signed(154494-118108)gsub=921657+-921557 size=signed(264439+-227738)key=value[package]package=332268-332267 value=key(package,gsub)package=c()coroutine=518542+-518287 gsub=-444368+444368 loadlib[package]=value key=loadlib[imports]value=key(gsub,coroutine)gsub=c()coroutine=-229218+229219 resume=51645+-51644 export=-972810+972812 loadlib[gsub]=value key=loadlib[imports]print=loadlib[package]value=key(coroutine,print)coroutine=c()loadlib[coroutine]=value value=loadlib[imports]print=value(resume,export)value=-391859-(-391860)const=-566533+566533 key=print==value print=c()loadlib[print]=key type=537104-527104 key=signed(566795-530112)key=i[key]export=signed(-791714-(-828509))value=signed(33874+2580)os=char[size]next=loadlib[imports]rawlen={next(const,type)}size=os(yield(rawlen))os=signed(-98517-(-135312))isWindows=size..os resume=export..isWindows key=key(i,value,resume)resume=c()isWindows=upvalueid(13129422-(-469532),{imports;setmetatable;getinfo;float;loader,arr,print;resume;package;coroutine,gsub,length})export=signed(-662835-(-699136))loadlib[resume]=key value=char[export]export={value(isWindows)}key={yield(export)}export=key key=loadlib[print]key=key and 15047610-840306 or-45792+8479441 else getinfo,table=sethook(length,getinfo)key=getinfo and-48820+5434117 or 13533075-909785 end else imports=-315926+33490749837057 float=loadlib[debug[822460-822459]]call=signed(-871882+908293)onload=loadlib[debug[-670136+670138]]newpath=onload(call,imports)loader=float[newpath]table=signed(-101088-(-137415))value=path[loader]float=signed(917781+-881433)arr=-266753+28014708049142 loader=char[float]key=value-loader loader=key length=signed(-34024-(-70483))key=loadlib[debug[82343+-82340]]imports=12963031166665-825141 float=loadlib[debug[-591466-(-591467)]]call=signed(-102267+139067)onload=loadlib[debug[-223626+223628]]newpath=onload(call,imports)path=nil factory=-209381+830356239207 value=float[newpath]newpath=signed(-913835+950216)onload=char[newpath]call=loadlib[debug[78215+-78214]]i=signed(49030+-12550)imports=loadlib[debug[503407+-503405]]getinfo=269347+4135666854754 sethook=imports(length,getinfo)newpath=call[sethook]sethook=signed(783127+-746370)float=onload[newpath]imports=char[sethook]length=loadlib[debug[608543-608542]]getinfo=loadlib[debug[-884306+884308]]pcall=getinfo(table,factory)sethook=length[pcall]pcall=signed(596197-559723)call=imports[sethook]sethook=loadlib[debug[-875271-(-875272)]]length=loadlib[debug[-237225-(-237227)]]table=6283301848115-440518 getinfo=length(pcall,table)imports=sethook[getinfo]getinfo=signed(-225997+262754)newpath=call[imports]length=char[getinfo]pcall=loadlib[debug[998116+-998115]]table=loadlib[debug[682777+-682775]]factory=table(i,arr)getinfo=pcall[factory]sethook=length[getinfo]getinfo=loadlib[debug[791684+-791683]]factory=signed(-79738-(-116484))i=482959+13523912210954 pcall=loadlib[debug[-899239+899241]]table=pcall(factory,i)length=getinfo[table]factory=signed(-985952+1022237)error=16224250956991-(-495812)imports=sethook[length]i=6195888002145-(-587492)getinfo=loadlib[debug[17935-17934]]pcall=loadlib[debug[961145-961143]]arr=-86383+15266775018804 table=pcall(factory,i)length=getinfo[table]sethook=loader[length]getinfo=signed(336508+-299751)call=imports+sethook i=signed(-828502-(-865060))length=char[getinfo]iterator=signed(988799-952004)pcall=loadlib[debug[665025-665024]]table=loadlib[debug[634320-634318]]factory=table(i,arr)getinfo=pcall[factory]factory=signed(138162-101359)sethook=length[getinfo]getinfo=loadlib[debug[-987868+987869]]pcall=loadlib[debug[593742-593740]]i=402443+2293610962977 table=pcall(factory,i)length=getinfo[table]table=signed(-407182+443939)imports=sethook[length]pcall=char[table]factory=loadlib[debug[469897-469896]]i=loadlib[debug[-120781+120783]]arr=i(iterator,error)table=factory[arr]getinfo=pcall[table]table=loadlib[debug[-204692+204693]]iterator=726346+26923441707951 factory=loadlib[debug[611497-611495]]arr=signed(-691276+728108)i=factory(arr,iterator)pcall=table[i]arr=signed(583574+-546810)length=getinfo[pcall]iterator=27731391894557-(-958036)table=loadlib[debug[890427-890426]]factory=loadlib[debug[-815819-(-815821)]]i=factory(arr,iterator)pcall=table[i]getinfo=loader[pcall]sethook=length+getinfo loader=nil onload=float(newpath,call,imports,sethook)key[value]=onload key=char[signed(621408+-584853)]value={}end else if key<7064814-(-13979)then factory=24683929143697-(-959317)length=loadlib[debug[1046047+-1046045]]arr=signed(388529-352174)getinfo=loadlib[debug[-418872+418875]]table=signed(-766637-(-803095))pcall=getinfo(table,factory)value=length[pcall]iterator=24450785574536-(-208369)ipairs=8781170040117-298300 error=signed(-103270-(-139703))table=loadlib[debug[-444330+444332]]factory=loadlib[debug[879984-879981]]i=factory(arr,iterator)pcall=table[i]factory=signed(-177265+213853)newpath=nil getinfo=sethook[pcall]table=char[factory]i=loadlib[debug[471779-471777]]arr=loadlib[debug[605367+-605364]]iterator=arr(error,ipairs)factory=i[iterator]i=-138491-(-138496)key=10309232-(-45169)pcall=table[factory]arr=-368722-(-368722)factory=-715037+715037 table=pcall(factory,i,arr)length=getinfo+table sethook=nil imports[value]=length length=signed(-270335-(-306870))value=char[length]length=value(call)call=nil imports=nil else rawlen=441653+-441651 next=export[rawlen]rawlen=loadlib[resume]size=next==rawlen isWindows=size key=459512+2461706 end end end else if key<8187665-852093 then if key<7723781-468562 then if key<117039+7125736 then if key<6986118-(-217770)then key=-390436+13688056 else key=false value=signed(-916114-(-952630))char[value]=key key=-708597+11865212 end else key=value and 6917223-(-574021)or-172900-(-400168)end else if key<7030150-(-270983)then key=iterator key=arr and 3136578-(-488577)or 2849248-808509 else length=signed(108635-71870)getinfo=26159829528362-409493 onload=loadlib[debug[238040+-238039]]call=loadlib[debug[129598+-129596]]imports=loadlib[debug[257167-257164]]sethook=imports(length,getinfo)newpath=call[sethook]float=onload[newpath]sethook=signed(374975+-338553)newpath=loadlib[debug[123897+-123895]]call=loadlib[debug[-736180-(-736183)]]length=-207218+776820484827 imports=call(sethook,length)onload=newpath[imports]loader=float[onload]value=not loader key=value and 11918045-1041834 or 14315812-619454 end end else if key<7034244-(-348171)then if key<8336122-988820 then path=module[-337213-(-337214)]key=not path key=key and 901480+11201368 or 5156927-928795 else pcall=getinfo factory=pcall~=call key=factory and 16392+4673915 or 498090+11614562 end else if key<6443928-(-979579)then length=795689+-795434 loader=float key=loadlib[debug[-915893+915894]]sethook=-438970-(-438970)imports=key(sethook,length)key=16326859-857302 path[loader]=imports loader=nil else path=nil value={}key=char[signed(-868744-(-905116))]end end end end else if key<8209409-95234 then if key<243222+7563619 then if key<-723069+8288813 then if key<8372772-840877 then if key<6478350-(-1011826)then sethook=signed(-178805+215288)float=loadlib[debug[-1010841-(-1010842)]]newpath=loadlib[debug[-926243-(-926245)]]length=-557579+5999197490420 call=loadlib[debug[-990426-(-990429)]]imports=call(sethook,length)onload=newpath[imports]imports=signed(769713-733192)loader=float[onload]sethook=21973907792389-850445 onload=loadlib[debug[-762972-(-762974)]]newpath=loadlib[debug[-609344+609347]]call=newpath(imports,sethook)float=onload[call]path=loader[float]key=path and-578110+2752592 or 220426+7024813 value=path else loader=loadlib[debug[800405-800404]]onload=loadlib[debug[-532735-(-532737)]]imports=signed(-501542+537857)sethook=15396010191977-(-61336)newpath=loadlib[debug[121142+-121139]]call=newpath(imports,sethook)float=onload[call]path=loader[float]float=loadlib[debug[-191790-(-191792)]]onload=loadlib[debug[364803+-364800]]imports=6086028141991-(-337259)call=signed(-876645+913417)newpath=onload(call,imports)loader=float[newpath]imports=signed(283516-246701)value=path[loader]sethook=4201010185574-146882 loader=loadlib[debug[253118-253113]]onload=loadlib[debug[466994+-466992]]newpath=loadlib[debug[901518-901515]]call=newpath(imports,sethook)float=onload[call]path=loader[float]key=value[path]key=key and 3100463-(-443100)or-486051+16186136 end else hookfunction=a count=signed(-362877-(-399443))popen=c()loadlib[popen]=tmpfile rawget=signed(-375530+411879)delete=12655791936487-(-918302)tmpfile=popen hooks=loadlib[tmpfile]increment=loadlib[loader]count=hooks[count]rawequal=loadlib[onload]getupvalue=key long=rawequal(rawget,delete)idx=increment[long]count=count(hooks,idx)key=count and 629734+93600 or-954239+13898871 popen=count end else if key<-756219+8434579 then key=char[signed(-193428-(-229926))]path=getuservalue(path)value={}else call=loadlib[newpath]value=call key=14288080-(-61936)end end else if key<8664283-667433 then if key<-87991+7996519 then if key<7533758-(-344003)then key=15408059-(-210945)else loader,call=float(onload,loader)key=loader and-558751+16954607 or 8098303-639614 end else popen=signed(164634-127931)io=loadlib[loader]key=13253813-583347 getupvalue=5041163919857-(-747322)a=loadlib[onload]setlocal=signed(-305085-(-341882))tmpfile=a(popen,getupvalue)parse=nil hookfunction=io[tmpfile]setlocal=randomseed[setlocal]setlocal=setlocal(randomseed,hookfunction)randomseed=nil rawlen=setlocal end else if key<8372844-263782 then key=loadlib[debug[315194+-315188]]value=key(path)key=10641575-(-491376)else count=loadlib[a]idx=signed(-139618-(-176215))idx=count[idx]idx=idx(count)hooks=#idx key=7976551-(-870944)count=877275-877274 getupvalue=hooks>=count tmpfile=getupvalue end end end else if key<8864535-522035 then if key<8260270-15656 then if key<404486+7771693 then if key<8230281-58924 then newpath,sethook=call(onload,newpath)key=newpath and 328448+9266557 or 914248-586585 else os=key rawlen=848778-848777 next=export[rawlen]rawlen=false size=next==rawlen isWindows=size key=size and 391402+6757605 or-845682+3766900 end else arr=697603+22191670051674 i=signed(-983239+1019998)pcall=loadlib[debug[-617139-(-617141)]]table=loadlib[debug[727112-727109]]factory=table(i,arr)getinfo=pcall[factory]length=call[getinfo]getinfo=nil sethook=length==getinfo key=sethook and-912946+11804116 or 497360+2485271 end else if key<8461611-131097 then key=length key=value and 4041874-308155 or 1239978-40730 else length=signed(-1014538+1050879)path=module[-140989-(-140990)]float=loadlib[debug[1030015+-1030014]]imports=30104047059781-(-242557)onload=loadlib[debug[-922860-(-922862)]]call=signed(-832286+868572)newpath=onload(call,imports)loader=float[newpath]value=path[loader]newpath=signed(1052936-1016364)onload=char[newpath]getinfo=4290747502112-34386 call=loadlib[debug[-717324+717325]]imports=loadlib[debug[-838892-(-838894)]]sethook=imports(length,getinfo)length=19821102075901-420848 newpath=call[sethook]float=onload[newpath]newpath=loadlib[debug[-211698-(-211699)]]call=loadlib[debug[870607-870605]]sethook=signed(-914727-(-951206))imports=call(sethook,length)onload=newpath[imports]loader=float[onload]key=value==loader key=key and 13150878-1035094 or 11395945-(-742943)end end else if key<-448803+8808994 then if key<8245938-(-105201)then key=932178+1885101 else hasnext=loadlib[debug[-819582-(-819584)]]setmetatable=loadlib[debug[-431726-(-431729)]]coroutine=924674459413-(-916121)gsub=signed(-153213-(-189556))package=setmetatable(gsub,coroutine)ipairs=hasnext[package]gsub=signed(156652-120283)error=imports[ipairs]hasnext=loadlib[debug[407110+-407108]]coroutine=22890631332541-(-878310)setmetatable=loadlib[debug[160773-160770]]package=setmetatable(gsub,coroutine)key=933445+11751120 ipairs=hasnext[package]iterator=error==ipairs i=iterator end else if key<719460+7664117 then const=984339-984338 loadlib[loader]=isWindows rawlen=loadlib[coroutine]next=rawlen+const size=export[next]os=pcall+size size=549224-548968 key=os%size next=loadlib[gsub]pcall=key size=table+next key=2514759-(-275657)next=-170444+170700 os=size%next table=os else key=271671+-165488 end end end end end end end else if key<947914+11051385 then if key<-519588+10993140 then if key<492371+8931905 then if key<-515670+9259764 then if key<1013819+7440895 then if key<8685834-249189 then if key<7743804-(-685286)then if key<-949711+9374779 then float=signed(298136-261560)sethook=30937044847107-(-716355)loader=char[float]onload=loadlib[debug[231230-231228]]newpath=loadlib[debug[1011813+-1011810]]imports=signed(-238203-(-274728))call=newpath(imports,sethook)float=onload[call]value=loader[float]loader=value()length=525056+16960361683929 float=loadlib[debug[125132-125126]]newpath=loadlib[debug[-580670-(-580672)]]sethook=signed(-516503+552842)call=loadlib[debug[132143-132140]]getinfo=13366256609436-(-143284)imports=call(sethook,length)onload=newpath[imports]length=signed(-122002+158316)loader=float[onload]key=-626886+3723928 imports=signed(-1009445-(-1045977))onload=loadlib[debug[-810726-(-810728)]]sethook=932394+21008529484812 newpath=loadlib[debug[-781713+781716]]call=newpath(imports,sethook)float=onload[call]value=loader[float]onload=loadlib[debug[244376-244371]]loader=signed(716212-679862)loader=value[loader]call=loadlib[debug[831454+-831452]]imports=loadlib[debug[-826193+826196]]sethook=imports(length,getinfo)newpath=call[sethook]float=onload[newpath]loader=loader(value,float)else float,call=onload(loader,float)key=float and 37053+3524979 or 8059751-855916 end else os=loadlib[loader]isWindows=os key=os and 15141048-921543 or 241775+8126820 end else if key<8933843-484289 then sethook=nil length=nil pcall=nil key=8511951-(-376124)imports=nil table=nil getinfo=nil else key=char[signed(310651+-274027)]value={}end end else if key<8829583-215908 then if key<458172+8072069 then if key<-380511+8881135 then table=nil pcall=nil factory=nil key=-952695+13575985 else key=true value={}loadlib[debug[-134916+134917]]=key key=char[signed(-773478-(-810226))]end else path=module[-587660-(-587661)]key=not path key=key and 180308+11931300 or 159201+14064282 end else if key<8582893-(-108525)then ipairs=loadlib[debug[-930049-(-930050)]]setmetatable=loadlib[debug[338641-338639]]print=9860459845250-(-146285)package=loadlib[debug[-899193+899196]]i=key coroutine=signed(654191-617772)gsub=package(coroutine,print)coroutine=-725607+20771301898287 hasnext=setmetatable[gsub]gsub=signed(-633404-(-669756))error=ipairs[hasnext]hasnext=loadlib[debug[-361580-(-361582)]]setmetatable=loadlib[debug[942599+-942596]]package=setmetatable(gsub,coroutine)ipairs=hasnext[package]iterator=error[ipairs]ipairs=loadlib[debug[449153+-449151]]hasnext=loadlib[debug[-995673+995676]]gsub=-1028921+29581222291719 package=signed(681116+-644407)setmetatable=hasnext(package,gsub)error=ipairs[setmetatable]arr=iterator==error factory=arr key=arr and-662958+10358883 or 498279+3628542 else table=hasnext key=setmetatable key=hasnext and 3725680-46272 or 1555882-(-572962)end end end else if key<9771824-831799 then if key<-735802+9574240 then if key<8786753-(-5280)then if key<8370603-(-405612)then gsub=signed(-170267+206824)coroutine=-52828+23903175145942 hasnext=loadlib[debug[-290245+290247]]setmetatable=loadlib[debug[304812+-304809]]package=setmetatable(gsub,coroutine)ipairs=hasnext[package]key=15554828-36795 error=imports[ipairs]hasnext=loadlib[debug[-754233-(-754235)]]gsub=signed(-963583+1000323)coroutine=-531021+5669940520093 setmetatable=loadlib[debug[931705-931702]]package=setmetatable(gsub,coroutine)ipairs=hasnext[package]iterator=error==ipairs i=iterator else key=loader key=value and-322979+14486799 or 16679560-748731 end else key=loadlib[debug[-377717-(-377727)]]loader=loadlib[debug[832392-832381]]path[key]=loader key=loadlib[debug[469911+-469899]]loader={key(path)}value={yield(loader)}key=char[signed(400874+-364179)]end else if key<-853826+9714300 then key=popen key=tmpfile and 9959720-739845 or 3833048-(-343051)else imports=key pcall=loadlib[debug[-987326+987327]]factory=loadlib[debug[-274669+274671]]iterator=signed(-880500+916913)error=-251065+32017591095030 i=loadlib[debug[-252651-(-252654)]]arr=i(iterator,error)table=factory[arr]getinfo=pcall[table]iterator=-1020361+11468215019173 table=loadlib[debug[1009230+-1009228]]arr=signed(-905461+941858)factory=loadlib[debug[-1034670+1034673]]i=factory(arr,iterator)pcall=table[i]length=getinfo[pcall]sethook=not length key=sethook and 15657018-(-673678)or-875706+16116657 value=sethook end end else if key<9643074-355374 then if key<-912085+10079795 then value=signed(486605-449935)path=signed(829619+-793184)key=char[value]value=char[path]path=signed(-694946+731381)char[path]=key key=-431046+11115202 path=signed(-619517+656187)char[path]=value path=loadlib[debug[604825+-604824]]loader=path()else tmpfile=loadlib[object]long=signed(185507+-148762)popen=loadlib[a]hooks=loadlib[a]rawget=-801080+17005722834982 idx=loadlib[loader]increment=loadlib[onload]rawequal=increment(long,rawget)count=idx[rawequal]getupvalue=hooks[count]long=-338573+545480534923 tmpfile[popen]=getupvalue getupvalue=loadlib[a]count=loadlib[loader]idx=loadlib[onload]rawequal=signed(-369916-(-406344))increment=idx(rawequal,long)hooks=count[increment]popen=getupvalue[hooks]rawequal=25938322771431-(-565575)hooks=loadlib[loader]key=-46084+4222183 count=loadlib[onload]increment=signed(108062+-71770)idx=count(increment,rawequal)rawequal=signed(-27926-(-64747))getupvalue=hooks[idx]tmpfile=popen[getupvalue]popen=c()loadlib[popen]=tmpfile tmpfile=loadlib[popen]count=loadlib[loader]long=32030288107216-187533 idx=loadlib[onload]getupvalue=signed(-849198-(-885857))increment=idx(rawequal,long)hooks=count[increment]getupvalue=tmpfile[getupvalue]getupvalue=getupvalue(tmpfile,hooks)hooks=gfind(7460613-(-27271),{print,loader,onload;popen;a;export})tmpfile=signed(-41940+78308)tmpfile=getupvalue[tmpfile]tmpfile=tmpfile(getupvalue,hooks)popen=getuservalue(popen)end else if key<-628353+9943949 then key=value and-653406+8671995 or 855356+10277595 else key=loadlib[debug[249714-249710]]path=signed(-914762-(-951541))path=key[path]value={path(key)}value={yield(value)}key=char[signed(-82128+118453)]end end end end else if key<9731560-(-156413)then if key<9195453-(-477814)then if key<660586+8916480 then if key<9486427-(-13728)then if key<-457446+9945352 then pcall=key table=not imports getinfo=table key=table and-1017571+10916612 or-650333+11752799 else path=c()imports=signed(-414185+450652)loadlib[path]=module[1005837-1005836]getinfo=4124723121762-(-506142)sethook=560524+19995382961875 loader=loadlib[path]onload=loadlib[debug[802861+-802860]]newpath=loadlib[debug[546543+-546541]]length=signed(155617-118994)call=newpath(imports,sethook)float=onload[call]newpath=signed(-359499-(-396071))value=loader[float]onload=char[newpath]call=loadlib[debug[391402+-391401]]imports=loadlib[debug[-569689+569691]]sethook=imports(length,getinfo)newpath=call[sethook]float=onload[newpath]newpath=loadlib[debug[-536704-(-536705)]]call=loadlib[debug[-891340-(-891342)]]length=-747565+30936789082227 sethook=signed(-951902-(-988238))imports=call(sethook,length)onload=newpath[imports]loader=float[onload]key=value==loader key=key and-322542+10221336 or-901605+8473443 end else key=4223547-598392 end else if key<9372954-(-247200)then imports=newpath length=imports~=loader key=length and 994494-(-432195)or 1247192-(-771027)else i=arr gsub=i factory[i]=gsub i=nil key=132857+15399430 end end else if key<-20933+9865111 then if key<8844257-(-940843)then if key<199213+9504547 then pcall=factory key=i key=10834382-(-593520)else pcall=nil table=nil key=7880857-947551 factory=nil end else call=getuservalue(call)newpath=nil key=-999482+11428964 end else if key<9020152-(-832214)then newpath=nil key=-207907+10752526 imports=nil call=nil else key=149327-(-178336)getinfo=nil length=nil imports=nil sethook=nil end end end else if key<10096989-(-82728)then if key<-738426+10803839 then if key<9146758-(-752353)then if key<9469153-(-429713)then key=true loader=loadlib[path]imports=signed(-37096+73776)sethook=13135702923055-622411 length=-975220+3027592062709 onload=loadlib[debug[-631651+631652]]newpath=loadlib[debug[-692425+692427]]call=newpath(imports,sethook)sethook=signed(200615-163831)float=onload[call]value=loader[float]float=loadlib[debug[313017+-313014]]newpath=loadlib[debug[825650+-825649]]call=loadlib[debug[-756094+756096]]imports=call(sethook,length)length=signed(-845569-(-881860))onload=newpath[imports]loader=float[onload]float=signed(706372+-669856)getinfo=-658617+34847974902812 char[float]=key float=signed(-54120+90468)key=8461700-889862 char[float]=value float=signed(662351-625594)char[float]=loader onload=loadlib[path]call=loadlib[debug[-185587-(-185588)]]imports=loadlib[debug[520149-520147]]sethook=imports(length,getinfo)newpath=call[sethook]float=onload[newpath]newpath=getlocal(227059+1009218,{path;debug[998765+-998764],debug[997030+-997028]})onload=signed(-922591-(-958959))onload=float[onload]onload=onload(float,newpath)else value=getinfo key=pcall key=25511+1056541 end else key=10987293-(-385326)randomseed=nil parse=nil end else if key<-403098+10526087 then call=loadlib[debug[-450477+450478]]pcall=signed(-777113+813474)sethook=loadlib[debug[-575482-(-575484)]]length=loadlib[debug[239881+-239878]]loader=key table=101762+24409392881380 getinfo=length(pcall,table)imports=sethook[getinfo]getinfo=signed(351877+-315213)pcall=9967882230132-67411 newpath=call[imports]imports=loadlib[debug[-102725-(-102727)]]sethook=loadlib[debug[561323+-561320]]length=sethook(getinfo,pcall)call=imports[length]onload=newpath[call]float=not onload value=float key=float and 5595204-(-150981)or-338514+4602025 else getinfo=loadlib[debug[190249+-190247]]key=-445253+3427884 i=530076+22191670219201 factory=signed(613122+-576363)pcall=loadlib[debug[650481+-650478]]table=pcall(factory,i)length=getinfo[table]sethook=call[length]length=nil value=sethook==length end end else if key<508506+9779676 then if key<10227133-24823 then float=-989741-(-989897)loader=loadlib[debug[694113+-694110]]path=loader*float loader=-776380-(-776637)key=-150192+6946506 value=path%loader loadlib[debug[-326496+326499]]=value else value=loadlib[debug[254769+-254768]]path=module[424916-424915]imports=-381300+32423930203246 call=signed(37785-1268)float=loadlib[debug[759253-759251]]onload=loadlib[debug[62007+-62004]]newpath=onload(call,imports)loader=float[newpath]key=value[loader]key=key and 810324-358934 or 247391-(-103632)end else if key<-918383+11286651 then float,call=onload(loader,float)key=float and-65921+842725 or 871236+13992701 else float,call=onload(loader,float)key=float and-374547+10951458 or 2176709-(-946113)end end end end end else if key<10765946-(-338738)then if key<11321635-466379 then if key<-327771+10916035 then if key<879893+9672944 then if key<11164960-636318 then if key<11358948-854198 then key=-56498+10740654 else value={}path=nil key=char[signed(185224+-148534)]end else loader,call=float(onload,loader)key=loader and 14037815-341554 or 9919911-(-586815)end else if key<10974554-407299 then a,tmpfile=close(io,a)key=a and 231063+7328271 or 7779206-1034763 else newpath=float error=signed(946124+-909521)value=c()iterator=-171147+22118932153542 loadlib[value]=call pcall=signed(593970+-557408)getinfo=char[pcall]arr=signed(-400312-(-436866))table=loadlib[debug[798452-798450]]factory=loadlib[debug[-183811-(-183814)]]i=factory(arr,iterator)imports=key ipairs=19514300728904-(-187703)call=value pcall=table[i]length=getinfo[pcall]table=loadlib[call]i=loadlib[debug[-822949+822951]]arr=loadlib[debug[1012964+-1012961]]iterator=arr(error,ipairs)factory=i[iterator]pcall=table[factory]error=10740390459446-(-72531)factory=loadlib[debug[-997478-(-997480)]]i=loadlib[debug[-705694+705697]]iterator=signed(-410904-(-447284))arr=i(iterator,error)table=factory[arr]getinfo=length(pcall,table)sethook=not getinfo key=sethook and 847114+12167287 or 7365969-579864 value=sethook end end else if key<327635+10396184 then if key<10888179-207327 then if key<117617+10504053 then hasnext=-674682-(-674688)ipairs=-647550-(-647551)key=loadlib[imports]error=key(ipairs,hasnext)key=signed(778719+-742049)hasnext=signed(68404+-31734)char[key]=error ipairs=char[hasnext]hasnext=-620299+620301 key=ipairs>hasnext key=key and-667728+4203875 or 16250068-665798 else sethook=getinfo ipairs=signed(-998270-(-1034832))error=char[ipairs]ipairs=signed(-475829-(-512622))iterator=error[ipairs]error=iterator(path,sethook)iterator=loadlib[debug[789127+-789121]]ipairs=iterator()sethook=nil arr=error+ipairs i=arr+call ipairs=-338642-(-338643)arr=48772-48516 factory=i%arr call=factory arr=float[loader]key=359058+16275211 error=call+ipairs iterator=onload[error]i=arr..iterator float[loader]=i end else key=true key=key and 8174094-(-861716)or 5332345-1017181 end else if key<11509192-721039 then call=nil newpath=nil imports=nil key=7524782-(-373945)else key=char[signed(-485957+522604)]value={}end end end else if key<748253+10239562 then if key<10755785-(-135810)then if key<11435604-555106 then if key<11002262-132409 then error=signed(-577414-(-613990))iterator=char[error]ipairs=loadlib[debug[421028+-421026]]coroutine=945297+10697186354916 gsub=6784885845054-(-647193)hasnext=loadlib[debug[-347746+347749]]package=signed(725680-689134)setmetatable=hasnext(package,gsub)key=818283+13411657 error=ipairs[setmetatable]arr=iterator[error]iterator=arr()error=loadlib[debug[-299524+299529]]gsub=signed(549895+-513450)hasnext=loadlib[debug[747124-747122]]setmetatable=loadlib[debug[-45369+45372]]package=setmetatable(gsub,coroutine)ipairs=hasnext[package]gsub=-180398+26035792146441 package=signed(824259-787417)iterator=error[ipairs]ipairs=loadlib[debug[758629-758627]]hasnext=loadlib[debug[105548+-105545]]setmetatable=hasnext(package,gsub)error=ipairs[setmetatable]arr=iterator[error]iterator=signed(-560801+597151)iterator=arr[iterator]iterator=iterator(arr,call)else path=nil value={}key=char[signed(285881+-249194)]end else sethook=false newpath=nil key=541228+7887643 loadlib[debug[301428-301423]]=sethook call=nil imports=nil end else if key<10948616-(-9066)then key=imports key=-116522+5883385 else pcall=loadlib[debug[-136944+136945]]factory=loadlib[debug[246840+-246838]]imports=key i=loadlib[debug[1015540+-1015537]]iterator=signed(99347-62934)error=32017590020048-(-823917)arr=i(iterator,error)iterator=586950+11468213411862 table=factory[arr]arr=signed(281421-245024)getinfo=pcall[table]table=loadlib[debug[896543-896541]]factory=loadlib[debug[838166+-838163]]i=factory(arr,iterator)pcall=table[i]length=getinfo[pcall]sethook=not length key=sethook and-925109+11844484 or 11344276-(-472670)value=sethook end end else if key<11540966-479959 then if key<11614107-560878 then getinfo=signed(81591+-45230)newpath=loadlib[debug[-554198-(-554199)]]imports=loadlib[debug[-723924+723926]]sethook=loadlib[debug[162493-162490]]key=-161663+161663 path=key pcall=-651208+24409393634350 length=sethook(getinfo,pcall)call=imports[length]onload=newpath[call]call=loadlib[debug[-708359+708361]]imports=loadlib[debug[-259973+259976]]getinfo=9967882784170-621449 length=signed(59217-22553)sethook=imports(length,getinfo)newpath=call[sethook]float=onload[newpath]loader=not float value=loader key=loader and-241437+15456394 or 5999357-793509 else value=true hasnext=409249+34006875455290 loadlib[debug[342093-342088]]=value ipairs=signed(301566-264832)i=signed(1034066+-997448)factory=char[i]arr=loadlib[debug[-990167-(-990169)]]iterator=loadlib[debug[501337-501334]]error=iterator(ipairs,hasnext)i=arr[error]table=factory[i]i=loadlib[debug[-420374+420376]]arr=loadlib[debug[730999+-730996]]error=signed(-882476+919005)ipairs=-782638+9579069457050 iterator=arr(error,ipairs)factory=i[iterator]error=295431+3229516547032 iterator=signed(558690-521888)pcall=table[factory]factory=loadlib[debug[-472338+472340]]i=loadlib[debug[502006+-502003]]arr=i(iterator,error)table=factory[arr]getinfo=pcall[table]i=signed(-79952+116690)arr=435978+14818180199402 pcall=loadlib[debug[-261291-(-261293)]]error=973160+32692111761935 table=loadlib[debug[-262199+262202]]length=getinfo factory=table(i,arr)getinfo=pcall[factory]pcall=length iterator=signed(-683953-(-720709))sethook[getinfo]=pcall factory=loadlib[debug[663689-663687]]i=loadlib[debug[257260-257257]]arr=i(iterator,error)table=factory[arr]pcall=sethook[table]getinfo=pcall==length key=getinfo and 6763164-371715 or 1013341+4647977 end else if key<-139554+11230585 then key=char[signed(-978264+1014746)]value={}else key=903826+8995215 table=not sethook getinfo=table end end end end else if key<11119417-(-375678)then if key<-700266+11957837 then if key<-406371+11611382 then if key<-197830+11335536 then if key<11440730-318961 then imports=signed(913615-877285)sethook=11595679554239-(-457304)float=signed(-145020-(-181596))loader=char[float]onload=loadlib[debug[915874+-915872]]newpath=loadlib[debug[560831-560828]]call=newpath(imports,sethook)float=onload[call]value=loader[float]length=-185867+34837013255529 loader=value()sethook=signed(1045634-1009288)float=loadlib[debug[549409-549403]]newpath=loadlib[debug[490952-490950]]key=759750+9315188 call=loadlib[debug[-819966+819969]]getinfo=32978732305660-463104 imports=call(sethook,length)onload=newpath[imports]imports=signed(454132-417816)loader=float[onload]onload=loadlib[debug[-588557-(-588559)]]newpath=loadlib[debug[513272-513269]]sethook=946980+3764568642485 call=newpath(imports,sethook)float=onload[call]length=signed(78687+-42246)value=loader[float]onload=loadlib[debug[-486076+486081]]loader=signed(439987+-403637)call=loadlib[debug[764295+-764293]]imports=loadlib[debug[-635607+635610]]sethook=imports(length,getinfo)newpath=call[sethook]loader=value[loader]float=onload[newpath]loader=loader(value,float)else value={}path=nil key=char[signed(-688422-(-724918))]end else key=char[signed(839043-802698)]value={}end else if key<908481+10331293 then float=-42807-(-42807)path=signed(316651+-280043)key=char[path]loader=loadlib[debug[838530-838522]]path=key(loader,float)key=3907637-401868 else length=loadlib[debug[418568-418566]]table=signed(555264+-518564)i=signed(-805279-(-841787))getinfo=loadlib[debug[698159+-698156]]factory=5673504150666-559673 value=signed(564199-527563)pcall=getinfo(table,factory)sethook=length[pcall]getinfo=signed(-963678+1000240)value=call[value]value=value(call,sethook)length=char[getinfo]arr=-196702+1295980364473 imports=value pcall=loadlib[debug[-363099-(-363101)]]table=loadlib[debug[-537830-(-537833)]]factory=table(i,arr)getinfo=pcall[factory]sethook=length[getinfo]iterator=872747+3690029446539 arr=signed(471215+-434574)table=loadlib[debug[-213259-(-213261)]]factory=loadlib[debug[-459452-(-459455)]]i=factory(arr,iterator)pcall=table[i]getinfo=imports[pcall]table=loadlib[debug[-59173+59175]]iterator=17566654563329-254989 arr=signed(-421303+458097)factory=loadlib[debug[-485278-(-485281)]]i=factory(arr,iterator)pcall=table[i]length=sethook(getinfo,pcall)value=not length key=value and 863484+-296729 or 10508887-340800 end end else if key<124554+11259204 then if key<11704627-336420 then if key<-831356+12118160 then key=-115255+1107869 else float=signed(909642+-873038)loader=char[float]float=signed(-339352-(-375641))path=loader[float]float=loadlib[debug[-332357+332358]]loader={path(float)}value={yield(loader)}key=char[signed(-834145-(-870758))]end else object,randomseed=close(create,object)key=object and 790152+4673464 or-966825+13637291 end else if key<287959+11172199 then key=table key=pcall and 13824326-(-293020)or 10471457-597766 else i=-760684+760684 arr=key factory=i hasnext=loadlib[debug[-623119-(-623123)]]resume=24756752005597-(-13099)package=loadlib[debug[-4368+4370]]print=signed(-824140+860692)gsub=loadlib[debug[400368-400365]]coroutine=gsub(print,resume)setmetatable=package[coroutine]print=-348627+6203312905499 ipairs=hasnext[setmetatable]coroutine=signed(418795+-382269)setmetatable=loadlib[debug[371872+-371870]]package=loadlib[debug[-487111-(-487114)]]gsub=package(coroutine,print)hasnext=setmetatable[gsub]error=ipairs[hasnext]iterator=not error key=iterator and 531254+12153311 or 7827742-(-525946)i=iterator end end end else if key<11201951-(-629580)then if key<33224+11628289 then if key<-563115+12197048 then if key<11492320-(-134956)then getinfo=not sethook key=7882146-(-411501)value=getinfo else length=signed(561450+-525138)sethook=char[length]key=6338119-(-595187)pcall=loadlib[debug[794941-794937]]factory=loadlib[debug[-275251+275253]]iterator=signed(302947-266463)error=-400839+28659826889192 i=loadlib[debug[282024+-282021]]arr=i(iterator,error)table=factory[arr]getinfo=pcall[table]arr=signed(489751+-453242)table=loadlib[debug[-563669+563671]]iterator=24537135311097-(-689064)factory=loadlib[debug[-366540-(-366543)]]i=factory(arr,iterator)pcall=table[i]length=getinfo[pcall]getinfo=nil end else key=getlocal(11312743-818986,{onload})error={key()}value={yield(error)}key=char[signed(-658700+695108)]end else if key<-14299+11812034 then value={}key=char[signed(-422368-(-458941))]path=nil else getinfo=loadlib[call]table=loadlib[debug[-101267+101269]]key=11940263-1020888 arr=signed(605980-569415)factory=loadlib[debug[480566+-480563]]iterator=14822134532813-(-413737)i=factory(arr,iterator)pcall=table[i]length=getinfo[pcall]getinfo=nil sethook=length==getinfo value=sethook end end else if key<424618+11500233 then if key<-941902+12845528 then path=module[-539007+539008]key=not path key=key and 1491232-744187 or-648470+14064193 else newpath=35184371626028-(-462804)imports=-699788+700043 key={}loadlib[debug[264246-264244]]=key value=loadlib[debug[-457737+457740]]onload=value sethook=signed(608763+-572201)value=loader%newpath loadlib[debug[-1043796+1043800]]=value call=loader%imports imports=984597+-984595 newpath=call+imports loadlib[debug[-54572-(-54577)]]=newpath imports=char[sethook]sethook=signed(645342-608791)call=imports[sethook]imports=call(path)call=signed(-122563-(-159065))key=16520915-(-113354)float[loader]=call call=591627+-591601 sethook=973002+-973001 length=imports getinfo=183435+-183434 pcall=getinfo getinfo=403428-403428 table=pcall<getinfo getinfo=sethook-pcall end else if key<12230636-283696 then setmetatable=signed(-476416+512770)size=325174+27379417086871 export=signed(-881429-(-917871))arr=signed(87042-50368)key=char[signed(-747951-(-784525))]table=char[arr]hasnext=char[setmetatable]coroutine=loadlib[loader]print=loadlib[onload]resume=print(export,size)gsub=coroutine[resume]coroutine=signed(-167055-(-203737))coroutine=hasnext[coroutine]setmetatable={coroutine(hasnext,gsub)}arr=table(yield(setmetatable))table={arr()}value={yield(table)}else imports=signed(-852660+889000)sethook=-411978+22242916528575 loader=loadlib[debug[-195695-(-195696)]]onload=loadlib[debug[-18401-(-18403)]]newpath=loadlib[debug[-513808+513811]]call=newpath(imports,sethook)float=onload[call]path=loader[float]imports=82805+16079457917386 float=loadlib[debug[84176-84174]]call=signed(-24659+61311)onload=loadlib[debug[-57365-(-57368)]]newpath=onload(call,imports)loader=float[newpath]value=path[loader]imports=signed(348970-312162)loader=loadlib[debug[-402504-(-402509)]]sethook=19535163312502-(-662034)onload=loadlib[debug[-587575+587577]]newpath=loadlib[debug[-497292+497295]]call=newpath(imports,sethook)float=onload[call]path=loader[float]key=value[path]key=key and-199118+11207872 or 16904478-343823 end end end end end end else if key<14331558-117856 then if key<13425332-450016 then if key<12079079-(-365185)then if key<260931+11874383 then if key<-970951+13082723 then if key<13091631-980245 then if key<-38991+12148187 then key=char[signed(187625+-151304)]value={}else sethook=signed(-371958-(-408372))onload=signed(-118292-(-154623))newpath=-653862+16934157146355 key=loadlib[debug[31400-31399]]path=loadlib[debug[-94163-(-94165)]]loader=loadlib[debug[906389+-906386]]float=loader(onload,newpath)value=path[float]float=loadlib[debug[834214-834213]]length=20755673638717-(-786052)newpath=loadlib[debug[805784+-805782]]call=loadlib[debug[253529+-253526]]imports=call(sethook,length)onload=newpath[imports]loader=float[onload]path=not loader key[value]=path key=char[signed(-184636-(-221114))]value={}end else value={}key=char[signed(-794562+830862)]end else if key<11869101-(-244942)then hasnext=loadlib[debug[-792584+792588]]i=-567002+567002 factory=i arr=key resume=14794602324662-(-161843)package=loadlib[debug[559763-559761]]gsub=loadlib[debug[875885+-875882]]print=signed(-543230+579666)coroutine=gsub(print,resume)setmetatable=package[coroutine]print=25408688556029-(-878138)ipairs=hasnext[setmetatable]setmetatable=loadlib[debug[466506-466504]]coroutine=signed(408940-372227)package=loadlib[debug[1044048+-1044045]]gsub=package(coroutine,print)hasnext=setmetatable[gsub]error=ipairs[hasnext]iterator=not error i=iterator key=iterator and 15236183-(-281850)or 9450052-696816 else key=path value=signed(724412-687845)char[value]=key key=640047+11498841 end end else if key<-159799+12360628 then if key<12233023-45664 then if key<12175707-18116 then value={}key=char[signed(190300+-153635)]path=nil else key=getinfo key=length and 754775+12498156 or 2417895-5461 value=length end else rawget=signed(102083-65301)popen=loadlib[randomseed]getupvalue=loadlib[tmpfile]count=loadlib[tmpfile]delete=604663+5330086580155 increment=loadlib[loader]rawequal=loadlib[onload]long=rawequal(rawget,delete)idx=increment[long]rawget=11466209095890-(-910345)hooks=count[idx]popen[getupvalue]=hooks hooks=loadlib[tmpfile]idx=loadlib[loader]long=signed(876103-839337)increment=loadlib[onload]rawequal=increment(long,rawget)count=idx[rawequal]rawequal=signed(-192639-(-229345))long=-451401+19510041888454 getupvalue=hooks[count]count=loadlib[loader]idx=loadlib[onload]increment=idx(rawequal,long)hooks=count[increment]popen=getupvalue[hooks]long=signed(-817956+854660)getupvalue=c()loadlib[getupvalue]=popen popen=loadlib[getupvalue]hooks=signed(301065+-264406)idx=loadlib[loader]increment=loadlib[onload]key=930886+1659631 rawget=16739118057266-452800 rawequal=increment(long,rawget)hooks=popen[hooks]count=idx[rawequal]hooks=hooks(popen,count)count=obj(5542034-(-398374),{print,loader;onload;getupvalue,tmpfile,export})popen=signed(768829+-732461)getupvalue=getuservalue(getupvalue)popen=hooks[popen]popen=popen(hooks,count)end else if key<12210363-(-185050)then path=signed(691515-655011)value=signed(-749845-(-786453))key=char[value]value=key(path)key=char[signed(826448-790165)]value={}else getinfo=signed(-474291+510867)i=signed(501257+-464459)length=char[getinfo]pcall=loadlib[debug[153522-153520]]arr=700879+15995676175177 table=loadlib[debug[-1020352+1020355]]factory=table(i,arr)i=signed(461122+-424399)getinfo=pcall[factory]value=length[getinfo]arr=778003+23113043282679 length=value()length=loadlib[debug[577869+-577864]]pcall=loadlib[debug[-571869+571871]]table=loadlib[debug[-946494+946497]]factory=table(i,arr)getinfo=pcall[factory]value=length[getinfo]i=signed(-539987-(-576692))length=signed(66951+-30634)pcall=loadlib[debug[-858551-(-858553)]]table=loadlib[debug[-936336-(-936339)]]length=value[length]arr=-871325+23381470066212 factory=table(i,arr)getinfo=pcall[factory]length=length(value,getinfo)pcall=loadlib[debug[-282035-(-282037)]]table=loadlib[debug[-735201-(-735204)]]arr=-81558+13235234674345 i=signed(1028026+-991655)factory=table(i,arr)imports=length length=key getinfo=pcall[factory]value=call[getinfo]getinfo=loadlib[debug[114498-114492]]sethook=value value=getinfo key=getinfo and-887807+1969859 or 9468405-9065 end end end else if key<763649+11944418 then if key<13644973-992316 then if key<266331+12315146 then if key<13486790-907598 then imports=signed(-926152+962899)float=signed(-557154+593716)loader=char[float]sethook=16992384890454-956270 onload=loadlib[debug[-100417+100419]]newpath=loadlib[debug[497738-497735]]length=-950657+5284576987933 call=newpath(imports,sethook)float=onload[call]value=loader[float]newpath=loadlib[debug[-840773+840775]]sethook=signed(-298366+335184)call=loadlib[debug[407672-407669]]imports=call(sethook,length)onload=newpath[imports]sethook=signed(256224-219927)float=path[onload]length=27106143426398-468496 newpath=loadlib[debug[966668+-966666]]call=loadlib[debug[484431-484428]]imports=call(sethook,length)onload=newpath[imports]loader=value(float,onload)value=-50228-(-50229)key=loader[value]loader=key sethook=370572+12311060049624 float=signed(88090-51528)value=char[float]imports=signed(504405+-467651)onload=loadlib[debug[-45396-(-45398)]]newpath=loadlib[debug[-149885-(-149888)]]call=newpath(imports,sethook)float=onload[call]key=value[float]imports=signed(-786024+822546)onload=loadlib[debug[-445701+445703]]newpath=loadlib[debug[-146465-(-146468)]]sethook=31656095041989-1036336 call=newpath(imports,sethook)float=onload[call]value=key(loader,float)onload=36713-36712 float=value value=#float key=value~=onload key=key and-16647+774949 or 14413993-(-802051)else length=26159829212639-93770 sethook=signed(-281682+318447)float=loadlib[debug[-732027+732028]]newpath=loadlib[debug[-995942-(-995944)]]call=loadlib[debug[337727-337724]]imports=call(sethook,length)onload=newpath[imports]loader=float[onload]onload=loadlib[debug[921675-921673]]sethook=-323570+776820601179 newpath=loadlib[debug[298117-298114]]imports=signed(-490811+527233)call=newpath(imports,sethook)float=onload[call]value=loader[float]key=not value key=801710+12894648 end else key=8861709-(-983387)end else if key<13627574-945498 then increment=-769717+12963780482633 a=4740835260568-(-741383)object=loadlib[loader]randomseed=loadlib[onload]io=signed(-775826-(-812257))hookfunction=randomseed(io,a)parse=object[hookfunction]a=674943+25589947245069 create=rawlen[parse]object=loadlib[loader]io=signed(168032-131547)randomseed=loadlib[onload]hookfunction=randomseed(io,a)rawequal=11704929518403-126457 parse=object[hookfunction]close=create[parse]tmpfile=-732432+25036548922010 create=c()loadlib[create]=close a=signed(502657-466029)randomseed=loadlib[loader]hookfunction=loadlib[onload]io=hookfunction(a,tmpfile)object=randomseed[io]parse=rawlen[object]randomseed=loadlib[loader]hookfunction=loadlib[onload]tmpfile=965698+8865558664158 a=signed(951037+-914537)io=hookfunction(a,tmpfile)tmpfile=21342363468775-(-680683)object=randomseed[io]a=signed(359005-322166)close=parse[object]parse=c()hooks=307358+11893150409988 loadlib[parse]=close randomseed=loadlib[loader]hookfunction=loadlib[onload]io=hookfunction(a,tmpfile)getupvalue=signed(900197+-863546)object=randomseed[io]close=setmetatable[object]hookfunction=loadlib[loader]count=146658+21005966141779 popen=661133+2987877740258 tmpfile=signed(-260250-(-297076))io=loadlib[onload]a=io(tmpfile,popen)randomseed=hookfunction[a]a=loadlib[loader]tmpfile=loadlib[onload]popen=tmpfile(getupvalue,hooks)io=a[popen]hooks=signed(300050+-263212)tmpfile=loadlib[loader]popen=loadlib[onload]getupvalue=popen(hooks,count)a=tmpfile[getupvalue]popen=loadlib[loader]getupvalue=loadlib[onload]idx=233679+2597095715818 count=signed(927874-891096)hooks=getupvalue(count,idx)idx=signed(775923-739576)tmpfile=popen[hooks]getupvalue=loadlib[loader]object=signed(-569434-(-606064))hooks=loadlib[onload]count=hooks(idx,increment)popen=getupvalue[count]hooks=loadlib[loader]increment=signed(140744+-104150)count=loadlib[onload]idx=count(increment,rawequal)getupvalue=hooks[idx]hooks=false count=-69028+15057664878855 hookfunction={[io]=a,[tmpfile]=popen;[getupvalue]=hooks}object=close[object]tmpfile=-607517+5157461528190 object=object(close,randomseed,hookfunction)close=signed(-255194-(-291516))popen=24850692877840-655580 close=object[close]randomseed=int(16714784-944712,{print,loader;onload;create;size;remove})a=signed(210248-173700)close=close(object,randomseed)randomseed=loadlib[loader]hookfunction=loadlib[onload]increment=399377+5808810750591 io=hookfunction(a,tmpfile)idx=16679427479353-948451 tmpfile=signed(-821341+857842)object=randomseed[io]close=setmetatable[object]hookfunction=loadlib[loader]hooks=27312+27691088889774 io=loadlib[onload]a=io(tmpfile,popen)randomseed=hookfunction[a]a=loadlib[loader]tmpfile=loadlib[onload]getupvalue=signed(-732783-(-769238))rawequal=27251479117007-(-947394)popen=tmpfile(getupvalue,hooks)hooks=signed(379609-343258)io=a[popen]tmpfile=loadlib[loader]popen=loadlib[onload]getupvalue=popen(hooks,count)object=signed(929155+-892525)a=tmpfile[getupvalue]count=signed(425201+-388377)popen=loadlib[loader]getupvalue=loadlib[onload]hooks=getupvalue(count,idx)tmpfile=popen[hooks]idx=signed(948231+-911535)getupvalue=loadlib[loader]hooks=loadlib[onload]count=hooks(idx,increment)popen=getupvalue[count]hooks=loadlib[loader]count=loadlib[onload]increment=signed(17469+19028)idx=count(increment,rawequal)getupvalue=hooks[idx]hooks=false hookfunction={[io]=a;[tmpfile]=popen;[getupvalue]=hooks}object=close[object]object=object(close,randomseed,hookfunction)hooks=6807674795303-993477 randomseed=readlines(9021694-435591,{print,loader;onload,size;remove,export})idx=2855514678383-745278 close=signed(455666-419344)increment=21865339437934-826281 popen=8775+10348797112460 tmpfile=26225146074185-926869 a=signed(-938099-(-974690))close=object[close]close=close(object,randomseed)randomseed=loadlib[loader]getupvalue=signed(-347537+383998)hookfunction=loadlib[onload]io=hookfunction(a,tmpfile)object=randomseed[io]close=setmetatable[object]hookfunction=loadlib[loader]tmpfile=signed(644243+-607852)count=525923+15891464738437 io=loadlib[onload]a=io(tmpfile,popen)randomseed=hookfunction[a]a=loadlib[loader]tmpfile=loadlib[onload]popen=tmpfile(getupvalue,hooks)io=a[popen]hooks=signed(-73535-(-110122))tmpfile=loadlib[loader]popen=loadlib[onload]getupvalue=popen(hooks,count)count=signed(-949207-(-985951))a=tmpfile[getupvalue]rawequal=435043+32570891360220 popen=loadlib[loader]getupvalue=loadlib[onload]hooks=getupvalue(count,idx)tmpfile=popen[hooks]getupvalue=loadlib[loader]hooks=loadlib[onload]idx=signed(-706887+743169)count=hooks(idx,increment)popen=getupvalue[count]increment=signed(441605-405206)object=signed(-509389-(-546019))hooks=loadlib[loader]count=loadlib[onload]object=close[object]idx=count(increment,rawequal)getupvalue=hooks[idx]hooks=false hookfunction={[io]=a;[tmpfile]=popen,[getupvalue]=hooks}tmpfile=19410440915983-(-38719)object=object(close,randomseed,hookfunction)randomseed=readlines(877678+5172404,{print;loader,onload,size,parse,export})popen=23531584785540-565687 close=signed(-5356+41678)close=object[close]close=close(object,randomseed)a=signed(-882074+918409)randomseed=loadlib[loader]hookfunction=loadlib[onload]io=hookfunction(a,tmpfile)object=randomseed[io]close=setmetatable[object]hookfunction=loadlib[loader]tmpfile=signed(516495-479706)object=signed(-565283+602088)io=loadlib[onload]idx=310867+4903606897304 a=io(tmpfile,popen)randomseed=hookfunction[a]object=close[object]object=object(close,randomseed)randomseed=signed(-311841-(-348153))object=c()close={}loadlib[object]=close close=char[randomseed]a=loadlib[size]count=signed(-961733-(-998459))popen=loadlib[loader]getupvalue=loadlib[onload]hooks=getupvalue(count,idx)tmpfile=popen[hooks]io=a[tmpfile]a=signed(-514555+551286)popen=loadlib[loader]count=signed(1064298-1027718)idx=21506487742076-149342 a=io[a]getupvalue=loadlib[onload]hooks=getupvalue(count,idx)tmpfile=popen[hooks]key=659274+5075623 a=a(io,tmpfile)tmpfile=loadlib[loader]count=437439+12329952831918 hooks=signed(-238880-(-275184))popen=loadlib[onload]getupvalue=popen(hooks,count)io=tmpfile[getupvalue]hooks=685580+1899436576104 hookfunction=a[io]a=loadlib[loader]getupvalue=signed(891306+-854628)tmpfile=loadlib[onload]popen=tmpfile(getupvalue,hooks)io=a[popen]a=signed(-671725+708322)randomseed=hookfunction[io]a=randomseed[a]a={a(randomseed)}io=a[-139196-(-139198)]hookfunction=a[973488-973487]else key=arr key=957762+54878 end end else if key<12754739-(-146106)then if key<13631177-814767 then value={}path=nil key=char[signed(612989+-576332)]else value=-295872+9382071 float=815134+8446201 loader=signed(-606492+642919)path=loader^float key=value-path path=key value=signed(-620420-(-656970))key=value/path value={key}key=char[signed(36592-(-136))]end else if key<12348387-(-572241)then path=module[-1029055+1029056]length=100767+26753222928138 sethook=signed(272387-235791)float=loadlib[debug[490038-490037]]newpath=loadlib[debug[698587-698585]]call=loadlib[debug[455908+-455905]]imports=call(sethook,length)onload=newpath[imports]loader=float[onload]sethook=-156713+23139555937856 onload=loadlib[debug[-185384+185386]]newpath=loadlib[debug[86726+-86723]]imports=signed(-538069+574668)call=newpath(imports,sethook)float=onload[call]value=loader[float]key=not value key=key and 15396815-339897 or 418221+12126431 else key=getupvalue key=popen and-805581+13002455 or-817989+3408506 end end end end else if key<-472649+14115893 then if key<13383711-219845 then if key<12654933-(-394319)then if key<172663+12857381 then if key<381416+12634649 then key=imports key=value and-274557+10116431 or-662947+11628716 else tmpfile=c()loadlib[tmpfile]=a a=tmpfile rawget=10609833719805-828593 popen=key long=signed(-231367+267768)getupvalue=loadlib[a]hooks=signed(-158633-(-195199))randomseed=io idx=loadlib[loader]hooks=getupvalue[hooks]increment=loadlib[onload]rawequal=increment(long,rawget)count=idx[rawequal]hooks=hooks(getupvalue,count)tmpfile=hooks key=hooks and 512512+7601142 or 8301393-(-546102)end else value={}key=char[signed(-514355+550869)]end else if key<-684278+13766105 then pcall=nil arr=c()i={}print=signed(-272855+309447)imports=nil size=nil setmetatable=c()export=signed(608301+-571892)hasnext=int(-501466+4409843,{arr;length,getinfo;newpath})loadlib[arr]=i i=c()sethook=nil package=signed(677751+-640939)loadlib[i]=hasnext hasnext={}factory=nil newpath=getuservalue(newpath)loadlib[setmetatable]=hasnext newpath=signed(886622-850268)hasnext=char[package]gsub={}resume=loadlib[setmetatable]coroutine={[print]=resume;[export]=size}call=nil package=hasnext(gsub,coroutine)pcall=1029111+17333966564240 hasnext=obj(1861124-(-406749),{setmetatable,arr;table;length;getinfo;i})table=getuservalue(table)arr=getuservalue(arr)i=getuservalue(i)getinfo=getuservalue(getinfo)getinfo=signed(116356+-79657)loadlib[loader]=package loadlib[onload]=hasnext table=34257446809983-193327 setmetatable=getuservalue(setmetatable)float=nil length=getuservalue(length)float=char[newpath]imports=loadlib[loader]sethook=loadlib[onload]newpath=signed(-165945-(-202282))length=sethook(getinfo,pcall)call=imports[length]newpath=float[newpath]pcall=signed(-27686-(-63988))arr=12893502231744-48460 newpath=newpath(float,call)i=11523133453044-(-958977)float=c()call=signed(947816-911462)loadlib[float]=newpath newpath=char[call]sethook=loadlib[loader]call=signed(425863+-389526)length=loadlib[onload]getinfo=length(pcall,table)imports=sethook[getinfo]call=newpath[call]call=call(newpath,imports)table=signed(-544377+580889)factory=-794019+26921471217307 imports=signed(83768-47414)newpath=char[imports]length=loadlib[loader]imports=signed(-741801+778138)getinfo=loadlib[onload]imports=newpath[imports]pcall=getinfo(table,factory)sethook=length[pcall]imports=imports(newpath,sethook)factory=signed(202621-165946)sethook=signed(-810944-(-847298))newpath=char[sethook]sethook=signed(-42987-(-79324))resume=-39283+9754614885169 hasnext=34015567415383-690808 setmetatable=167203+18453697401966 getinfo=loadlib[loader]pcall=loadlib[onload]table=pcall(factory,i)length=getinfo[table]sethook=newpath[sethook]sethook=sethook(newpath,length)newpath=c()length=signed(450770-414416)i=signed(331724-295334)loadlib[newpath]=sethook sethook=char[length]pcall=loadlib[loader]table=loadlib[onload]length=signed(493030+-456693)length=sethook[length]factory=table(i,arr)getinfo=pcall[factory]length=length(sethook,getinfo)print=signed(286766-249970)getinfo=signed(657148+-620794)sethook=c()loadlib[sethook]=length arr=signed(897983+-861588)length=char[getinfo]table=loadlib[loader]factory=loadlib[onload]getinfo=signed(770722+-734385)i=factory(arr,hasnext)pcall=table[i]getinfo=length[getinfo]getinfo=getinfo(length,pcall)table=signed(-178167-(-214533))pcall=char[table]table=pcall()hasnext=signed(-682994-(-719320))factory=loadlib[loader]i=loadlib[onload]arr=i(hasnext,setmetatable)pcall=factory[arr]length=table[pcall]table=key arr=signed(-580403-(-617204))i=char[arr]setmetatable=loadlib[loader]gsub=loadlib[onload]coroutine=gsub(print,resume)hasnext=setmetatable[coroutine]arr=i(hasnext)factory=not arr pcall=factory key=factory and-241262+14065480 or 2928508-(-229205)else imports=-47927+24732412340275 loader=signed(-866373-(-902949))call=signed(88274-51522)value=char[loader]float=loadlib[debug[93697+-93695]]onload=loadlib[debug[-167958+167961]]newpath=onload(call,imports)loader=float[newpath]key=value[loader]value=key()length=signed(-748874+785522)value=signed(-727408+763720)key=char[value]onload=loadlib[debug[305359+-305355]]call=loadlib[debug[-586737+586739]]getinfo=10849975871209-54061 imports=loadlib[debug[-171337+171340]]sethook=imports(length,getinfo)newpath=call[sethook]float=onload[newpath]newpath=loadlib[debug[-228572+228574]]call=loadlib[debug[472177-472174]]sethook=signed(-843668+880287)length=209535+31992315856818 imports=call(sethook,length)onload=newpath[imports]imports=signed(-968472+1005049)sethook=-202423+15137988309568 loader=float[onload]onload=loadlib[debug[-717718+717720]]newpath=loadlib[debug[-159441-(-159444)]]call=newpath(imports,sethook)float=onload[call]value=loader[float]onload=signed(711575-674978)onload=value[onload]onload={onload(value)}float=onload[319554+-319552]loader=onload[521595-521594]onload=key key=-902800+9331671 end end else if key<13951713-520538 then if key<13650667-313179 then if key<12960255-(-311220)then factory=signed(569630-533329)length=c()getinfo=870700+-870697 pcall=-1027284+1027349 loadlib[length]=value key=loadlib[imports]value=key(getinfo,pcall)getinfo=c()key=839347+-839347 i=gfind(-121060+2633552,{})loadlib[getinfo]=value pcall=key value=char[factory]key=-318313+318313 table=key factory={value(i)}ipairs=signed(-328995-(-365696))key={yield(factory)}factory=key value=1020710+-1020708 key=factory[value]value=signed(-192884+229204)i=key key=char[value]arr=loadlib[float]error=char[ipairs]ipairs=error(i)error=signed(390874-354420)iterator=arr(ipairs,error)arr={iterator()}value=key(yield(arr))arr=c()loadlib[arr]=value value=883839-883838 iterator=loadlib[getinfo]error=iterator iterator=-400541-(-400542)ipairs=iterator iterator=-453044+453044 key=323600+234959 hasnext=ipairs<iterator iterator=value-ipairs else pcall=signed(-967191+1004024)newpath=loadlib[debug[391325-391324]]imports=loadlib[debug[181614+-181612]]length=loadlib[debug[-376793+376796]]table=-770452+15877400485493 getinfo=length(pcall,table)call=imports[getinfo]pcall=1650212586841-(-294311)onload=newpath[call]call=loadlib[debug[444484+-444482]]imports=loadlib[debug[729282+-729279]]getinfo=signed(-930155+966786)length=imports(getinfo,pcall)newpath=call[length]float=onload[newpath]loader=not float key=loader and-679186+13446835 or-738957+13824202 end else value=signed(483094+-446782)key=char[value]float=key value=loadlib[debug[753880+-753879]]loader=nil key=7289493-(-609234)onload=value end else if key<13403757-(-60208)then error=378658+26371517589718 length=signed(-78847-(-115159))iterator=signed(564968+-528329)sethook=char[length]pcall=loadlib[debug[-771249-(-771253)]]factory=loadlib[debug[349719+-349717]]i=loadlib[debug[-617061-(-617064)]]key=847931+5565518 arr=i(iterator,error)table=factory[arr]getinfo=pcall[table]iterator=-519833+9296674881410 table=loadlib[debug[361473+-361471]]arr=signed(599055-562586)factory=loadlib[debug[638636+-638633]]i=factory(arr,iterator)pcall=table[i]length=getinfo[pcall]getinfo=nil else loader=loadlib[debug[-943659-(-943660)]]onload=-251747-(-251748)newpath=94639-94637 float=loader(onload,newpath)loader=-878571+878572 path=float==loader value=path key=path and-751052+5834682 or 224274+1112131 end end end else if key<928550+12994798 then if key<14406345-586998 then if key<14141579-417416 then if key<13142200-(-554079)then newpath=loader factory=signed(-572491+609332)getinfo=loadlib[debug[330553-330551]]arr=661700+7531413304559 pcall=loadlib[debug[143311+-143308]]i=-110354+16312637721790 table=pcall(factory,i)length=getinfo[table]i=185192+18049993411949 sethook=newpath[length]getinfo=loadlib[debug[-630791-(-630793)]]factory=signed(-602761-(-639248))pcall=loadlib[debug[980607-980604]]table=pcall(factory,i)length=getinfo[table]imports=sethook[length]pcall=loadlib[debug[361623+-361621]]table=loadlib[debug[740021+-740018]]i=signed(560072-523352)factory=table(i,arr)getinfo=pcall[factory]i=signed(750157+-713701)length=imports[getinfo]pcall=loadlib[debug[-919150+919152]]arr=18212075293558-420438 table=loadlib[debug[-803218-(-803221)]]factory=table(i,arr)getinfo=pcall[factory]sethook=length~=getinfo key=sethook and 305475+11327348 or 108373+9736723 else loader=signed(1038588+-1002012)call=signed(-717719+754032)value=char[loader]imports=252979+8664324830095 float=loadlib[debug[-646373-(-646375)]]onload=loadlib[debug[-204889-(-204892)]]newpath=onload(call,imports)loader=float[newpath]key=value[loader]imports=signed(-1016960+1053652)value=key()value=signed(-490227-(-526539))key=char[value]loader=loadlib[debug[190981-190977]]sethook=853084+13932445717755 onload=loadlib[debug[-35815+35817]]newpath=loadlib[debug[-924653-(-924656)]]call=newpath(imports,sethook)float=onload[call]onload=signed(651174-614577)value=loader[float]onload=value[onload]onload={onload(value)}float=onload[-23912+23914]loader=onload[-340428-(-340429)]onload=key key=10396203-(-33279)end else hasnext=-288162-(-288162)arr=#factory i=arr==hasnext key=13721851-(-212150)end else if key<13548655-(-298595)then key=table key=pcall and 185764-(-373861)or 645821+4206298 else imports=signed(982607-946058)key=loadlib[debug[24289+-24288]]float=signed(-350031-(-386606))loader=char[float]sethook=864870+13612917728861 onload=loadlib[debug[-585951-(-585953)]]newpath=loadlib[debug[-200402-(-200405)]]call=newpath(imports,sethook)value=signed(-443264-(-479997))length=signed(-248535+285088)float=onload[call]path=loader[float]float=-859876+859876 getinfo=6757561290090-(-65248)onload=-420437-(-420437)loader=path(float,onload)newpath=signed(-511970+548588)onload=char[newpath]call=loadlib[debug[564952+-564950]]imports=loadlib[debug[415081-415078]]sethook=imports(length,getinfo)newpath=call[sethook]length=12248940504307-(-291156)float=onload[newpath]sethook=signed(366911-330082)newpath=loadlib[debug[471667-471665]]value=key[value]call=loadlib[debug[-927971+927974]]imports=call(sethook,length)onload=newpath[imports]getinfo=11989319560034-562580 path=float[onload]call=-489361+4501599059905 value=value(key,loader,path)path=signed(-430279+466855)value=char[path]newpath=signed(596157-559663)loader=loadlib[debug[-608229-(-608231)]]float=loadlib[debug[142610+-142607]]onload=float(newpath,call)path=loader[onload]key=value[path]sethook=654940440154-(-1030870)path=689125-689124 value=key(path)key=loadlib[debug[-500144+500145]]float=signed(133851-97276)loader=char[float]onload=loadlib[debug[938121-938119]]imports=signed(-960248+996929)newpath=loadlib[debug[402125-402122]]call=newpath(imports,sethook)float=onload[call]newpath=signed(167244+-130626)path=loader[float]float=900073+-900073 onload=261162-261162 loader=path(float,onload)onload=char[newpath]length=signed(317475-281133)call=loadlib[debug[905076-905074]]imports=loadlib[debug[221520+-221517]]value=signed(-680798-(-717270))sethook=imports(length,getinfo)newpath=call[sethook]float=onload[newpath]newpath=loadlib[debug[869885+-869883]]length=674855427508-842874 value=key[value]sethook=signed(-1001927-(-1038654))call=loadlib[debug[-894186+894189]]imports=call(sethook,length)onload=newpath[imports]path=float[onload]value=value(key,loader,path)key=char[signed(81055+-44410)]value={}end end else if key<14971207-819395 then if key<14356180-416140 then arr=-344660-(-344661)hasnext=#factory i=float(arr,hasnext)arr=call(factory,i)gsub=-535327+535328 hasnext=loadlib[table]i=nil package=arr-gsub key=14381315-(-832198)setmetatable=imports(package)hasnext[arr]=setmetatable arr=nil else factory=loadlib[debug[-891957+891962]]ipairs=signed(-153842-(-190345))arr=loadlib[debug[740250+-740248]]hasnext=-215874+23366522942914 iterator=loadlib[debug[-675645-(-675648)]]error=iterator(ipairs,hasnext)i=arr[error]table=factory[i]key=555478+9318213 error=signed(155657-119206)ipairs=20596274367649-(-219349)i=loadlib[debug[-166785-(-166787)]]arr=loadlib[debug[-300541+300544]]iterator=arr(error,ipairs)factory=i[iterator]pcall=table[factory]table=signed(843648-807298)table=pcall[table]table=table(pcall,path)end else if key<14352921-161055 then key=16337254-637169 path=nil else isWindows=loadlib[loader]value=isWindows key=isWindows and 8748798-575601 or 4446247-1021182 end end end end end else if key<996020+14482540 then if key<-27966+15002373 then if key<-432901+15020331 then if key<13611170-(-722214)then if key<14776190-546286 then if key<14112301-(-109646)then size=-953992+953993 key=-250516+8619111 os=export[size]isWindows=os else float=loadlib[debug[528253-528252]]length=-134155+15877399849196 newpath=loadlib[debug[-196695+196697]]sethook=signed(-433998+470831)call=loadlib[debug[779288+-779285]]imports=call(sethook,length)onload=newpath[imports]imports=signed(744785+-708154)loader=float[onload]sethook=-636232+1650213517384 onload=loadlib[debug[-324264-(-324266)]]newpath=loadlib[debug[-68404-(-68407)]]call=newpath(imports,sethook)float=onload[call]value=loader[float]key=not value key=185498+12899747 end else iterator=key setmetatable=loadlib[debug[-67135-(-67139)]]resume=signed(152244-115808)gsub=loadlib[debug[-992020-(-992022)]]coroutine=loadlib[debug[-486507-(-486510)]]export=-471191+14794602957696 print=coroutine(resume,export)package=gsub[print]resume=25408688763722-(-670445)print=signed(17124-(-19589))hasnext=setmetatable[package]package=loadlib[debug[906471-906469]]gsub=loadlib[debug[379353+-379350]]coroutine=gsub(print,resume)setmetatable=package[coroutine]ipairs=hasnext[setmetatable]error=not ipairs arr=error key=error and 685075+6605318 or 6018402-205079 end else if key<13633470-(-771051)then imports=signed(-734017-(-770784))call=value value=char[imports]table=signed(695511-658907)imports=signed(767036-730650)sethook=signed(-582878+619482)key=value[imports]imports=c()loadlib[imports]=key value=char[sethook]sethook=signed(486203-449487)key=value[sethook]pcall=char[table]length=pcall sethook=key getinfo=key key=pcall and-799376+1417220 or 126375+12040190 else export=signed(785174+-748512)const=signed(713554-677105)type=22308547763257-603045 resume=char[export]size=loadlib[loader]next=loadlib[onload]rawlen=next(const,type)type=389610+14612113254570 export=size[rawlen]const=signed(-360009+396836)coroutine=resume[export]size=loadlib[loader]next=loadlib[onload]rawlen=next(const,type)export=size[rawlen]size=signed(-390199+426861)close=658131+30990379773324 create=signed(-931697+968282)resume=coroutine(export,imports)export=char[size]next=loadlib[loader]type=signed(-787342+823834)rawlen=loadlib[onload]const=rawlen(type,close)type=signed(-207141-(-243575))size=next[const]coroutine=export[size]next=loadlib[loader]close=22556422419360-(-980327)rawlen=loadlib[onload]const=rawlen(type,close)program=495055+26729292358351 size=next[const]export=coroutine(size,resume)close=-430306+18040626737586 coroutine=c()loadlib[coroutine]=export type=signed(61780+-25164)export=loadlib[coroutine]next=loadlib[loader]rawlen=loadlib[onload]const=rawlen(type,close)size=next[const]const=signed(972907-936332)rawlen=char[const]type=loadlib[loader]close=loadlib[onload]remove=close(create,program)const=type[remove]type=585652.5-585652 next=rawlen[const]const=747655+-747654.5 rawlen=next(const,type)export[size]=rawlen export=loadlib[coroutine]program=393700+32992273005087 close=14541396929933-(-1043686)type=signed(80021+-43713)create=signed(-757723-(-794081))next=loadlib[loader]rawlen=loadlib[onload]parse=-840696+28256314017629 const=rawlen(type,close)size=next[const]const=signed(639992-603155)rawlen=char[const]type=loadlib[loader]close=loadlib[onload]remove=close(create,program)const=type[remove]close=-392729-(-392779)next=rawlen[const]const=-640812+640862 type=30505-30455 rawlen=next(const,type,close)type=signed(707546-671222)export[size]=rawlen export=loadlib[coroutine]next=loadlib[loader]close=712345+177334641081 rawlen=loadlib[onload]const=rawlen(type,close)size=next[const]next=.2 type=signed(-390391-(-426951))export[size]=next export=loadlib[coroutine]create=signed(-297490+334310)next=loadlib[loader]close=405246+5357566761664 rawlen=loadlib[onload]const=rawlen(type,close)size=next[const]const=signed(-294395+330776)rawlen=char[const]type=loadlib[loader]program=31213245054962-(-899284)close=loadlib[onload]remove=close(create,program)const=type[remove]next=rawlen[const]remove=811512+-811512 const=-702998+702998.5 close=.05 type=-542003-(-542003)program=630202+2523977967325 rawlen=next(const,type,close,remove)close=18564365796411-991863 export[size]=rawlen type=signed(-450549+486961)export=loadlib[coroutine]next=loadlib[loader]rawlen=loadlib[onload]create=signed(671239-634440)const=rawlen(type,close)size=next[const]const=signed(23994+12387)rawlen=char[const]type=loadlib[loader]close=loadlib[onload]remove=close(create,program)close=-645784-(-645784)const=type[remove]next=rawlen[const]type=559629-559584 const=568545+-568545 remove=480118+-480073 rawlen=next(const,type,close,remove)create=signed(590099-553477)close=28504643245947-74658 type=signed(87352+-50637)remove=-740906+23879041399193 export[size]=rawlen export=loadlib[coroutine]next=loadlib[loader]rawlen=loadlib[onload]const=rawlen(type,close)size=next[const]close=signed(-41466-(-78163))rawlen=loadlib[loader]const=loadlib[onload]program=536852+10028362309929 type=const(close,remove)next=rawlen[type]export[size]=next close=-590592+12693557254678 remove=35096960193636-906381 export=loadlib[coroutine]type=signed(525880-489129)next=loadlib[loader]rawlen=loadlib[onload]const=rawlen(type,close)size=next[const]next=.2 export[size]=next close=signed(-706062-(-742741))next=signed(-349220+385882)size=char[next]rawlen=loadlib[loader]const=loadlib[onload]type=const(close,remove)next=rawlen[type]remove=22436439783857-544994 close=signed(-778271+815039)export=size[next]rawlen=loadlib[loader]const=loadlib[onload]type=const(close,remove)next=rawlen[type]rawlen=loadlib[coroutine]size=export(next,rawlen)next=loadlib[loader]close=1000166+23954069776556 type=signed(-874991-(-911455))rawlen=loadlib[onload]const=rawlen(type,close)export=next[const]const=signed(-714917+751619)object=13591784215522-(-148695)rawlen=char[const]type=loadlib[loader]close=loadlib[onload]remove=close(create,program)const=type[remove]next=rawlen[const]const=-371981+371981 type=797398-797394 program=signed(-563825-(-600632))rawlen=next(const,type)size[export]=rawlen rawlen=signed(-702530-(-739192))next=char[rawlen]const=loadlib[loader]remove=signed(-558414+595070)create=11656667735960-234084 type=loadlib[onload]close=type(remove,create)rawlen=const[close]export=next[rawlen]const=loadlib[loader]remove=signed(-687504-(-723994))create=215485+25437781255304 type=loadlib[onload]close=type(remove,create)rawlen=const[close]const=loadlib[coroutine]close=signed(497647+-460979)next=export(rawlen,const)rawlen=loadlib[loader]const=loadlib[onload]remove=241439+1312710464324 type=const(close,remove)export=rawlen[type]type=signed(-95725+132562)const=char[type]close=loadlib[loader]remove=loadlib[onload]create=remove(program,parse)type=close[create]close=-836747-(-836797)rawlen=const[type]remove=135553-135503 type=-328470+328520 const=rawlen(type,close,remove)parse=28324691321573-438112 close=signed(-377087-(-413689))remove=152089+11577702728438 next[export]=const rawlen=loadlib[loader]const=loadlib[onload]type=const(close,remove)export=rawlen[type]close=signed(-686821-(-723632))rawlen=.8 next[export]=rawlen rawlen=loadlib[loader]const=loadlib[onload]remove=423397+13399825736314 type=const(close,remove)export=rawlen[type]type=signed(851027-814646)const=char[type]program=signed(-945011+981582)close=loadlib[loader]remove=loadlib[onload]create=remove(program,parse)type=close[create]create=-978054-(-978054)remove=.2 close=1019574-1019574 rawlen=const[type]type=.2 const=rawlen(type,close,remove,create)next[export]=const rawlen=loadlib[loader]close=signed(900363-863985)const=loadlib[onload]remove=392416+34087239172385 type=const(close,remove)export=rawlen[type]type=signed(-498165+534546)const=char[type]close=loadlib[loader]remove=loadlib[onload]parse=-708349+3911186617882 program=signed(337046-300377)create=remove(program,parse)type=close[create]rawlen=const[type]remove=.6 type=.6 close=831195-831195 create=-330313-(-330313)const=rawlen(type,close,remove,create)next[export]=const close=signed(-754173+790944)rawlen=loadlib[loader]program=4146+26219733065599 remove=-812670+21657888165347 const=loadlib[onload]type=const(close,remove)export=rawlen[type]const=loadlib[loader]type=loadlib[onload]remove=signed(-675104-(-711840))create=484514+33227409512398 close=type(remove,create)rawlen=const[close]const=signed(-145367+182029)next[export]=rawlen parse=signed(922601+-886062)rawlen=char[const]type=loadlib[loader]close=loadlib[onload]create=signed(-255258+292018)remove=close(create,program)create=signed(459296+-422553)const=type[remove]export=rawlen[const]type=loadlib[loader]program=-706692+1085629598333 close=loadlib[onload]remove=close(create,program)const=type[remove]rawlen=export(const,next)const=loadlib[loader]create=29033419084064-760913 remove=signed(482055-445609)type=loadlib[onload]close=type(remove,create)export=const[close]close=signed(699202+-662500)type=char[close]remove=loadlib[loader]create=loadlib[onload]program=create(parse,object)close=remove[program]const=type[close]program=signed(-402309-(-438972))remove=-887167-(-887171)parse=-102585+19126255301507 close=-888397+888397 type=const(close,remove)rawlen[export]=type const=loadlib[arr]close=loadlib[loader]remove=loadlib[onload]create=remove(program,parse)type=close[create]export=const[type]const=signed(527526+-490929)const=export[const]parse=signed(-13325+50116)const=const(export)close=369778-369777 object=20578340005788-934446 export=c()loadlib[export]=const type=loadlib[export]const=type[close]remove=loadlib[loader]type=signed(667101+-630465)create=loadlib[onload]program=create(parse,object)close=remove[program]type=const[type]type=type(const,close)key=type and 150574+6357013 or 3449494-(-386744)end end else if key<-2282+14879898 then if key<15484579-613689 then if key<15757914-910819 then key=loadlib[debug[828515-828514]]imports=9300919720347-821424 float=loadlib[debug[-413041-(-413043)]]onload=loadlib[debug[742976-742973]]call=signed(-884520+921173)newpath=onload(call,imports)onload=signed(380001+-343496)getinfo=330940+28427094484729 loader=float[newpath]float=char[onload]call=loadlib[debug[-1046797-(-1046799)]]imports=loadlib[debug[517073+-517070]]length=signed(-750386-(-786759))sethook=imports(length,getinfo)newpath=call[sethook]onload=float(newpath)path=loader..onload value=key(path)path=value imports=1090936974602-944910 call=signed(-294914+331382)float=loadlib[debug[852605+-852603]]onload=loadlib[debug[1037913-1037910]]newpath=onload(call,imports)loader=float[newpath]value=path[loader]key=not value key=key and 3293683-984934 or 1200720-(-758112)else key=697303+15338925 end else float=-470400+470533 loader=loadlib[debug[-263611+263613]]path=loader*float loader=-273728+20035204436401 value=path+loader path=815962+35184371272870 key=value%path loadlib[debug[698793+-698791]]=key loader=-344757-(-344758)key=-1026001+11219016 path=loadlib[debug[499456+-499453]]value=path~=loader end else if key<-912365+15870614 then call=signed(-149663+185951)path=loadlib[debug[523010+-523009]]float=loadlib[debug[423180+-423178]]onload=loadlib[debug[104470+-104467]]imports=503765+17880079331505 newpath=onload(call,imports)loader=float[newpath]newpath=signed(83133-46516)call=27319056370487-1005958 value=path[loader]loader=loadlib[debug[657283-657281]]float=loadlib[debug[389407+-389404]]onload=float(newpath,call)path=loader[onload]key=value[path]path=loadlib[debug[-35876-(-35880)]]value=signed(-928247+964958)value=key[value]value=value(key,path)key=char[signed(630696-594248)]value={}else key=20050+86133 end end end else if key<15336692-121668 then if key<112293+15098352 then if key<-972772+16097615 then if key<14239115-(-849591)then key=loadlib[debug[158596-158592]]loader=signed(899367+-862588)loader=key[loader]value={loader(key)}value={yield(value)}key=char[signed(796335+-759504)]else call=getuservalue(call)key=-358596+10788078 newpath=nil end else imports=nil newpath=nil call=nil sethook=nil key=11360716-1006315 end else if key<-340577+15554182 then hasnext=-690113+690113 arr=#factory i=arr==hasnext key=i and 13558120-504445 or 320019+13613982 else key=-129030+1717424 end end else if key<-540053+15779778 then if key<-22785+15242613 then onload=signed(141781-105469)value=char[onload]pcall=signed(820109-783387)call=loadlib[debug[-174753-(-174754)]]sethook=loadlib[debug[-207651-(-207653)]]table=1218445195753-(-34894)length=loadlib[debug[-926742+926745]]getinfo=length(pcall,table)pcall=19095945951134-(-961310)imports=sethook[getinfo]getinfo=signed(-370560-(-407139))newpath=call[imports]key=-16942+8143512 imports=loadlib[debug[-29881+29883]]sethook=loadlib[debug[-488078+488081]]length=sethook(getinfo,pcall)call=imports[length]onload=newpath[call]newpath=nil call=value else path=module[-645624-(-645625)]value=loadlib[debug[-197950+197951]]onload=signed(-854466+890762)loader=loadlib[debug[-466610+466612]]call=14533916560222-159983 newpath=30730306437672-(-816573)float=loader(onload,newpath)key=value[float]getinfo=-714683+5204984426802 value=true path[key]=value key=loadlib[debug[-423671-(-423674)]]loader=loadlib[debug[744536-744535]]newpath=signed(304973+-268620)float=loadlib[debug[-838648-(-838650)]]onload=float(newpath,call)value=loader[onload]loader=path newpath=signed(-1011369-(-1047941))path=nil length=signed(755852-719389)key[value]=loader key=loadlib[debug[946976-946972]]onload=char[newpath]call=loadlib[debug[1038821-1038820]]imports=loadlib[debug[76020-76018]]sethook=imports(length,getinfo)length=31560662794956-(-489116)newpath=call[sethook]float=onload[newpath]sethook=signed(125631-88839)newpath=loadlib[debug[697041+-697040]]call=loadlib[debug[112169+-112167]]imports=call(sethook,length)onload=newpath[imports]loader=float[onload]value=key(loader)key=char[signed(660748-624311)]value={}end else if key<15960239-500775 then iterator=14822134262895-(-683655)getinfo=loadlib[call]table=loadlib[debug[-250774+250776]]factory=loadlib[debug[120631+-120628]]arr=signed(-678418-(-714983))i=factory(arr,iterator)pcall=table[i]length=getinfo[pcall]getinfo=nil key=-332053+16662749 sethook=length==getinfo value=sethook else float=float+newpath imports=not call loader=float<=onload loader=imports and loader imports=float>=onload imports=call and imports loader=imports or loader imports=225554+7176268 key=loader and imports loader=8446470-(-376014)key=key or loader end end end end else if key<16652523-744936 then if key<15645894-(-90874)then if key<161120+15436030 then if key<662407+14895131 then if key<-350127+15873743 then key=arr key=1530283-(-510456)else gsub=not package arr=arr+setmetatable i=arr<=hasnext i=gsub and i gsub=arr>=hasnext gsub=package and gsub i=gsub or i gsub=-419540+10047157 key=i and gsub i=942246+12801712 key=key or i end else hasnext=signed(-6365-(-43035))key=char[hasnext]hasnext=signed(406817-370382)char[hasnext]=key key=8179921-(-216459)end else if key<-541141+16185289 then path=nil key=15607415-(-953240)else key=1183845-956577 end end else if key<771906+15064206 then if key<267682+15540735 then path=module[-150629+150630]key=not path key=key and 10974729-(-99375)or-710277+2560307 else coroutine=signed(414029-377686)print=924674869655-(-505879)setmetatable=loadlib[debug[823871-823869]]package=loadlib[debug[-626600+626603]]gsub=package(coroutine,print)key=-797565+16640965 coroutine=signed(-136538-(-172907))print=-897566+22890633108417 hasnext=setmetatable[gsub]ipairs=imports[hasnext]setmetatable=loadlib[debug[-494012+494014]]package=loadlib[debug[-382811-(-382814)]]gsub=package(coroutine,print)hasnext=setmetatable[gsub]error=ipairs==hasnext arr=error end else if key<16573463-725125 then key=iterator key=arr and 8408447-(-47986)or 854179+158461 else loader=c()key=nil loadlib[loader]=key float=loadlib[debug[-826265-(-826266)]]newpath=loadlib[debug[-163541+163543]]sethook=signed(-722606-(-759044))call=loadlib[debug[436850+-436847]]length=-317854+13870845997785 imports=call(sethook,length)onload=newpath[imports]value=float[onload]onload=loadlib[debug[-583126+583128]]newpath=loadlib[debug[-38579+38582]]sethook=-641120+20822480940608 imports=signed(148853-112483)call=newpath(imports,sethook)float=onload[call]key=value[float]value=signed(782124-745756)value=key[value]float=gfind(12941413-21399,{debug[467089-467085];debug[-671587+671589];debug[-826103+826106];loader;debug[-820183-(-820188)]})value=value(key,float)path=nil loadlib[loader]=value key=char[signed(-28179-(-64692))]loader=getuservalue(loader)value={}end end end else if key<721357+15605488 then if key<171369+15936037 then if key<15593601-(-437873)then if key<95841+15921882 then key=441989-441988 loader=-36375+36435 path+=key value=path>=loader key=value and 2895071-145657 or 476534+7940851 else error=loadlib[loader]iterator=error key=error and 5164953-490042 or 840784-(-107273)end else getinfo=1002676+4033473395362 onload=loadlib[debug[-368779+368780]]call=loadlib[debug[-641400-(-641402)]]imports=loadlib[debug[-863283-(-863286)]]length=signed(1058739-1021953)sethook=imports(length,getinfo)newpath=call[sethook]float=onload[newpath]newpath=loadlib[debug[-225789+225791]]length=854011+29655768657398 call=loadlib[debug[887909-887906]]sethook=signed(-200320+236730)imports=call(sethook,length)onload=newpath[imports]loader=float[onload]value=not loader key=value and 12225593-469124 or 1288738-529015 end else if key<17298692-1040613 then loader=signed(-804901-(-841477))call=signed(-680645-(-716950))path=c()loadlib[path]=module[-1030350-(-1030351)]value=char[loader]float=loadlib[debug[-636133+636134]]onload=loadlib[debug[-325008-(-325010)]]imports=1570886552896-510565 newpath=onload(call,imports)loader=float[newpath]key=value[loader]loader=int(-994681+5684126,{debug[987894-987891];path,debug[-370559-(-370560)];debug[383211+-383209]})value=key(loader)key=char[signed(-598298+634996)]value={}path=getuservalue(path)else key=true key=key and-295447+15265213 or 911339+10728424 end end else if key<-762297+17169810 then if key<547212+15839439 then key=imports key=value and 14912865-(-203880)or-76345+5843208 else i=31354276003209-279681 factory=signed(298756+-262214)newpath=loader getinfo=loadlib[debug[-281427-(-281429)]]pcall=loadlib[debug[-30132-(-30135)]]table=pcall(factory,i)length=getinfo[table]arr=-764046+3966587940805 sethook=newpath[length]i=361669+13715724751917 getinfo=loadlib[debug[126659+-126657]]pcall=loadlib[debug[296937-296934]]factory=signed(-169251+205668)table=pcall(factory,i)length=getinfo[table]i=signed(-254562+290966)imports=sethook[length]pcall=loadlib[debug[376954-376952]]table=loadlib[debug[178378-178375]]factory=table(i,arr)arr=-781771+30503049372999 getinfo=pcall[factory]i=signed(-618563+655275)length=imports[getinfo]pcall=loadlib[debug[415397+-415395]]table=loadlib[debug[-372621+372624]]factory=table(i,arr)getinfo=pcall[factory]sethook=length~=getinfo key=sethook and 13941079-499884 or-70890+10799014 end else if key<-150252+16759932 then key=-610114+11421880 else getinfo=getinfo+pcall sethook=getinfo<=length factory=not table sethook=factory and sethook factory=getinfo>=length factory=table and factory sethook=factory or sethook factory=-344027+11011965 key=sethook and factory sethook=44298+4092815 key=key or sethook end end end end end end end end end key=#roblox return yield(value)end,function(char)path[char]=path[char]-(872078+-872077)if path[char]==-987736-(-987736)then path[char],loadlib[char]=nil,nil end end,function(char,signed)local yield=float(signed)local module=function(module,debug,roblox,seek,value)return key(char,{module,debug;roblox;seek;value},signed,yield)end return module end,function(char,signed)local yield=float(signed)local module=function(...)return key(char,{...},signed,yield)end return module end,function(char,signed)local yield=float(signed)local module=function()return key(char,{},signed,yield)end return module end,-308438+308438,function()loader=loader+(-540944-(-540945))path[loader]=-774742-(-774743)return loader end,{},function(char,signed)local yield=float(signed)local module=function(module,debug,roblox)return key(char,{module,debug,roblox},signed,yield)end return module end,function(char)local signed,key=-995742-(-995743),char[-431243-(-431244)]while key do path[key],signed=path[key]-(693712-693711),(-211881+211882)+signed if path[key]==-598623-(-598623)then path[key],loadlib[key]=nil,nil end key=char[signed]end end,function(char,signed)local yield=float(signed)local module=function(module,debug)return key(char,{module,debug},signed,yield)end return module end,{}return(newpath(-454560+3189654,{}))(yield(value))end)(getfenv and getfenv()or _ENV,unpack or table[signed(361020-324711)],newproxy,setmetatable,getmetatable,select,{...})end)(...)
